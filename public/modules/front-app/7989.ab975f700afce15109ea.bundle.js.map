{"version":3,"sources":["webpack:///./resources/modules/admin/src/components/altrp-select/AltrpSelect.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PageButton.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/PaginationComponent.js","webpack:///./resources/modules/editor/src/js/components/altrp-table/components/Pagination.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js"],"names":["renderScrollbar","props","autoHeight","children","AltrpSelect","loadOptions","searchString","callback","options","optionsResource","search","setState","state","optionsRoute","Resource","route","selectRef","React","customStyles","control","base","boxShadow","borderColor","isFocused","menuPortal","zIndex","selectProps","onChange","this","placeholder","noOptionsMessage","styles","menuPortalTarget","document","body","menuPlacement","menuPosition","onKeyDown","components","MenusList","captureMenuScroll","isDisabled","ref","_","assign","isArray","value","map","item","_i","label","isString","isNumber","isObject","forEach","option","find","o","Component","TemplateLoader","resource","templatesCache","AltrpModel","get","window","__altrp_settings__","templateId","force","update","Number","hasProperty","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","loadTemplate","templateData","JSON","parse","frontElementsFabric","templateLoader","PageButton","index","pageIndex","gotoPage","className","onClick","styled","settings","width_count_item","getResponsiveSetting","height_count_item","size","unit","Pagination","nextPage","previousPage","setPageSize","pageCount","pageSize","widgetId","inner_page_count_options","inner_page_type","current_page_text","inner_page_count","next_icon","prev_icon","first_last_buttons_count","middle_buttons_count","posts_pagination_type","is_with_ellipsis","countOptions","useMemo","split","pageText","replace","generateButtonsArray","key","Array","hide_pre_page_button","disabled","dangerouslySetInnerHTML","__html","prev_text","renderAssetIcon","hide_pages_buttons_button","hide_next_page_button","next_text","hide_page_input","type","defaultValue","e","page","target","hide_pagination_select","classNamePrefix","isSearchable","FrontElementsFabric","object","parent","pageId","models","element","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c"],"mappings":"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","file":"7989.ab975f700afce15109ea.bundle.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport AsyncSelect from \"react-select/async\";\r\nimport Resource from \"../../../../editor/src/js/classes/Resource\";\r\nimport Select from \"react-select\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport {parseParamsFromString, parseURLTemplate} from \"../../../../front-app/src/js/helpers\";\r\n\r\nexport const renderScrollbar = (props) => {\r\n  return <Scrollbars autoHeight >{props.children}</Scrollbars>;\r\n};\r\n\r\nclass AltrpSelect extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      options: props.options || [],\r\n    };\r\n    if(props.optionsRoute){\r\n      this.optionsResource = new Resource({route: props.optionsRoute});\r\n    }\r\n    this.selectRef = React.createRef();\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  async componentDidMount(){\r\n\r\n  }\r\n  /**\r\n   * изменение значения\r\n   */\r\n  onChange(){\r\n\r\n  }\r\n\r\n  /**\r\n   *\r\n   */\r\n  loadOptions = async (searchString, callback)=>{\r\n    let options = [];\r\n    if(this.optionsResource){\r\n      options = await this.optionsResource.search(searchString);\r\n    }\r\n    this.setState(state=>({\r\n      ...state,\r\n      options\r\n    }));\r\n    return callback(options);\r\n  };\r\n\r\n  render(){\r\n    const customStyles = {\r\n      control: (base, state) => ({\r\n        ...base,\r\n        boxShadow: \"none\",\r\n        borderColor: state.isFocused ? \"hsl(0,0%,80%)\" : \"hsl(0,0%,80%)\",\r\n        \"&:hover\": {\r\n          borderColor: \"hsl(0,0%,80%)\"\r\n        }\r\n      }),\r\n      menuPortal: base => ({ ...base, zIndex: 99999 }),\r\n      // option: (provided, state) => ({\r\n      //   ...provided,\r\n      //   backgroundColor: state.isSelected ?\r\n      //     background.selected.color :\r\n      //     state.isFocused ? background.focused.color : background.normal.color\r\n      // })\r\n    };\r\n\r\n    let selectProps = {\r\n      onChange: this.onChange,\r\n      options: this.state.options || [],\r\n      placeholder: this.props.placeholder,\r\n      loadOptions: this.loadOptions,\r\n      noOptionsMessage: this.props.noOptionsMessage || (() => \"not found\"),\r\n      styles: customStyles,\r\n      menuPortalTarget: document.body,\r\n      menuPlacement: 'auto',\r\n      menuPosition: 'absolute',\r\n      onKeyDown : this.onKeyDown,\r\n      components: { MenusList: renderScrollbar },\r\n      captureMenuScroll: false,\r\n      isDisabled: this.state.isDisabled,\r\n      ref: this.selectRef,\r\n    };\r\n\r\n    _.assign(selectProps, this.props);\r\n\r\n    if(_.isArray(selectProps.value)){\r\n      selectProps.value = selectProps.value.map(item => {\r\n        let _i = {\r\n          label: '',\r\n          value: '',\r\n        };\r\n        if(_.isString(item) || _.isNumber(item)){\r\n          _i.value = item;\r\n          _i.label = item;\r\n        } else if(_.isObject(item)) {\r\n          return item;\r\n        }\r\n        if(_.isArray(selectProps.options)){\r\n          selectProps.options.forEach(option=>{\r\n            if(option.value === _i.value){\r\n              _i = {...option,};\r\n            }\r\n          });\r\n        }\r\n        return _i;\r\n      });\r\n    }\r\n    if(selectProps.value && ! _.isObject(selectProps.value)){\r\n      selectProps.value = selectProps.options.find(o=>{\r\n        return o.value == selectProps.value;\r\n      });\r\n    }\r\n    if( this.optionsResource){\r\n      return <AsyncSelect {...selectProps} />\r\n    } else {\r\n      return <Select {...selectProps} />\r\n    }\r\n  }\r\n}\r\n\r\nexport default AltrpSelect\r\n\r\n\r\n\r\n","import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nexport class TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel(_.get(window.__altrp_settings__, 'templates_data',{}));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   * @return {[]}\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n\r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} templateId\r\n   * @returns {null|{}}\r\n   */\r\n  mbGetParsedTemplate(templateId){\r\n    if(! this.templatesCache.hasProperty(templateId)){\r\n      return null;\r\n    }\r\n    let templateData = _.get(this.templatesCache.getProperty(templateId), 'data');\r\n    templateData = JSON.parse(templateData);\r\n    return frontElementsFabric.parseData(templateData)\r\n  }\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;\r\n","\r\nexport default function PageButton({ index, pageIndex, gotoPage }) {\r\n  return <button\r\n      className={`altrp-pagination-pages__item ${(index === pageIndex) ? 'active' : ''}`}\r\n      onClick={() => gotoPage(index)}\r\n  >\r\n    {index + 1}\r\n  </button>\r\n}","import styled from 'styled-components';\r\nimport {getResponsiveSetting} from \"../../../../../../front-app/src/js/helpers\";\r\n\r\nconst PaginationComponent = styled.div`\r\n& .altrp-pagination-pages__item{\r\n${({settings}) => {\r\n  let styles = '';\r\n  const width_count_item = getResponsiveSetting(settings, 'width_count_item');\r\n  const height_count_item = getResponsiveSetting(settings, 'height_count_item');\r\n  if (!width_count_item) {\r\n    styles += `width: 35px;`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  } else if(width_count_item.size && width_count_item.unit){\r\n    styles += `width: ${width_count_item.size}${width_count_item.unit};`;\r\n    styles += `padding-left: 0;`;\r\n    styles += `padding-right: 0;`;\r\n  }\r\n  if (! height_count_item) {\r\n    styles += `height: 35px;`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  } else if(height_count_item.size && height_count_item.unit){\r\n    styles += `height: ${height_count_item.size}${height_count_item.unit};`;\r\n    styles += `padding-top: 0;`;\r\n    styles += `padding-bottom: 0;`;\r\n  }\r\n  return styles;\r\n}}\r\n}\r\n`;\r\n\r\nexport default PaginationComponent;","import {generateButtonsArray, renderAssetIcon} from \"../../../../../../front-app/src/js/helpers\";\r\nimport PageButton from \"./PageButton\";\r\nimport AltrpSelect from \"../../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport PaginationComponent from \"./PaginationComponent\";\r\n\r\n/**\r\n *\r\n * @param {{}}settings\r\n * @param {function} nextPage\r\n * @param {function} previousPage\r\n * @param {function} setPageSize\r\n * @param {function} gotoPage\r\n * @param {int} pageIndex\r\n * @param {int} pageCount\r\n * @param {int} pageSize\r\n * @param {string} widgetId\r\n * @return {*}\r\n */\r\nexport default function Pagination(\r\n    {\r\n      settings,\r\n      nextPage,\r\n      previousPage,\r\n      setPageSize,\r\n      pageIndex,\r\n      pageCount,\r\n      pageSize,\r\n      widgetId,\r\n      gotoPage,\r\n    }) {\r\n  const {\r\n    inner_page_count_options,\r\n    inner_page_type,\r\n    current_page_text,\r\n    inner_page_count,\r\n    next_icon, prev_icon,\r\n    first_last_buttons_count,\r\n    middle_buttons_count,\r\n    posts_pagination_type ,\r\n    is_with_ellipsis\r\n  } = settings;\r\n  let countOptions =\r\n      React.useMemo(() => {\r\n        let countOptions = null;\r\n        if (inner_page_count_options) {\r\n          countOptions = inner_page_count_options.split('\\n');\r\n          countOptions = countOptions.map(o => ({ value: Number(o), label: Number(o) }));\r\n        }\r\n        return countOptions\r\n      }, [inner_page_count_options]);\r\n\r\n  const pageText = React.useMemo(() => {\r\n    let pageText = current_page_text || 'Current Page: {{page}}';\r\n    pageText = pageText.replace('{{page}}', pageIndex + 1).replace('{{page_count}}', pageCount);\r\n    if (inner_page_type === 'pages' || posts_pagination_type === 'pages') {\r\n      // let paginatePageCount = Number(inner_page_count) || pageCount;\r\n      // if (paginatePageCount <= 0 || paginatePageCount > pageCount) {\r\n      //   paginatePageCount = pageCount;\r\n      // }\r\n      // let array = [];\r\n      // for (let i = 0; i < paginatePageCount; i++) {\r\n      //   array.push(i);\r\n      // }\r\n      // let startIndex = (paginatePageCount === pageCount) ? 1 : (pageIndex + 1) - Math.floor(paginatePageCount / 2);\r\n      // if (startIndex <= 0) {\r\n      //   startIndex = 1;\r\n      // }\r\n      // if (startIndex + paginatePageCount > pageCount) {\r\n      //   startIndex = pageCount - paginatePageCount + 1;\r\n      // }\r\n      // pageText = <div className=\"altrp-pagination-pages\">{array.map((i, idx) => {\r\n      //   idx += startIndex;\r\n      //   return <button className={`altrp-pagination-pages__item ${(idx - 1 === pageIndex) ? 'active' : ''}`}\r\n      //     key={idx}\r\n      //     onClick={() => {\r\n      //       gotoPage(idx - 1);\r\n      //     }}>\r\n      //     {idx}\r\n      //   </button>\r\n\r\n      // })}</div>\r\n      return <div className=\"altrp-pagination-pages\">\r\n        {(pageCount > first_last_buttons_count * 2 + middle_buttons_count)\r\n        && first_last_buttons_count && middle_buttons_count\r\n            ? generateButtonsArray(pageIndex, pageCount, first_last_buttons_count, middle_buttons_count)\r\n                .map((item, index) => item === \"ellipsis\"\r\n                    ? is_with_ellipsis ? <div key={item + index} className=\"altrp-pagination__ellipsis\">...</div> : <span>&nbsp;</span>\r\n                    : <PageButton key={item} index={item} pageIndex={pageIndex} gotoPage={gotoPage} />)\r\n            : [...Array(pageCount)].map((_, index) => <PageButton key={index} index={index} pageIndex={pageIndex} gotoPage={gotoPage} />)}\r\n      </div>\r\n    }\r\n    return pageText;\r\n  }, [current_page_text, pageIndex, pageCount, inner_page_type, inner_page_count, settings]);\r\n  if(inner_page_type === 'none'){\r\n    return null;\r\n  }\r\n  return <PaginationComponent className=\"altrp-pagination\" settings={settings}>\r\n    {!settings.hide_pre_page_button && <button className={\"altrp-pagination__previous\"}\r\n                                               onClick={() => {\r\n                                                 previousPage();\r\n                                               }}\r\n                                               disabled={pageIndex === 0}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.prev_text) ? settings.prev_text : 'Previous Page' }} />\r\n      {renderAssetIcon(prev_icon)}\r\n    </button>}\r\n    {!settings.hide_pages_buttons_button && <div className=\"altrp-pagination__count\">\r\n      {pageText}\r\n    </div>}\r\n    {!settings.hide_next_page_button && <button className=\"altrp-pagination__next\"\r\n                                                onClick={() => {\r\n                                                  nextPage()\r\n                                                }}\r\n                                                disabled={pageCount === pageIndex + 1}>\r\n      <span dangerouslySetInnerHTML={{ __html: _.isString(settings.next_text) ? settings.next_text : 'Next Page' }} />\r\n      {renderAssetIcon(next_icon)}\r\n    </button>}\r\n    {! settings.hide_page_input &&\r\n    <input className=\"altrp-pagination__goto-page\"\r\n           type=\"number\"\r\n           defaultValue={pageIndex + 1}\r\n           onChange={(e) => {\r\n             const page = e.target.value ? Number(e.target.value) - 1 : 0;\r\n             gotoPage(page)\r\n           }} />}\r\n    {! settings.hide_pagination_select && countOptions &&\r\n    <AltrpSelect className=\"altrp-pagination__select-size\"\r\n      options={countOptions}\r\n      classNamePrefix={widgetId + ' altrp-field-select2'}\r\n      value={countOptions.find(o => o.value === pageSize)}\r\n      isSearchable={false}\r\n      onChange={value => {\r\n        setPageSize(value.value)\r\n      }} />}\r\n\r\n  </PaginationComponent>\r\n}\r\n","import FrontElement from \"./FrontElement\";\nclass FrontElementsFabric {\n  /**\n   * парсим данные шаблона\n   * @param {object} object\n   * @param {FrontElement | null} parent\n   * @param {int | null} pageId\n   * @param {array | null} models\n   * @return {FrontElement}\n   */\n  parseData(object, parent, pageId, models){\n    let children = [];\n    /**\n     * @member {FrontElement} element\n     * */\n    let element = new FrontElement(object);\n    if(pageId){\n      element.addModelInfo({\n        modelName: 'page',\n        modelId: pageId,\n      });\n    }\n    if(_.isArray(models)){\n      for(let model of models){\n        element.addModelInfo({\n            ...model,\n        });\n      }\n    }\n    if(object.children && object.children.length ){\n      for(let child of object.children){\n        window.frontElementsManager.checkElementExists(child.name) ?\n            children.push( this.parseData(child, element) ) : '';\n      }\n    }\n    element.id = object.id;\n    element.lastElement = object.lastElement;\n    element.children = children;\n    element.settings = object.settings;\n    element.name = object.name;\n    element.type = object.type;\n    element.dynamicContentSettings = object.dynamicContentSettings;\n    if(parent){\n      element.setParent(parent);\n    }\n    element.update();\n    return element;\n  }\n\n  /**\n   * Правильное клонирование элемента\n   * @params {FrontElement} element\n   * @return {FrontElement | null}\n   */\n  cloneElement(element){\n    if(! element){\n      return null;\n    }\n    let clonedElement = _.cloneDeep(element);\n    // console.log(element.idForAction);\n    this.updateParents(clonedElement);\n    return clonedElement\n  }\n\n  /**\n   * Обновляет ссылку на родителя у элементов\n   * @params {FrontElement} element\n   */\n\n  updateParents(element){\n    if(_.isArray(element.children)){\n      element.children.forEach(c=>{\n        c.setParent(element);\n        this.updateParents(c);\n        // console.log(c);\n      });\n    }\n  }\n}\n\nwindow.frontElementsFabric = new FrontElementsFabric();\nexport default window.frontElementsFabric;\n"],"sourceRoot":""}