{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/helpers/styles.js"],"names":["ALIGN_ITEMS","verticalAlignValues","alignItemsValue","verticalAlignToAlignItems","verticalAlignValue","forEach","items","indexOf","dimensionsControllerToStyles","data","styleProperty","styles","_","isEmpty","left","top","right","bottom","unit","shadowControllerToStyles","declaration","type","offsetX","horizontal","offsetY","vertical","blurRadius","blur","spread","spreadRadius","color","returnShadow","filter","elem","length","textShadowControllerToStyles","colorPickedHex","opacity","backgroundColorControllerToStyles","pseudoClass","undefined","backgroundImageControllerToStyles","url","filtersControllerToStyles","brightness","contrast","hue","saturate","saturation","simplePropertyStyled","style","colorPropertyStyled","backgroundCreativeLinkStyled","backgroundPickedHex","columnGapStyled","size","iconSizeStyled","sizeStyled","property","heightCalcStyled","translateStyled","isNaN","function","transformRotateStyled","opacityStyled","typographicControllerToStyles","family","lineHeight","spacing","transform","weight","decoration","sizeUnit","lineHeightUnit","colorStyled","controller","colorStyledSecond","borderWidthStyled","marginTopLeftStyled","position","borderRadiusStyled","dimensionsStyled","important","gradientStyled","isWithGradient","value","defaultStyled","sliderStyled","shadowStyled","textShadowStyled","creativeLinkStyled","mediaStyled","styledString","settings","stringStyles","keys","idx","isString","split","styleModify","shift","join","isArray","settingName","state","variable","getResponsiveSetting","isFunction"],"mappings":"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","file":"2360.506cb3080e97e7fefa84.bundle.js","sourcesContent":["import { getResponsiveSetting } from \"../helpers\";\n\nconst ALIGN_ITEMS = [\n  {\n    verticalAlignValues: [\"super\", \"top\", \"text-top\"],\n    alignItemsValue: \"flex-start\"\n  },\n  {\n    verticalAlignValues: [\"middle\"],\n    alignItemsValue: \"center\"\n  },\n  {\n    verticalAlignValues: [\"baseline\"],\n    alignItemsValue: \"baseline\"\n  },\n  {\n    verticalAlignValues: [\"sub\", \"bottom\", \"text-bottom\"],\n    alignItemsValue: \"flex-end\"\n  }\n];\n\n/**\n * Преобразейт значение css-свойства vertical-align в align-items\n * @param {string} verticalAlignValue\n * @return {string}\n */\nexport function verticalAlignToAlignItems(verticalAlignValue) {\n  let alignItemsValue = \"\";\n  ALIGN_ITEMS.forEach(items => {\n    if (items.verticalAlignValues.indexOf(verticalAlignValue) !== -1) {\n      alignItemsValue = items.alignItemsValue;\n    }\n  });\n  return alignItemsValue;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер dimension, в строку css  для вставки в styled-компонент\n * @param {{}} data - settings\n * @param {string} styleProperty - padding|margin|border-radius\n * @return {string}\n */\nexport function dimensionsControllerToStyles(\n  data = {},\n  styleProperty = \"padding\"\n) {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n  const { left, top, right, bottom, unit } = data;\n  switch (styleProperty) {\n    case \"border-width\":\n      {\n        if (left) {\n          styles += `border-left-width: ${left}${unit}; `;\n        }\n        if (right) {\n          styles += `border-right-width: ${right}${unit}; `;\n        }\n        if (top) {\n          styles += `border-top-width: ${top}${unit}; `;\n        }\n        if (bottom) {\n          styles += `border-bottom-width: ${bottom}${unit}; `;\n        }\n      }\n      break;\n    case \"border-radius\":\n      {\n        if (top) {\n          styles += `border-top-left-radius: ${top}${unit}; `;\n        }\n        if (right) {\n          styles += `border-top-right-radius: ${right}${unit}; `;\n        }\n        if (bottom) {\n          styles += `border-bottom-right-radius: ${bottom}${unit}; `;\n        }\n        if (left) {\n          styles += `border-bottom-left-radius: ${left}${unit}; `;\n        }\n      }\n      break;\n    default:\n      {\n        if (left) {\n          styles += `${styleProperty}-left: ${left}${unit}; `;\n        }\n        if (right) {\n          styles += `${styleProperty}-right: ${right}${unit}; `;\n        }\n        if (top) {\n          styles += `${styleProperty}-top: ${top}${unit}; `;\n        }\n        if (bottom) {\n          styles += `${styleProperty}-bottom: ${bottom}${unit}; `;\n        }\n      }\n      break;\n  }\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер box-shadow, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @param {string} declaration\n * @return {string}\n */\nexport function shadowControllerToStyles(data, declaration=\"\") {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  if(data) {\n    let {type = 'outline', offsetX,horizontal, offsetY, vertical, blurRadius,blur,spread, spreadRadius, color } = data;\n    let returnShadow = [offsetX, horizontal, offsetY, vertical, blurRadius, blur, spread, spreadRadius].filter(elem => (\n      (elem && elem !== 0)\n    ));\n    if(returnShadow.length !== 0) {\n      styles += `box-shadow: ${type || ' '} ${offsetX || horizontal || 0}px ${offsetY || vertical || 0}px ${blurRadius || blur || 0}px ${spreadRadius || spread || 0}px ${color} ${declaration}; `;\n    }\n  }\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер text-shadow, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\nexport function textShadowControllerToStyles(data) {\n  if (data) {\n    const { blur, colorPickedHex, horizontal, opacity, vertical } = data;\n\n    return `text-shadow: ${horizontal}px ${vertical}px ${blur}px ${colorPickedHex}; `;\n  }\n\n  return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер Color, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @param {string} pseudoClass\n * @return {string}\n */\nexport function backgroundColorControllerToStyles(data, pseudoClass) {\n  let styles = \"\";\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  if (data) {\n    let { colorPickedHex } = data;\n\n    if (pseudoClass !== undefined) {\n      return `&:${pseudoClass} {background-color: ${colorPickedHex};} `;\n    }\n\n    return `background-color: ${colorPickedHex}; `;\n  }\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер background-image, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\nexport function backgroundImageControllerToStyles(data) {\n  let styles = \"\";\n\n  if (_.isEmpty(data) || data.url === null) {\n    return styles;\n  }\n\n  const { url } = data;\n\n  if(url) {\n    return `background-image: url('${url}'); `;\n  } else {\n    return \"\"\n  }\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер Filters, в строку css сразу с селектором '& .altrp-image' для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function filtersControllerToStyles(data) {\n  let styles = \"\";\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  let {\n    blur = \"0\",\n    brightness = \"100\",\n    contrast = \"100\",\n    hue = \"0\",\n    saturate,\n    saturation\n  } = data;\n\n  return `filter: blur(${blur}px) brightness(${brightness}%) contrast(${contrast}%) saturate(${saturate ||\n    saturation ||\n    \"100\"}%) hue-rotate(${hue}deg); `;\n}\n\n/**\n * Преобразует значение одного из свойств, перечисленных ниже, в строку css для вставки в styled-компонент\n * Варианты принимаемых свойств: column-count, z-index, border-style\n * @param {string} style\n * @param {string} styleProperty\n * @param {string} declaration\n * @return {string}\n */\n\nexport function simplePropertyStyled(style, styleProperty, declaration = \"\") {\n  if (style) {\n\n    return `${styleProperty}: ${style + declaration}; `;\n  }\n\n  return \"\";\n}\n\n/**\n * Преобразует значение одного из свойств, перечисленных ниже, в строку css для вставки в styled-компонент\n * Варианты принимаемых свойств: color, background-color, border-color\n * @param {{}} data\n * @param {string} styleProperty\n * @param {string} declaration\n * @return {string}\n */\n\nexport function colorPropertyStyled(data, styleProperty, declaration = \"\") {\n  const { color } = data;\n\n  if (color) {\n    return `${styleProperty}: ${color + declaration}; `;\n  }\n\n  return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет значение background-color из контроллера creative_link_controller, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @param {string} styleProperty\n * @return {string}\n */\n\nexport function backgroundCreativeLinkStyled(data) {\n  const { backgroundPickedHex } = data;\n\n  if (backgroundPickedHex) {\n    return `background-color: ${backgroundPickedHex}; `;\n  }\n\n  return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер column-gap, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function columnGapStyled(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  styles = `column-gap: ${size + unit}; `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер icon-size, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function iconSizeStyled(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  styles = `width: ${size + unit}; height: ${size + unit}; `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер Size | Icon Left Spacing | Icon Right Spacing | Top Translate | Left Translate,\n * в строку css для вставки в styled-компонент\n * @param {{}} data\n * @param {string} property\n * @return {string}\n */\n\nexport function sizeStyled(data = {}, property) {\n  let styles = \"\";\n\n  if (_.isEmpty(data) || data.size === undefined) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  if (\n    property === \"transition-duration\" ||\n    property === \"animation-duration\" ||\n    property === \"transition-delay\"\n  ) {\n    styles = `${property}: ${size}s; `;\n\n    return styles;\n  }\n\n  if(size) {\n    styles = `${property}: ${size + (unit || '')}; `;\n  }\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер height в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function heightCalcStyled(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data) || data.size === undefined) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  styles = `height: calc${size + unit} * 2; `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер Translate, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function translateStyled(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data) || isNaN(data.size) || !data.size) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  styles = `transform: ${data.function}(${size + unit}); `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер transform rotate, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\nexport function transformRotateStyled(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data) || isNaN(data.size) || !data.size) {\n    return styles;\n  }\n\n  const { size } = data;\n\n  styles = `transform: rotate(${size}deg); `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер opacity, в строку css для вставки в styled-компонент\n * @param {string} style\n * @return {string}\n */\n\nexport function opacityStyled(style) {\n  if (style) {\n    return `opacity: ${style.size}; `;\n  } else return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер typographic, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\nexport function typographicControllerToStyles(data = {}) {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const {\n    family,\n    size,\n    lineHeight,\n    spacing,\n    style,\n    transform,\n    weight,\n    decoration,\n    sizeUnit,\n    lineHeightUnit\n  } = data;\n\n  if (decoration) {\n    styles += `text-decoration: ${decoration}; `;\n  }\n  if (transform) {\n    styles += `text-transform: ${transform}; `;\n  }\n  if (spacing) {\n    styles += `letter-spacing: ${spacing}px; `;\n  }\n  if (lineHeight) {\n    styles += `line-height: ${\n      lineHeightUnit ? lineHeight + lineHeightUnit : lineHeight\n    }; `;\n  }\n  if (weight) {\n    styles += `font-weight: ${weight}; `;\n  }\n  if (style) {\n    styles += `font-style: ${style}; `;\n  }\n  if (size) {\n    styles += `font-size: ${size ? size + (sizeUnit || \"px\") : \"\"}; `;\n  }\n  if (!_.isEmpty(family)) {\n    styles += `font-family: ${family}; `;\n  }\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер color, в строку css для вставки в styled-компонент\n * @return {string}\n * @param {{}} controller\n * @param {string} style\n * @param {string} important\n */\nexport function colorStyled(controller, style) {\n  if (controller) {\n    if (controller.color) {\n      return `${style}: ${controller.color};`;\n    } else return \"\";\n  } else return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер color, в строку css для вставки в styled-компонент\n * @return {string}\n * @param {{}} controller\n */\nexport function colorStyledSecond(controller) {\n  if (controller) {\n    if (controller.color) {\n      return `${controller.color}`;\n    } else return \"\";\n  } else return \"\";\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер border-width, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @param {string} declaration\n * @return {string}\n */\n\nexport function borderWidthStyled(data = {}, declaration = \"\") {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const { bottom, left, right, top, unit = \"px\" } = data;\n\n  if (top && top !== \"\") {\n    styles += `border-top-width: ${top + unit + declaration}; `;\n  }\n\n  if (right && right !== \"\") {\n    styles += `border-right-width: ${right + unit + declaration}; `;\n  }\n\n  if (bottom && bottom !== \"\") {\n    styles += `border-bottom-width: ${bottom + unit + declaration}; `;\n  }\n\n  if (left && left !== \"\") {\n    styles += `border-left-width: ${left + unit + declaration}; `;\n  }\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер border-width, в строку css со свойством margin-top или margin-left с таким же значением, но отритцательным\n * @param {{}} data\n * @param {string} position\n * @return {string}\n */\n\nexport function marginTopLeftStyled(data = {}, position) {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const { top, left, unit } = data;\n\n  if (top && top !== \"\" && position === \"top\") {\n    styles += `margin-top: -${top + unit}; `;\n  }\n\n  if (top && top !== \"\" && position === \"left\") {\n    styles += `margin-left: -${left + unit}; `;\n  }\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер border-radius, в строку css для вставки в styled-компонент\n * @param {{}} data\n * @return {string}\n */\n\n export function borderRadiusStyled(data = {},declaration=\"\") {\n  let styles = \"\";\n\n  if (_.isEmpty(data)) {\n    return styles;\n  }\n\n  const { size, unit } = data;\n\n  styles = `border-radius: ${size + unit + declaration}; `;\n\n  return styles;\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер dimensions, в строку css для вставки в styled-компонент\n * @return {string}\n * @param {{}} controller\n * @param {string} style\n * @param {string} important\n */\n export function dimensionsStyled(controller, style, important = '') {\n  if (controller) {\n    const unit = controller.unit || \"px\";\n    const left = controller.left;\n    const right = controller.right;\n    const bottom = controller.bottom;\n    const top = controller.top;\n\n    let styles = \"\";\n\n    if(controller.left) {\n      switch (style) {\n        case \"padding\":\n          styles += `padding-left: ${left + unit + important};`\n          break;\n        case \"margin\":\n          styles += `margin-left: ${left + unit + important};`\n          break;\n        case \"border-radius\":\n          styles += `border-bottom-right-radius: ${left + unit + important};`\n          break;\n        case \"border-width\":\n          styles += `border-left-width: ${left + unit + important};`\n      }\n    }\n\n    if(controller.right) {\n      switch (style) {\n        case \"padding\":\n          styles += `padding-right: ${right + unit + important};`\n          break;\n        case \"margin\":\n          styles += `margin-right: ${right + unit + important};`\n          break;\n        case \"border-radius\":\n          styles += `border-top-right-radius: ${right + unit + important};`\n          break;\n        case \"border-width\":\n          styles += `border-right-width: ${right + unit + important};`\n      }\n    }\n\n    if(controller.top) {\n      switch (style) {\n        case \"padding\":\n          styles += `padding-top: ${top + unit + important};`\n          break;\n        case \"margin\":\n          styles += `margin-top: ${top + unit + important};`\n          break;\n        case \"border-radius\":\n          styles += `border-top-left-radius: ${top + unit + important};`\n          break;\n        case \"border-width\":\n          styles += `border-top-width: ${top + unit + important};`\n      }\n    }\n\n    if(controller.bottom) {\n      switch (style) {\n        case \"padding\":\n          styles += `padding-bottom: ${bottom + unit + important};`\n          break;\n        case \"margin\":\n          styles += `margin-bottom: ${bottom + unit + important};`\n          break;\n        case \"border-radius\":\n          styles += `border-bottom-left-radius: ${bottom + unit + important};`\n          break;\n        case \"border-width\":\n          styles += `border-bottom-width: ${bottom + unit + important};`\n      }\n    }\n\n    return styles\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * Преобразует объект, который сохраняет контроллер gradient, в строку css для вставки в styled-компонент\n * @return {string}\n * @param {{}} controller\n */\nexport function gradientStyled(controller) {\n  if (controller && controller.isWithGradient) {\n    return `background-image: ${controller.value} `;\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * проверяет наличичие значения select или number\n * @return {string}\n * @param {string} controller\n */\nexport function defaultStyled(controller) {\n  if (controller) {\n    return controller;\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * проверяет наличичие значения slider\n * @return {string}\n * @param {{}} controller\n */\nexport function sliderStyled(controller) {\n  if (controller) {\n    if (controller.size) {\n      const unit = controller.unit || \"px\";\n      return controller.size + unit;\n    } else return \"\";\n  } else return \"\";\n}\n\n/**\n * проверяет наличичие значения shadow\n * @return {string}\n * @param {{}} controller\n * @param {string} important\n */\nexport function shadowStyled(controller = {}, important = '') {\n  if (controller) {\n    const type = controller.type || \"\";\n    const horizontal = controller.horizontal || 0;\n    const vertical = controller.vertical || 0;\n    const blur = controller.blur || 0;\n    const spread = controller.spread || 0;\n    const color = controller.color || \"\";\n\n    if(horizontal !== 0 || vertical !== 0 || blur !== 0 || spread !== 0) {\n      return `box-shadow: ${type} ${horizontal}px ${vertical}px ${blur}px ${spread}px ${color} ${important};`;\n    } else return \"\"\n  } else return \"\"\n}\n\n/**\n * проверяет наличичие значения text shadow\n * @return {string}\n * @param {{}} controller\n * @param {string} important\n */\nexport function textShadowStyled(controller = {}, important = '') {\n  if (controller) {\n    const horizontal = controller.horizontal || 0;\n    const vertical = controller.vertical || 0;\n    const blur = controller.blur || 0;\n    const color = controller.color || \"\";\n    if (horizontal || vertical || blur || color) {\n      return `text-shadow: ${horizontal}px ${vertical}px ${blur}px ${color} ${important};`;\n    } else {\n      return \"\";\n    }\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * проверяет наличичие значения creative_media\n * @return {string}\n * @param {{}} controller\n */\nexport function creativeLinkStyled(controller = {}) {\n  if (controller) {\n    return ``;\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * проверяет наличичие значения media, в основном используется для background-image\n * @return {string}\n * @param {{}} controller\n */\nexport function mediaStyled(controller = {}) {\n  if (controller?.url) {\n    return `background-image: url(\"${controller.url}\");`;\n  } else {\n    return \"\";\n  }\n}\n\n/**\n * принимает настройки виджета settings и принимает массив стилей для преобразования в строку css для styled-components\n * @return {string}\n * @param {[]} styles - массив стилей\n * @param {{}} settings - настройки виджета\n */\nexport function styledString(styles, settings) {\n  let stringStyles = \"\";\n  if(_.keys(settings).length !== 0) {\n    styles.forEach((style, idx) => {\n      if(_.isString(style)) {\n        if(style !== \"}\") {\n          if(style.split('')[0] === \".\" || style.split('')[0] === \"&\") {\n            stringStyles += `${style} {`;\n          } else if(style.split(\"\")[0] === \"!\") {\n            let styleModify = style.split(\"\");\n            styleModify.shift();\n            stringStyles += `${_.join(styleModify, \"\")}{`\n          } else {\n            stringStyles += `& .${style}{`;\n          }\n        } else {\n          stringStyles += `}`;\n        }\n      } else {\n        if (_.isArray(style)) {\n          const settingName = style[1];\n          const state = style[3] || \"\";\n          const variable = getResponsiveSetting(\n            settings,\n            settingName,\n            state,\n          );\n          switch (style[2]) {\n            case \"dimensions\":\n              stringStyles += dimensionsStyled(variable, style[0]);\n              break;\n            case \"color\":\n              stringStyles += colorStyled(variable, style[0]);\n              break;\n            case \"gradient\":\n              stringStyles += gradientStyled(variable);\n              break;\n            case \"typographic\":\n              stringStyles += typographicControllerToStyles(variable);\n              break;\n            case \"slider\":\n              if(sliderStyled(variable)) {\n                stringStyles += `${style[0]}:${sliderStyled(variable)};`;\n              }\n              break;\n            case \"shadow\":\n              stringStyles += shadowStyled(variable);\n              break;\n            case \"text-shadow\":\n              stringStyles += textShadowStyled(variable);\n              break;\n            case \"media\":\n              stringStyles += mediaStyled(variable);\n              break;\n            case \"creative-link\":\n              stringStyles += creativeLinkStyled(variable);\n              break;\n            default:\n              if (defaultStyled(variable)) {\n                stringStyles += `${style[0]}:${defaultStyled(\n                  variable\n                )};`;\n              }\n          }\n        }\n\n        if (_.isFunction(style)) {\n          if(style()) {\n            stringStyles += style();\n          }\n        }\n      }\n    });\n  }\n\n  return stringStyles;\n}\n"],"sourceRoot":""}