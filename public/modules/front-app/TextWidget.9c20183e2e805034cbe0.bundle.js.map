{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/widgets/Tooltip.js","webpack:///./resources/modules/editor/src/js/components/widgets/TextWidget.js"],"names":["_assertThisInitialized","self","ReferenceError","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","value","writable","configurable","_possibleConstructorReturn","call","_setPrototypeOf","p","_typeof","obj","Symbol","iterator","Component","window","altrpHelpers","isEditor","getDataByPath","globalDefaults","push","props","state","settings","element","getSettings","tooltipActiveValue","component","elementDecorator","baseRender","render","tooltipActive","bind","changeText","this","setState","setTimeout","text","setSettings","templateNeedUpdate","text_advanced_tooltip_active","text_advanced_tooltip_label","textContent","getContent","content","_","isString","slice","CKEditor","className","readOnly","textWidget","React","createElement","text_position_css_classes","id","text_position_css_id","onMouseOver","dangerouslySetInnerHTML","__html","onMouseLeave"],"mappings":"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","file":"TextWidget.9c20183e2e805034cbe0.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","\r\nclass Tooltip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let styles = \"altrp-tooltip \";\r\n    if (this.props.active == false) {\r\n      styles += \"altrp-tooltip-none\"\r\n    }\r\n    let tooltip = null;\r\n    if (this.props.switch) {\r\n      tooltip = <span className={styles}>{this.props.label}</span>;\r\n    }\r\n    return tooltip;\r\n  }\r\n}\r\n\r\nexport default Tooltip\r\n","import Tooltip from \"./Tooltip\";\r\n\r\nconst {isEditor, getDataByPath} = window.altrpHelpers;\r\n\r\n(window.globalDefaults = window.globalDefaults || []).push(`\r\n.altrp-text {\r\n  padding: 0;\r\n  margin: 0;\r\n  opacity: 1;\r\n  font-size: 16px;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  line-height: 1.5;\r\n  letter-spacing: 0;\r\n  border-radius: 0;\r\n}\r\n\r\n.altrp-text a{\r\n  font-family: \"Open Sans\", sans-serif;\r\n\r\n}\r\n.altrp-text blockquote {\r\n    overflow: hidden;\r\n    padding-right: 1.5em;\r\n    padding-left: 1.5em;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    font-style: italic;\r\n    border-left: solid 5px hsl(0, 0%, 80%);\r\n}\r\n.altrp-text p{\r\n    margin-top: 16px;\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.altrp-text img{\r\n    max-width: 100%;\r\n}\r\n\r\n.ck.ck-editor__editable_inline{\r\n    padding: 0;\r\n}\r\n`)\r\n\r\nclass TextWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      settings: props.element.getSettings(),\r\n      tooltipActiveValue: false\r\n    };\r\n    props.element.component = this;\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if (props.baseRender) {\r\n      this.render = props.baseRender(this);\r\n    }\r\n    this.tooltipActive = this.tooltipActive.bind(this);\r\n    this.changeText = this.changeText.bind(this);\r\n  }\r\n\r\n  tooltipActive() {\r\n    if (this.state.tooltipActiveValue) {\r\n      this.setState({\r\n        tooltipActiveValue: !this.state.tooltipActiveValue\r\n      });\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({\r\n          tooltipActiveValue: !this.state.tooltipActiveValue\r\n        });\r\n      }, 500);\r\n    }\r\n  }\r\n\r\n  changeText(value) {\r\n    let settings = this.props.element.settings;\r\n    settings.text = value;\r\n    this.props.element.setSettings(settings);\r\n    this.props.element.templateNeedUpdate();\r\n  }\r\n\r\n  render() {\r\n    let tooltip = (\r\n      <Tooltip\r\n        switch={this.state.settings.text_advanced_tooltip_active || false}\r\n        label={this.state.settings.text_advanced_tooltip_label}\r\n        active={this.state.tooltipActiveValue}\r\n      />\r\n    );\r\n    let tooltipActive = null;\r\n    if (this.state.settings.text_advanced_tooltip_active) {\r\n      tooltipActive = this.tooltipActive;\r\n    }\r\n    let textContent = this.getContent(\"text\");\r\n    const content = this.props.element.getSettings('content')\r\n    if (content\r\n      && getDataByPath(content)\r\n      && _.isString(getDataByPath(content))) {\r\n      textContent = getDataByPath(content);\r\n    }\r\n    let textCap = (\r\n      <>\r\n        <span className=\"altrp-text-drop-cap\">\r\n          {this.state.settings.text?.slice(0, 1)}\r\n        </span>\r\n        <span>{this.state.settings.text?.slice(2)}</span> {tooltip}\r\n      </>\r\n    );\r\n\r\n\r\n    if (this.props.CKEditor) {\r\n      return (\r\n        <div className=\"altrp-text\">\r\n          <this.props.CKEditor\r\n            changeText={this.changeText}\r\n            text={textContent}\r\n            readOnly={isEditor()}\r\n            textWidget={true}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return React.createElement(\"div\", {\r\n      className:\r\n        \"altrp-text ck ck-content \" +\r\n        this.state.settings.text_position_css_classes,\r\n      id: this.state.settings.text_position_css_id || \"\",\r\n      onMouseOver: tooltipActive,\r\n      dangerouslySetInnerHTML: {\r\n        __html: textContent || \"\"\r\n      },\r\n      // dangerouslySetInnerHTML: activeText,\r\n\r\n      onMouseLeave: tooltipActive\r\n    });\r\n  }\r\n}\r\n\r\nexport default TextWidget;\r\n"],"sourceRoot":""}