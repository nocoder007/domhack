{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/TemplateLoader.js","webpack:///./resources/modules/editor/src/js/components/altrp-template/AltrpTemplate.js","webpack:///./resources/modules/editor/src/js/components/widgets/TemplateWidget.js","webpack:///./resources/modules/front-app/src/js/classes/FrontElementsFabric.js"],"names":["TemplateLoader","this","resource","Resource","route","templatesCache","AltrpModel","_","get","window","__altrp_settings__","templateId","force","update","Number","hasProperty","Promise","resolve","reject","pendingCallbacks","push","statuses","template","setProperty","getProperty","isArray","forEach","callback","loadTemplate","templateData","JSON","parse","frontElementsFabric","templateLoader","props","mbGetParsedTemplate","settings","state","templateGUID","updateTemplate","loading","loadParsedTemplate","setState","className","React","createElement","componentClass","element","ElementWrapper","children","Component","getSettings","elementDecorator","baseRender","render","FrontElementsFabric","object","parent","pageId","models","FrontElement","addModelInfo","modelName","modelId","model","length","child","frontElementsManager","checkElementExists","name","parseData","id","lastElement","type","dynamicContentSettings","setParent","clonedElement","cloneDeep","updateParents","c"],"mappings":"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","file":"TemplateWidget.4f2cdf21b66d6e01b4be.bundle.js","sourcesContent":["import Resource from \"../Resource\";\r\nimport AltrpModel from \"../AltrpModel\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\n/**\r\n * @class TemplateLoader\r\n */\r\nexport class TemplateLoader {\r\n  /**\r\n   * Хранилище статусов получения данных, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static statuses = {};\r\n  /**\r\n   * Хранилище обратных вызовов, чтобы не делать много параллельных запросов\r\n   * @type {{}}\r\n   */\r\n  static pendingCallbacks = {};\r\n\r\n\r\n  constructor(){\r\n    this.resource = new Resource({route: '/ajax/templates'});\r\n    this.templatesCache = new AltrpModel(_.get(window.__altrp_settings__, 'templates_data',{}));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   * @return {[]}\r\n   */\r\n  async loadTemplate(templateId, force = false){\r\n\r\n    let update = force;\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    if(! update){\r\n      update = ! this.templatesCache.hasProperty(templateId);\r\n    }\r\n\r\n    if(_.get(TemplateLoader, `statuses.${templateId}`) === 'loading'){\r\n      return new Promise((resolve, reject) => {\r\n        TemplateLoader.pendingCallbacks[templateId] = TemplateLoader.pendingCallbacks[templateId] || [];\r\n        TemplateLoader.pendingCallbacks[templateId].push(resolve);\r\n      })\r\n    }\r\n\r\n    TemplateLoader.statuses[templateId] = 'loading';\r\n\r\n    try {\r\n\r\n      let template = null;\r\n\r\n      if (update) {\r\n        template = await this.resource.get(templateId);\r\n        this.templatesCache.setProperty(templateId, template);\r\n      } else {\r\n        template = this.templatesCache.getProperty(templateId);\r\n      }\r\n\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(template);\r\n        });\r\n      }\r\n\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return template;\r\n\r\n    }catch(error){\r\n      if(_.isArray(TemplateLoader.pendingCallbacks[templateId])){\r\n        TemplateLoader.pendingCallbacks[templateId].forEach(callback=>{\r\n          callback(null);\r\n        });\r\n      }\r\n      TemplateLoader.statuses[templateId] = 'loaded';\r\n      TemplateLoader.pendingCallbacks[templateId] = [];\r\n      return null;\r\n    }\r\n\r\n    //return Promise.resolve(this.templatesCache.getProperty(templateId));\r\n  }\r\n\r\n  /**\r\n   * Загрузить шаблон по ид\r\n   * @param {integer | string} templateId\r\n   * @param {boolean} force\r\n   * @param {*} templateId\r\n   */\r\n  async loadParsedTemplate(templateId, force = false){\r\n\r\n    if(! templateId){\r\n      return null;\r\n    }\r\n    templateId = Number(templateId) ? Number(templateId) : templateId;\r\n\r\n    let templateData = _.get((await this.loadTemplate(templateId, force)), 'data');\r\n    templateData = JSON.parse(templateData);\r\n\r\n    return frontElementsFabric.parseData(templateData);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {string} templateId\r\n   * @returns {null|{}}\r\n   */\r\n  mbGetParsedTemplate(templateId){\r\n    if(! this.templatesCache.hasProperty(templateId)){\r\n      return null;\r\n    }\r\n    let templateData = _.get(this.templatesCache.getProperty(templateId), 'data');\r\n    templateData = JSON.parse(templateData);\r\n    return frontElementsFabric.parseData(templateData)\r\n  }\r\n}\r\n\r\n window.templateLoader =  new TemplateLoader();\r\n\r\nexport default window.templateLoader;\r\n","import  \"../../classes/modules/TemplateLoader\";\r\nimport ElementWrapper from \"../../../../../front-app/src/js/components/ElementWrapper\";\r\nimport frontElementsFabric from \"../../../../../front-app/src/js/classes/FrontElementsFabric\";\r\n\r\nclass AltrpTemplate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let template = window.templateLoader.mbGetParsedTemplate(this.props.settings.template)\r\n    if(template){\r\n      template = frontElementsFabric.cloneElement(template);\r\n    }\r\n    this.state = {\r\n      template,\r\n      templateGUID: this.props.settings.template\r\n    };\r\n    this.template = template;\r\n  }\r\n  componentDidMount() {\r\n    this.updateTemplate();\r\n  }\r\n  componentDidUpdate() {\r\n    this.updateTemplate();\r\n  }\r\n\r\n  /**\r\n   * Обновляем данные шалона\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateTemplate() {\r\n    // console.log(this.props.element.getSettings('template'));\r\n    const templateGUID = this.props.settings.template;\r\n    if (\r\n      templateGUID !== this.state.templateGUID ||\r\n      !(this.state.template || this.loading)\r\n    ) {\r\n      let template;\r\n      if (!templateGUID) {\r\n        return;\r\n      } else {\r\n        this.loading = true;\r\n        template = await window.templateLoader.loadParsedTemplate(templateGUID);\r\n        this.loading = false;\r\n        this.template = null;\r\n      }\r\n      this.setState(state => ({ ...state, template, templateGUID }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.settings.template) {\r\n      return null;\r\n    }\r\n    if (_.get(this.state, \"template.componentClass\")) {\r\n      let template =\r\n        this.template || frontElementsFabric.cloneElement(this.state.template);\r\n      this.template = template;\r\n      return (\r\n        <div className=\"altrp-posts\">\r\n          <div className=\"altrp-post\">\r\n            {React.createElement(template.componentClass, {\r\n              element: template,\r\n              ElementWrapper: ElementWrapper,\r\n              children: template.children\r\n            })}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default AltrpTemplate;\r\n","import AltrpTemplate from'../altrp-template/AltrpTemplate';\r\n\r\nclass TemplateWidget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      templateGUID: this.props.element.getSettings('template'),\r\n    };\r\n    if (window.elementDecorator) {\r\n      window.elementDecorator(this);\r\n    }\r\n    if(props.baseRender){\r\n      this.render = props.baseRender(this);\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return <AltrpTemplate settings={this.props.element.getSettings() || {}}/>\r\n  }\r\n}\r\n\r\nexport default TemplateWidget\r\n","import FrontElement from \"./FrontElement\";\nclass FrontElementsFabric {\n  /**\n   * парсим данные шаблона\n   * @param {object} object\n   * @param {FrontElement | null} parent\n   * @param {int | null} pageId\n   * @param {array | null} models\n   * @return {FrontElement}\n   */\n  parseData(object, parent, pageId, models){\n    let children = [];\n    /**\n     * @member {FrontElement} element\n     * */\n    let element = new FrontElement(object);\n    if(pageId){\n      element.addModelInfo({\n        modelName: 'page',\n        modelId: pageId,\n      });\n    }\n    if(_.isArray(models)){\n      for(let model of models){\n        element.addModelInfo({\n            ...model,\n        });\n      }\n    }\n    if(object.children && object.children.length ){\n      for(let child of object.children){\n        window.frontElementsManager.checkElementExists(child.name) ?\n            children.push( this.parseData(child, element) ) : '';\n      }\n    }\n    element.id = object.id;\n    element.lastElement = object.lastElement;\n    element.children = children;\n    element.settings = object.settings;\n    element.name = object.name;\n    element.type = object.type;\n    element.dynamicContentSettings = object.dynamicContentSettings;\n    if(parent){\n      element.setParent(parent);\n    }\n    element.update();\n    return element;\n  }\n\n  /**\n   * Правильное клонирование элемента\n   * @params {FrontElement} element\n   * @return {FrontElement | null}\n   */\n  cloneElement(element){\n    if(! element){\n      return null;\n    }\n    let clonedElement = _.cloneDeep(element);\n    // console.log(element.idForAction);\n    this.updateParents(clonedElement);\n    return clonedElement\n  }\n\n  /**\n   * Обновляет ссылку на родителя у элементов\n   * @params {FrontElement} element\n   */\n\n  updateParents(element){\n    if(_.isArray(element.children)){\n      element.children.forEach(c=>{\n        c.setParent(element);\n        this.updateParents(c);\n        // console.log(c);\n      });\n    }\n  }\n}\n\nwindow.frontElementsFabric = new FrontElementsFabric();\nexport default window.frontElementsFabric;\n"],"sourceRoot":""}