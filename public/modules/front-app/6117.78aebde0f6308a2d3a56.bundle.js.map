{"version":3,"sources":["webpack:///./resources/modules/front-app/src/js/functions/add-animation-classes.js","webpack:///./resources/modules/front-app/src/js/helpers/functions/element-in-viewport.js"],"names":["delay","window","altrpHelpers","addAnimationClasses","elements","document","querySelectorAll","_","each","element","entranceAnimationType","getAttribute","bounds","getBoundingClientRect","top","height","innerHeight","left","width","innerWidth","elementInViewport","animationDelay","then","classList","add","remove"],"mappings":"wIACA,IAAOA,EAASC,OAAOC,aAAhBF,MAKQ,SAASG,IACtB,IAAMC,EAAWC,SAASC,iBAAiB,8CAC3CC,EAAEC,KAAKJ,GAA6C,SAAAK,GAClD,IAAMC,EAAwBD,EAAQE,aAAa,6BACnD,GCVW,SAA2BF,GACxC,IAAIG,EAASH,EAAQI,wBACrB,OACGD,EAAOE,IAAMF,EAAOG,OAAS,GAC7Bd,OAAOe,YAAcJ,EAAOE,IAAM,GAClCF,EAAOK,KAAOL,EAAOM,MAAQ,GAC7BjB,OAAOkB,WAAaP,EAAOK,KAAO,EDI9BG,CAAkBX,IAAcC,EAArC,CAGA,IAAMW,EAAiBZ,EAAQE,aAAa,8BACzCU,GACDrB,EAAMqB,GAAgBC,MAAK,WACzBb,EAAQc,UAAUC,IAAI,YACtBf,EAAQc,UAAUC,IAAlB,mBAAkCd,IAClCD,EAAQc,UAAUE,OAAO","file":"6117.78aebde0f6308a2d3a56.bundle.js","sourcesContent":["import elementInViewport from \"../helpers/functions/element-in-viewport\";\nconst {delay} = window.altrpHelpers\n\n/**\n *\n */\nexport default function addAnimationClasses (){\n  const elements = document.querySelectorAll('[data-enter-animation-type]:not(.altrp-an)')\n  _.each(elements, /** @param {HTMLElement} element */element=>{\n    const entranceAnimationType = element.getAttribute('data-enter-animation-type')\n    if(! elementInViewport(element) || ! entranceAnimationType){\n      return\n    }\n    const animationDelay = element.getAttribute('data-enter-animation-delay');\n    if(animationDelay){\n      delay(animationDelay).then(()=>{\n        element.classList.add('altrp-an')\n        element.classList.add(`altrp-an_${entranceAnimationType}`)\n        element.classList.remove('altrp-invisible');\n      })\n    }\n  })\n}\n","export default function elementInViewport(element){\n  let bounds = element.getBoundingClientRect();\n  return (\n    (bounds.top + bounds.height > 0) && // Елемент ниже верхней границы\n    (window.innerHeight - bounds.top > 0) && // Выше нижней\n    (bounds.left + bounds.width > 0) && // Правее левой\n    (window.innerWidth - bounds.left > 0)// Левее правой\n  );\n}\n"],"sourceRoot":""}