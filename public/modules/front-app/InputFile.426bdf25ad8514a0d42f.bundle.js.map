{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputFileWidget.js","webpack:///./resources/modules/front-app/src/js/classes/AltrpFile.js","webpack:///./resources/modules/front-app/src/js/store/forms-data-storage/actions.js"],"names":["_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","prototype","create","constructor","_possibleConstructorReturn","call","_setPrototypeOf","p","_typeof","Symbol","iterator","window","altrpHelpers","isEditor","parseOptionsFromSettings","replaceContentWithData","getDataFromLocalStorage","FileInput","altrpLibs","Blueprint","globalDefaults","push","InputFileWidget","props","getValue","formId","element","getFormId","fieldName","getFieldId","state","_","get","appStore","getState","onChange","e","setState","notActive","filesStorage","isArray","Promise","all","map","file","deleteFileFromStorage","console","error","files","target","limit","getResponsiveSetting","idx","AltrpFile","slice","storeFile","getProperty","dispatchFieldValueToStore","Math","random","forEach","reader","FileReader","readAsDataURL","onload","result","userInput","indexOf","isObject","dispatch","changeFormFieldValue","change_actions","getSettings","actionsManager","default","callAllWidgetActions","getIdForAction","component","elementDecorator","wrapperRef","React","createRef","defaultValue","getContent","settings","imageUrls_0","altrpSelectRef","this","prevProps","prevState","options","currentModel","contentLoaded","currentDataStorage","content_options","model_for_options","isEqual","dynamic","updateValue","content_calculation","altrpforms","formsStore","prevContext","altrpdata","getData","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","getCurrentModel","currentDataStorageLoaded","changedField","altrpstorage","replace","eval","message","getId","path","text","disabled","inputProps","name","getName","accept","multiple","getFileName","join","fileInputProps","className","buttonText","onInputChange","style","backgroundImage","pointerEvents","ref","Component","data","File","Error","type","setProperty","getResource","postFiles","getFile","response","id","delete","resource","Resource","route","AltrpModel","CHANGE_FORM_FIELD_VALUE","CLEAR_FORM_FIELD_VALUE"],"mappings":"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","file":"InputFile.426bdf25ad8514a0d42f.bundle.js","sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import AltrpFile from \"../../../../../front-app/src/js/classes/AltrpFile\";\n\nconst {\n  isEditor,\n  parseOptionsFromSettings,\n  replaceContentWithData,\n  getDataFromLocalStorage\n} = window.altrpHelpers;\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\n\nconst FileInput = window.altrpLibs.Blueprint.FileInput;\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.altrp-widget_input-file .bp3-file-upload-input::after{\n  width: auto;\n  min-width: 0;\n}\n.bp3-file-input_preview.bp3-file-input_preview{\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  width: 100px;\n  height: 100px;\n}\n`)\n\nclass InputFileWidget extends Component {\n\n  constructor(props) {\n    super(props);\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    this.wrapperRef = React.createRef()\n    this.defaultValue = this.getContent(\"content_default_value\");\n\n    this.state = {\n      settings: {...props.element.getSettings()},\n      value: this.defaultValue,\n      imageUrls_0: _.get(props.element.getResponsiveSetting('preview_placeholder'), 'url'),\n    };\n    this.altrpSelectRef = React.createRef();\n    if (this.getContent(\"content_default_value\")) {\n      this.dispatchFieldValueToStore(this.defaultValue);\n    }\n  }\n\n  /**\n   * Чистит значение\n   */\n  clearValue() {\n    this.onChange(null);\n    this.dispatchFieldValueToStore(null, true);\n  }\n\n\n  /**\n   *\n   * @returns {string | []}\n   */\n  getValue = () => {\n    let value;\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (isEditor()) {\n      value = this.state.value;\n    } else {\n      value = _.get(appStore.getState(), `formsStore.${formId}.${fieldName}`, '')\n    }\n    return value;\n  }\n\n  /**\n   * Загрузка виджета\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  async _componentDidMount(prevProps, prevState) {\n    if (this.props.element.getSettings(\"content_options\")) {\n      let options = parseOptionsFromSettings(\n        this.props.element.getSettings(\"content_options\")\n      );\n\n      this.setState(state => ({...state, options}));\n    }\n\n    let value = this.state.value;\n\n    /**\n     * Если динамическое значение загрузилось,\n     * то используем this.getContent для получение этого динамического значения\n     * старые динамические данные\n     * */\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    /**\n     * Если модель обновилась при смене URL\n     */\n    if (\n      prevProps &&\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n\n    if (\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !this.state.contentLoaded\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n\n    if (this.state.value !== value) {\n      this.setState(\n        state => ({...state, value}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n  }\n\n  /**\n   * Обновление виджета\n   */\n  async _componentDidUpdate(prevProps, prevState) {\n    const {content_options, model_for_options} = this.state.settings;\n    if (!this.getValue() && this.state.imageUrls_0 !== _.get(this.props.element.getResponsiveSetting('preview_placeholder'), 'url')) {\n      this.setState(\n        state => ({...state, imageUrls_0: _.get(this.props.element.getResponsiveSetting('preview_placeholder'), 'url')})\n      )\n    }\n    if (\n      prevProps &&\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\n    ) {\n      let value = this.getContent(\n        \"content_default_value\",\n        this.props.element.getSettings(\"select2_multiple\")\n      );\n      this.setState(\n        state => ({...state, value, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n\n    /**\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\n     */\n    if (\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\n      this.state.value &&\n      this.state.value.dynamic\n    ) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    if (content_options && !model_for_options) {\n      let options = parseOptionsFromSettings(content_options);\n      if (!_.isEqual(options, this.state.options)) {\n        this.setState(state => ({...state, options}));\n      }\n    }\n    this.updateValue(prevProps);\n  }\n\n  /**\n   * Обновить значение если нужно\n   * @param {{}} prevProps\n   */\n  updateValue(prevProps) {\n\n    if (isEditor()) {\n      return;\n    }\n\n    let content_calculation = this.props.element.getSettings(\n      \"content_calculation\"\n    );\n    const altrpforms = this.props.formsStore;\n    const fieldName = this.props.element.getFieldId();\n    const formId = this.props.element.getFormId();\n\n    if (!content_calculation) {\n      /**\n       * Обновить значение, если formsStore изменилось из другого компонента\n       */\n      const path = `${formId}.${fieldName}`;\n      if (\n        this.props.formsStore !== prevProps.formsStore &&\n        _.get(altrpforms, path) !== this.state.value\n      ) {\n        this.setState(state => ({\n          ...state,\n          value: _.get(altrpforms, path)\n        }));\n      }\n      return;\n    }\n\n    const prevContext = {};\n    const altrpdata = this.props.currentDataStorage.getData();\n    const altrpmodel = this.props.currentModel.getData();\n    const altrpuser = this.props.currentUser.getData();\n    const altrppagestate = this.props.altrpPageState.getData();\n    const altrpresponses = this.props.altrpresponses.getData();\n    const altrpmeta = this.props.altrpMeta.getData();\n    const context = this.props.element.getCurrentModel().getData();\n\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\n      context.altrpdata = altrpdata;\n      if (!altrpdata.currentDataStorageLoaded) {\n        prevContext.altrpdata = altrpdata;\n      } else {\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\n      }\n    }\n\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\n      context.altrpforms = altrpforms;\n      /**\n       * Не производим вычисления, если изменилось текущее поле\n       */\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\n        prevContext.altrpforms = altrpforms;\n      } else {\n        prevContext.altrpforms = prevProps.formsStore;\n      }\n    }\n\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\n      context.altrpmodel = altrpmodel;\n      prevContext.altrpmodel = prevProps.currentModel.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\n      context.altrppagestate = altrppagestate;\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\n      context.altrpmeta = altrpmeta;\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\n      context.altrpresponses = altrpresponses;\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\n    }\n\n    if (\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\n    ) {\n      return;\n    }\n\n    if (\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      `${formId}.${fieldName}` === altrpforms.changedField\n    ) {\n      return;\n    }\n\n    let value = \"\";\n\n    try {\n      content_calculation = content_calculation\n        .replace(/}}/g, \"')\")\n        .replace(/{{/g, \"_.get(context, '\");\n      value = eval(content_calculation);\n      if (value === this.state.value) {\n        return;\n      }\n      this.setState(\n        state => ({...state, value}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"Evaluate error in Input: '\" + e.message + \"'\",\n        this.props.element.getId()\n      );\n    }\n  }\n\n\n  /**\n   * Изменение значения в виджете\n   * @param e\n   */\n  onChange = async (e) => {\n    this.setState(state => ({...state, notActive: true}))\n    const {filesStorage} = this.state;\n    try {\n      if(_.isArray(filesStorage))\n      {\n        await Promise.all(filesStorage.map(async file=>(await file.deleteFileFromStorage())))\n      }\n    }catch (e) {\n      console.error(e);\n    }\n    const files = e.target.files;\n    const limit = this.props.element.getResponsiveSetting('limit');\n    let value;\n    if (this.props.element.getResponsiveSetting('multiple')) {\n      value = _.map(files, (file, idx) => {\n        return new AltrpFile(file)\n      })\n      if(limit){\n        value = value.slice(0, limit)\n      }\n      this.setState(state=>({...state, filesStorage: value}))\n      try {\n        value = await Promise.all(value.map(async file => ((await file.storeFile()).getProperty('media.id'))))\n      }catch (e) {\n        console.error(e);\n      }\n    } else {\n      value = new AltrpFile(files[0])\n      this.setState(state=>({...state, filesStorage: [value]}))\n      try {\n        value = (await value.storeFile()).getProperty('media.id')\n      }catch (e) {\n        console.error(e);\n      }\n    }\n\n    if (isEditor()) {\n      this.setState(state => ({...state, value}))\n    } else {\n      this.dispatchFieldValueToStore(value, true)\n    }\n    this.setState(state => ({...state, key: Math.random()}))\n    try {\n      _.forEach(files, (file, idx) => {\n        if(limit && idx >= limit){\n          return\n        }\n        const reader = new FileReader\n        reader.readAsDataURL(file)\n        reader.onload = () => {\n          this.setState(state => {\n              state[`imageUrls_${idx}`] = reader.result;\n              return {...state};\n            }\n          )\n        }\n      })\n    } catch (e) {\n      console.error(e);\n    }\n    this.setState(state => ({...state, notActive: false}))\n\n  }\n\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n              )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n\n  /**\n   * Взовращает имя для атрибута name\n   * @return {string}\n   */\n  getName() {\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\n  }\n\n  render() {\n    const {element} = this.props\n    let disabled = element.getResponsiveSetting('readonly');\n\n    const inputProps = {\n      name: this.getName(),\n      accept: element.getResponsiveSetting('accept'),\n      multiple: element.getResponsiveSetting('multiple'),\n    }\n    let text\n    const {filesStorage, notActive} = this.state\n    if(_.isArray(filesStorage)){\n      text = filesStorage.map(file => file.getFileName()).join(', ');\n    } else if(filesStorage instanceof AltrpFile) {\n      text = filesStorage.getFileName()\n    } else {\n      text = replaceContentWithData(element.getResponsiveSetting('placeholder'), element.getCurrentModel().getData())\n    }\n    const fileInputProps = {\n      disabled,\n      key: this.state.key,\n      inputProps,\n      text,\n      className: `${notActive ? 'pointer-event-none' : ''}`,\n      buttonText: replaceContentWithData(element.getResponsiveSetting('button_text'), element.getCurrentModel().getData()),\n      onInputChange: this.onChange\n    }\n    if (element.getResponsiveSetting('preview')) {\n      fileInputProps.style = {\n        backgroundImage: `url(${this.state.imageUrls_0})`,\n        pointerEvents : notActive ? 'none' : '',\n      }\n      fileInputProps.className = 'bp3-file-input_preview'\n    }\n    return (\n      <FileInput {...fileInputProps} ref={this.wrapperRef}/>\n    );\n\n  }\n\n}\n\nexport default InputFileWidget;\n","/**\r\n * @class AltrpFile\r\n */\r\nclass AltrpFile extends AltrpModel{\r\n  constructor(data) {\r\n    if(data instanceof File){\r\n      data = {file: data}\r\n    }\r\n    if(! data.file instanceof File){\r\n      throw new Error('Need a File instance in AltrpFile Constructor')\r\n    }\r\n    super(data);\r\n    if(data.file.type.indexOf('image') >= 0){\r\n      const reader = new FileReader\r\n      reader.onload = ()=>{\r\n        this.setProperty('dataAsUrl', reader.result)\r\n      }\r\n      reader.readAsDataURL(data.file)\r\n    }\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Promise<AltrpFile>}\r\n   */\r\n  async storeFile(){\r\n    try {\r\n      let response = await AltrpFile.getResource().postFiles([this.getFile()])\r\n      this.setProperty('media', response[0])\r\n    }catch (e) {\r\n      console.error(e);\r\n    }\r\n    return this\r\n  }\r\n  /**\r\n   *\r\n   * @returns {Promise<AltrpFile>}\r\n   */\r\n  async deleteFileFromStorage(){\r\n    const id = this.getProperty('media.id');\r\n    if(! id){\r\n      return this\r\n    }\r\n    try {\r\n      let response = await AltrpFile.getResource().delete(id)\r\n      this.setProperty('media', null)\r\n    }catch (e) {\r\n      console.error(e);\r\n    }\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * @return {File}\r\n   */\r\n  getFile(){\r\n    return this.getProperty('file')\r\n  }\r\n  getFileName(){\r\n    return this.getFile()?.name || ''\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {string}\r\n   */\r\n  toString(){\r\n    return this.getFileName()\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Resource}\r\n   */\r\n  static getResource(){\r\n    if(! AltrpFile.resource){\r\n      AltrpFile.resource = new window.altrpHelpers.Resource({route: '/ajax/media'})\r\n    }\r\n    return AltrpFile.resource\r\n  }\r\n}\r\n\r\nexport default AltrpFile\r\n","export const CHANGE_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\nexport const CLEAR_FORM_FIELD_VALUE = 'CHANGE_FORM_FIELD_VALUE';\n\n/**\n * Получает данные поля формы и сохраняет в хранилище\n * @param {string}fieldName\n * @param {*}value\n * @param {string}formId\n * @param {boolean}userInput\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function changeFormFieldValue(fieldName, value, formId, userInput) {\n  return {\n    type: CHANGE_FORM_FIELD_VALUE,\n    fieldName,\n    value,\n    formId,\n    changedField: userInput ? `${formId}.${fieldName}` : null,\n  };\n}\n/**\n * Очистить данные поля формы и сохраняет в хранилище\n * @param {string | null}formId\n * @return {{type: string, fieldName: *, value: *, formId: *}}\n */\nexport function clearFormStorage(formId = null) {\n  return {\n    type: CLEAR_FORM_FIELD_VALUE,\n    formId,\n  };\n}\n\n"],"sourceRoot":""}