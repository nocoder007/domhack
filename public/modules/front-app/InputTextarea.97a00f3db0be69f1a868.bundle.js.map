{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextareaWidget.js","webpack:///./node_modules/dot-prop-immutable/lib/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_get","target","property","receiver","Reflect","get","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","value","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","create","constructor","writable","configurable","_iterableToArray","iter","Symbol","iterator","from","_nonIterableRest","_possibleConstructorReturn","self","_slicedToArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_typeof","obj","_unsupportedIterableToArray","minLen","n","toString","name","test","moment","window","altrpHelpers","globalDefaults","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputTextareaWidget","props","timeInput","handleEnter","e","keyCode","preventDefault","inputs","document","querySelectorAll","index","indexOf","undefined","focus","element","getSettings","create_allowed","create_label","create_url","createItem","debounceDispatch","_","debounce","dispatchFieldValueToStore","onFocus","focus_actions","isEditor","actionsManager","default","callAllWidgetActions","getIdForAction","onBlur","editor","getData","userInput","formId","getFormId","fieldName","getFieldId","replaceContentWithData","isObject","appStore","dispatch","changeFormFieldValue","change_actions","inputValue","create_data","select2_multiple","currentModel","getCurrentModel","data","parseParamsFromString","url","parseURLTemplate","setState","state","isDisabled","resource","Resource","route","post","res","success","newOption","label","options","unshift","selectStateManager","menuIsOpen","console","error","getValue","getState","component","elementDecorator","onChange","bind","defaultValue","getContent","valueMustArray","parseOptionsFromSettings","paramsForUpdate","altrpSelectRef","React","createRef","this","prevProps","prevState","getProperty","contentLoaded","currentDataStorage","content_options","model_for_options","isEqual","dynamic","formsStore","updateOptions","updateValue","content_calculation","altrpforms","prevContext","altrpdata","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","currentDataStorageLoaded","changedField","altrpstorage","getDataFromLocalStorage","replace","eval","message","getId","path","formData","AltrpModel","isEmpty","JSON","stringify","getRoute","getQueried","filters","getAll","valueToDispatch","cloneDeep","change_change_end","change_change_end_delay","clearTimeout","setTimeout","optionsDynamicSetting","getDynamicSetting","convertData","sortBy","content_readonly","label_icon","classLabel","styleLabel","getResponsiveSetting","marginBottom","label_style_spacing","size","unit","marginTop","marginRight","position","zIndex","content_label","className","style","content_required","assetType","renderAssetIcon","autocomplete","content_autocomplete","input","readOnly","autoComplete","placeholder","content_placeholder","position_css_classes","id","position_css_id","Component","set","prop","propToArray","setPropImmutableRec","clone","head","getArrayIndex","assign","Math","max","Error","parseInt","split","reduce","ret","el","list","last","prev","pop","module","exports","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val"],"mappings":"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","file":"InputTextarea.97a00f3db0be69f1a868.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import {\n  convertData,\n  isEditor,\n  parseOptionsFromSettings,\n  parseParamsFromString,\n  parseURLTemplate,\n  replaceContentWithData,\n  renderAssetIcon,\n  valueReplacement,\n  getDataFromLocalStorage\n} from \"../../../../../front-app/src/js/helpers\";\nimport Resource from \"../../classes/Resource\";\nimport { changeFormFieldValue } from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\nimport AltrpModel from \"../../classes/AltrpModel\";\nimport AltrpInput from \"../altrp-input/AltrpInput\";\nimport { TextArea } from \"@blueprintjs/core\";\n\nconst { moment } = window.altrpHelpers;\n(window.globalDefaults = window.globalDefaults || []).push(`\n.altrp-field {\n  border-style: solid;\n  width: 100%;\n}\n.altrp-field-file{\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.altrp-label-icon svg,\n.altrp-label-icon img {\n  width: 20px;\n}\n.altrp-label-icon svg{\n  height: 20px;\n}\n.altrp-field-file__field{\n  display: none;\n}\n.altrp-field-file__placeholder{\n  display: none;\n}\n.altrp-field-file_empty .altrp-field-file__placeholder{\n  display: block;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: rgb(52,59,76);\n  color: #fff;\n}\n.input-clear-btn {\n  background: transparent;\n  padding: 0;\n  position: absolute;\n  bottom: calc(50% - 7px);\n  right: 15px;\n  display: none;\n}\n.input-clear-btn:hover {\n  font-weight: bold;\n}\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\n  display: block;\n}\n.altrp-input-wrapper, .altrp-field-select2 {\n  position: relative;\n  flex-grow: 1;\n}\n.altrp-field-label--required::after {\n  content: \"*\";\n  color: red;\n  font-size: inherit;\n  padding-left: 10px;\n}\n.altrp-field-label {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__single-value, .altrp-field {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__control, .altrp-field {\n  text-align: left;\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 2px;\n  border-width: 1px;\n}\n.altrp-field-select2__control:hover{\n  border-width: 1px;\n}\n.altrp-field-container {\n  margin: 0;\n}\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\n  font-size: 13px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-image-select {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.altrp-image-select img {\n  flex-grow: 1;\n  object-fit: contain;\n}\n.altrp-field {\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.altrp-field.active {\n  border-color: lightcoral;\n}\n.altrp-field-label {\n  text-align: center;\n  display: block;\n}\n.altrp-pagination__select-size .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-pagination__select-size .altrp-field-select2__control {\n  width: 100px;\n  min-height: 32px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142,148,170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-field-select2 {\n  position: relative;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n.altrp-field-select2__control {\n  webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background-color: hsl(0,0%,100%);\n  border-color: hsl(0,0%,80%);\n  border-style: solid;\n  border-width: 1px;\n  cursor: default;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  min-height: 38px;\n  outline: 0 !important;\n  position: relative;\n  -webkit-transition: all 100ms;\n  transition: all 100ms;\n  box-sizing: border-box;\n}\n.altrp-field-select2__value-container {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  padding: 2px 8px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n.altrp-field-select2__single-value {\n  color: hsl(0,0%,20%);\n  margin-left: 2px;\n  margin-right: 2px;\n  max-width: calc(100% - 8px);\n  overflow: hidden;\n  position: absolute;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicators {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-shrink: 0;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator-separator {\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  background-color: hsl(0,0%,80%);\n  margin-bottom: 8px;\n  margin-top: 8px;\n  width: 1px;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator {\n  color: hsl(0,0%,80%);\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 8px;\n  -webkit-transition: color 150ms;\n  transition: color 150ms;\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n}\n.tba-placeholder {\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: bold;\n}\n.altrp-field-subgroup {\n  display: flex;\n  flex-wrap: wrap;\n}\n.altrp-field-option {\n  display: flex;\n  padding: 10px;\n}\n.altrp-field-option__label {\n  cursor: pointer;\n}\ntextarea.altrp-field {\n  display: block;\n}\n.altrp-table__filter-select .altrp-field-select2__placeholder {\n  white-space: nowrap;\n}\n.altrp-table__filter-select .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-table__filter-select .altrp-field-select2__control {\n  width: 100%;\n  min-height: 19px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142, 148, 170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-table__filter-select .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-table__filter-select .altrp-field-select2__value-container {\n  padding-top: 0;\n  padding-bottom: 0;\n  line-height: 13px;\n}\n.altrp-field-required {\n  color: red;\n  font-size: 18px;\n  padding-left: 10px;\n}\n.altrp-field-container-label {\n  display: flex;\n  flex-direction: row;\n}\n\n.altrp-field-label-container-left {\n  display: flex;\n  align-items: center;\n}\n\n.altrp-field-label-container {\n  display: inline-flex;\n  align-items: center;\n}\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\n  padding: 0 8px;\n  max-height: 14px;\n  overflow: hidden;\n}\n.altrp-field-select2 .altrp-field-select2__value-container {\n  padding: 0px 8px;\n}\n.altrp-field-select2 .css-b8ldur-Input {\n  padding-bottom: 0px;\n  padding-top: 0px;\n  margin: 0 2px;\n}\n.altrp-field-select2 .altrp-field-select2__control {\n  min-height: 14px;\n}\n`)\nconst AltrpFieldContainer = styled.div`\n  ${({ settings: { content_label_position_type } }) => {\n    switch (content_label_position_type) {\n      case \"left\": {\n        return \"display: flex\";\n      }\n      case \"right\": {\n        return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\n      }\n    }\n    return \"\";\n  }}\n`;\n\nclass InputTextareaWidget extends Component {\n  timeInput = null;\n\n  constructor(props) {\n    super(props);\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    this.onChange = this.onChange.bind(this);\n    this.debounceDispatch = this.debounceDispatch.bind(this);\n\n    this.defaultValue =\n      this.getContent(\"content_default_value\") ||\n      (this.valueMustArray() ? [] : \"\");\n    if (this.valueMustArray() && !_.isArray(this.defaultValue)) {\n      this.defaultValue = [];\n    }\n    this.state = {\n      settings: { ...props.element.getSettings() },\n      value: this.defaultValue,\n      options: parseOptionsFromSettings(\n        props.element.getSettings(\"content_options\")\n      ),\n      paramsForUpdate: null\n    };\n    this.altrpSelectRef = React.createRef();\n    if (this.getContent(\"content_default_value\")) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n  }\n\n  /**\n   * В некоторых случаях значение поля должно быть массивом\n   * @return {boolean}\n   */\n  valueMustArray() {\n    return false;\n  }\n  /**\n   * Чистит значение\n   */\n  clearValue() {\n    let value = \"\";\n    this.onChange(value);\n    this.dispatchFieldValueToStore(value, true);\n  }\n\n  /**\n   * Обработка нажатия клавиши\n   * @param {{}} e\n   */\n  handleEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\n      const index = inputs.indexOf(e.target);\n      if (index === undefined) return;\n      inputs[index + 1] && inputs[index + 1].focus();\n      const {\n        create_allowed,\n        create_label,\n        create_url\n      } = this.props.element.getSettings();\n      if (create_allowed && create_label && create_url) {\n        this.createItem(e);\n      }\n    }\n  };\n\n  /**\n   * Загрузка виджета\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  async _componentDidMount(prevProps, prevState) {\n    if (this.props.element.getSettings(\"content_options\")) {\n      let options = parseOptionsFromSettings(\n        this.props.element.getSettings(\"content_options\")\n      );\n\n      this.setState(state => ({ ...state, options }));\n    }\n\n    let value = this.state.value;\n    /**\n     * Если динамическое значение загрузилось,\n     * то используем this.getContent для получение этого динамического значения\n     * старые динамические данные\n     * */\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    /**\n     * Если модель обновилась при смене URL\n     */\n    if (\n      prevProps &&\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n    if (\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !this.state.contentLoaded\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n    if (this.state.value !== value) {\n      this.setState(\n        state => ({ ...state, value }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n  }\n\n  /**\n   * Получить url для запросов\n   */\n  getRoute() {\n    let url = this.props.element.getSettings(\"model_for_options\");\n\n    if (url.indexOf(\"/\") === -1) {\n      return `/ajax/models/${url}_options`;\n    }\n    if (url.indexOf(\"{{\") !== -1) {\n      url = replaceContentWithData(url);\n    }\n    return url;\n  }\n  /**\n   * Обновление виджета\n   */\n  async _componentDidUpdate(prevProps, prevState) {\n    const { content_options, model_for_options } = this.state.settings;\n    if (\n      prevProps &&\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\n    ) {\n      let value = this.getContent(\n        \"content_default_value\",\n        this.props.element.getSettings(\"select2_multiple\")\n      );\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n\n    /**\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\n     */\n    if (\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\n      this.state.value &&\n      this.state.value.dynamic\n    ) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    /**\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\n     */\n    if (\n      this.props.formsStore !== prevProps.formsStore ||\n      this.props.currentModel !== prevProps.currentModel ||\n      this.props.currentDataStorage !== prevProps.currentDataStorage\n    ) {\n      this.updateOptions();\n    }\n    if (content_options && !model_for_options) {\n      let options = parseOptionsFromSettings(content_options);\n      if (!_.isEqual(options, this.state.options)) {\n        this.setState(state => ({ ...state, options }));\n      }\n    }\n    this.updateValue(prevProps);\n  }\n\n  /**\n   * Обновить значение если нужно\n   * @param {{}} prevProps\n   */\n  updateValue(prevProps) {\n    if (isEditor()) {\n      return;\n    }\n    let content_calculation = this.props.element.getSettings(\n      \"content_calculation\"\n    );\n    const altrpforms = this.props.formsStore;\n    const fieldName = this.props.element.getFieldId();\n    const formId = this.props.element.getFormId();\n    if (!content_calculation) {\n      /**\n       * Обновить значение, если formsStore изменилось из другого компонента\n       */\n      const path = `${formId}.${fieldName}`;\n      if (\n        this.props.formsStore !== prevProps.formsStore &&\n        _.get(altrpforms, path) !== this.state.value\n      ) {\n        this.setState(state => ({\n          ...state,\n          value: _.get(altrpforms, path)\n        }));\n      }\n      return;\n    }\n\n    const prevContext = {};\n\n    const altrpdata = this.props.currentDataStorage.getData();\n    const altrpmodel = this.props.currentModel.getData();\n    const altrpuser = this.props.currentUser.getData();\n    const altrppagestate = this.props.altrpPageState.getData();\n    const altrpresponses = this.props.altrpresponses.getData();\n    const altrpmeta = this.props.altrpMeta.getData();\n    const context = this.props.element.getCurrentModel().getData();\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\n      context.altrpdata = altrpdata;\n      if (!altrpdata.currentDataStorageLoaded) {\n        prevContext.altrpdata = altrpdata;\n      } else {\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\n      }\n    }\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\n      context.altrpforms = altrpforms;\n      /**\n       * Не производим вычисления, если изменилось текущее поле\n       */\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\n        prevContext.altrpforms = altrpforms;\n      } else {\n        prevContext.altrpforms = prevProps.formsStore;\n      }\n    }\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\n      context.altrpmodel = altrpmodel;\n      prevContext.altrpmodel = prevProps.currentModel.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\n      context.altrppagestate = altrppagestate;\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\n    }\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\n      context.altrpmeta = altrpmeta;\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\n    }\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\n      context.altrpresponses = altrpresponses;\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\n    }\n\n    if (\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\n    ) {\n      return;\n    }\n    if (\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      `${formId}.${fieldName}` === altrpforms.changedField\n    ) {\n      return;\n    }\n    let value = \"\";\n    try {\n      content_calculation = content_calculation\n        .replace(/}}/g, \"')\")\n        .replace(/{{/g, \"_.get(context, '\");\n      value = eval(content_calculation);\n      if (value === this.state.value) {\n        return;\n      }\n      this.setState(\n        state => ({ ...state, value }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"Evaluate error in Input: '\" + e.message + \"'\",\n        this.props.element.getId()\n      );\n    }\n  }\n\n  /**\n   * Обновляет опции для селекта при обновлении данных, полей формы\n   */\n  async updateOptions() {\n    {\n      let formId = this.props.element.getFormId();\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\n      let formData = _.get(this.props.formsStore, [formId], {});\n      paramsForUpdate = parseParamsFromString(\n        paramsForUpdate,\n        new AltrpModel(formData)\n      );\n      /**\n       * Сохраняем параметры запроса, и если надо обновляем опции\n       */\n      let options = [...this.state.options];\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\n        if (!_.isEmpty(paramsForUpdate)) {\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\n            options = await new Resource({\n              route: this.getRoute()\n            }).getQueried({ filters: paramsForUpdate });\n          } else {\n            options = await new Resource({ route: this.getRoute() }).getQueried(\n              paramsForUpdate\n            );\n          }\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        } else if (this.state.paramsForUpdate) {\n          options = await new Resource({ route: this.getRoute() }).getAll();\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        }\n\n        this.setState(state => ({\n          ...state,\n          paramsForUpdate,\n          options\n        }));\n      }\n    }\n  }\n\n  /**\n   * Изменение значения в виджете\n   * @param e\n   * @param  editor для получения изменений из CKEditor\n   */\n  onChange(e, editor = null) {\n    let value = \"\";\n    let valueToDispatch;\n    const settings = this.props.element.getSettings();\n    if (e && e.target) {\n      value = e.target.value;\n    }\n\n    if (e && e.value) {\n      value = e.value;\n    }\n    if (_.get(editor, \"getData\")) {\n      value = `<div class=\"ck ck-content\" style=\"width:100%\">${editor.getData()}</div>`;\n    }\n    if (_.isArray(e)) {\n      value = _.cloneDeep(e);\n    }\n\n    if (\n      this.props.element.getSettings(\"content_options_nullable\") &&\n      e &&\n      e.value === \"<null>\"\n    ) {\n      value = null;\n    }\n\n    this.setState(\n      state => ({\n        ...state,\n        value\n      }),\n      () => {\n        /**\n         * Обновляем хранилище только если не текстовое поле\n         */\n\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n        const change_change_end = this.props.element.getSettings(\n          \"change_change_end\"\n        );\n        const change_change_end_delay = this.props.element.getSettings(\n          \"change_change_end_delay\"\n        );\n\n        this.dispatchFieldValueToStore(\n          valueToDispatch !== undefined ? valueToDispatch : value,\n          true\n        );\n\n        if (change_actions && !change_change_end && !isEditor()) {\n          this.debounceDispatch(\n            valueToDispatch !== undefined ? valueToDispatch : value\n          );\n        }\n        if (change_actions && change_change_end && !isEditor()) {\n          this.timeInput && clearTimeout(this.timeInput);\n          this.timeInput = setTimeout(() => {\n            this.debounceDispatch(\n              valueToDispatch !== undefined ? valueToDispatch : value\n            );\n          }, change_change_end_delay);\n        }\n      }\n    );\n  }\n\n  debounceDispatch = _.debounce(\n    value => this.dispatchFieldValueToStore(value, true),\n    150\n  );\n\n  /**\n   * получить опции\n   */\n  getOptions() {\n    let options = [...this.state.options];\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\n      \"content_options\"\n    );\n    if (optionsDynamicSetting) {\n      options = convertData(optionsDynamicSetting, options);\n    }\n    if (!this.props.element.getSettings(\"sort_default\")) {\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\n    }\n    return options;\n  }\n\n  /**\n   * Для действие по фокусу\n   * @param e\n   * @return {Promise<void>}\n   */\n\n  onFocus = async e => {\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\n\n    if (focus_actions && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n        )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"focus\",\n        focus_actions,\n        this.props.element\n      );\n    }\n  };\n  /**\n   * Потеря фокуса для оптимизации\n   * @param  e\n   * @param  editor для получения изменений из CKEditor\n   */\n  onBlur = async (e, editor = null) => {\n    if (_.get(editor, \"getData\")) {\n      this.dispatchFieldValueToStore(editor.getData(), true);\n    }\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n        )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"blur\",\n        this.props.element.getSettings(\"actions\", []),\n        this.props.element\n      );\n    }\n  };\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n            )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработка добавления опции по ajax\n   * @param {SyntheticKeyboardEvent} e\n   */\n  createItem = async e => {\n    const keyCode = e.keyCode;\n    const { value: inputValue } = e.target;\n    if (keyCode !== 13 || !inputValue) {\n      return;\n    }\n    const {\n      create_url,\n      create_label,\n      create_data,\n      select2_multiple\n    } = this.props.element.getSettings();\n    if (!create_label && !create_url) {\n      return;\n    }\n    const currentModel = this.props.element.getCurrentModel();\n    let data = parseParamsFromString(create_data, currentModel, true);\n    data[create_label] = inputValue;\n    let url = parseURLTemplate(create_url, currentModel.getData());\n    this.setState(state => ({ ...state, isDisabled: true }));\n    try {\n      const resource = new Resource({\n        route: url\n      });\n      let res = await resource.post(data);\n      if (res.success && _.get(res, \"data.id\")) {\n        let newOption = {\n          label: inputValue,\n          value: _.get(res, \"data.id\")\n        };\n        this.setState(\n          state => ({ ...state, isDisabled: false }),\n          () => {\n            let options = [...this.state.options];\n            options.unshift(newOption);\n            let value = this.state.value;\n            if (select2_multiple) {\n              value = value ? [...value] : [];\n              value.push(_.get(res, \"data.id\"));\n            } else {\n              value = _.get(res, \"data.id\");\n            }\n            this.setState(\n              state => ({ ...state, options, value }),\n              () => {\n                const selectStateManager = _.get(\n                  this,\n                  \"altrpSelectRef.current.selectRef.current\"\n                );\n                if (selectStateManager) {\n                  selectStateManager.setState({\n                    menuIsOpen: false,\n                    inputValue: \"\"\n                  });\n                }\n              }\n            );\n          }\n        );\n      }\n      this.setState(state => ({ ...state, isDisabled: false }));\n    } catch (error) {\n      console.error(error);\n      this.setState(state => ({ ...state, isDisabled: false }));\n    }\n  };\n\n  /**\n   * Взовращает имя для атрибута name\n   * @return {string}\n   */\n  getName() {\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  getValue = () => {\n    let value;\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (isEditor()) {\n      value = this.state.value;\n    } else {\n      value = _.get(appStore.getState(), `formsStore.${formId}.${fieldName}`, '')\n    }\n    return value;\n  }\n\n\n  render() {\n    let label = null;\n\n    const settings = this.props.element.getSettings();\n    const {\n      content_readonly,\n      select2_multiple: isMultiple,\n      label_icon\n    } = settings;\n\n    let value = this.getValue();\n\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    let classLabel = \"\";\n    let styleLabel = {};\n    const content_label_position_type = this.props.element.getResponsiveSetting(\n      \"content_label_position_type\"\n    );\n    switch (content_label_position_type) {\n      case \"top\":\n        styleLabel = {\n          marginBottom: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"bottom\":\n        styleLabel = {\n          marginTop: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"left\":\n        styleLabel = {\n          marginRight: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"altrp-field-label-container-left\";\n        // this.label.current.classList.add(\"hello\")\n\n        break;\n      case \"absolute\":\n        styleLabel = {\n          position: \"absolute\",\n          zIndex: 2\n        };\n        classLabel = \"\";\n        break;\n    }\n\n    if (this.state.settings.content_label) {\n      label = (\n        <div\n          className={\"altrp-field-label-container \" + classLabel}\n          style={styleLabel}\n        >\n          <label\n            className={`altrp-field-label ${this.state.settings.content_required\n              ? \"altrp-field-label--required\"\n              : \"\"\n              }`}\n          >\n            {this.state.settings.content_label}\n          </label>\n          {label_icon && label_icon.assetType && (\n            <span className=\"altrp-label-icon\">\n              {renderAssetIcon(label_icon)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      label = null;\n    }\n\n    let autocomplete = \"off\";\n    if (this.state.settings.content_autocomplete) {\n      autocomplete = \"on\";\n    } else {\n      autocomplete = \"off\";\n    }\n\n    const input = (\n      <TextArea\n        value={value || \"\"}\n        readOnly={content_readonly}\n        autoComplete={autocomplete}\n        placeholder={this.state.settings.content_placeholder}\n        className={\n          \"altrp-field \" + this.state.settings.position_css_classes\n        }\n        onChange={this.onChange}\n        onBlur={this.onBlur}\n        id={this.state.settings.position_css_id}\n      />\n    );\n    return (\n      <AltrpFieldContainer\n        settings={settings}\n        className=\"altrp-field-container \"\n      >\n        {content_label_position_type === \"top\" ? label : \"\"}\n        {content_label_position_type === \"left\" ? label : \"\"}\n        {content_label_position_type === \"right\" ? label : \"\"}\n        {content_label_position_type === \"absolute\" ? label : \"\"}\n        {/* .altrp-field-label-container */}\n        {input}\n        {content_label_position_type === \"bottom\" ? label : \"\"}\n      </AltrpFieldContainer>\n    );\n  }\n}\n\nexport default InputTextareaWidget;\n","/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n"],"sourceRoot":""}