{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/get.js","webpack:///./node_modules/@babel/runtime/helpers/esm/superPropBase.js","webpack:///./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack:///./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextCommonWidget.js","webpack:///./resources/modules/editor/src/js/components/widgets/InputTextWidget.js","webpack:///./node_modules/dot-prop-immutable/lib/index.js"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_arrayWithHoles","isArray","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_get","target","property","receiver","Reflect","get","base","object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","_getPrototypeOf","o","setPrototypeOf","__proto__","_inherits","subClass","superClass","TypeError","create","constructor","_iterableToArray","iter","Symbol","iterator","from","_nonIterableRest","_possibleConstructorReturn","_setPrototypeOf","p","_slicedToArray","arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","push","err","unsupportedIterableToArray","nonIterableRest","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_typeof","_unsupportedIterableToArray","minLen","n","toString","name","test","window","altrpHelpers","isEditor","replaceContentWithData","renderAsset","getDataFromLocalStorage","globalDefaults","AltrpFieldContainer","styled","div","settings","content_label_position_type","InputTextCommonWidget","props","timeInput","handleEnter","e","keyCode","preventDefault","inputs","document","querySelectorAll","index","indexOf","undefined","focus","element","getSettings","create_allowed","create_label","create_url","createItem","getValue","formId","getFormId","fieldName","getFieldId","state","_","appStore","getState","debounceDispatch","debounce","dispatchFieldValueToStore","onFocus","focus_actions","actionsManager","default","callAllWidgetActions","getIdForAction","onBlur","editor","getData","userInput","isObject","dispatch","changeFormFieldValue","change_actions","handleLockClick","setState","showPassword","component","elementDecorator","onChange","bind","defaultValue","getContent","popoverProps","usePortal","portalClassName","getId","portalContainer","EditorFrame","contentWindow","body","altrpSelectRef","React","createRef","this","prevProps","prevState","currentModel","getProperty","contentLoaded","currentDataStorage","isEqual","dynamic","updateValue","content_calculation","altrpforms","formsStore","prevContext","altrpdata","altrpmodel","altrpuser","currentUser","altrppagestate","altrpPageState","altrpresponses","altrpmeta","altrpMeta","context","getCurrentModel","currentDataStorageLoaded","changedField","altrpstorage","replace","eval","console","error","message","path","change_change_end","change_change_end_delay","clearTimeout","setTimeout","left_icon","getResponsiveSetting","password_show_left_icon","content_type","leftIconProps","onClick","style","cursor","className","tabIndex","right_icon","password_show_right_icon","rightIconProps","label","content_readonly","label_icon","classLabel","styleLabel","label_icon_position","label_style_spacing","marginBottom","size","unit","marginTop","marginRight","position","zIndex","content_label","htmlFor","getName","display","flexDirection","content_required","type","autocomplete","content_autocomplete","input","id","readOnly","autoComplete","placeholder","content_placeholder","onKeyDown","leftIcon","renderLeftIcon","rightElement","renderRightIcon","Component","convertData","parseOptionsFromSettings","parseParamsFromString","parseURLTemplate","renderAssetIcon","InputTextWidget","inputValue","create_data","select2_multiple","data","url","isDisabled","resource","Resource","route","post","res","success","newOption","options","unshift","selectStateManager","menuIsOpen","paramsForUpdate","content_options","model_for_options","updateOptions","formData","AltrpModel","isEmpty","JSON","stringify","getRoute","getQueried","filters","getAll","valueToDispatch","cloneDeep","optionsDynamicSetting","getDynamicSetting","sortBy","assetType","isClearable","content_clearable","position_css_classes","position_css_id","set","prop","propToArray","setPropImmutableRec","clone","head","getArrayIndex","assign","Math","max","Error","parseInt","split","reduce","ret","el","list","last","prev","pop","module","exports","delete","deletePropImmutableRec","concat","toggle","curVal","Boolean","merge","val"],"mappings":"0FAAe,SAASA,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAE/C,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAC9CC,EAAKD,GAAKH,EAAIG,GAGhB,OAAOC,E,oECPM,SAASE,EAAgBN,GACtC,GAAIK,MAAME,QAAQP,GAAM,OAAOA,E,oECDlB,SAASQ,EAAuBC,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAG3B,OAAOD,E,oECLM,SAASE,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,E,mHCXM,SAASQ,EAAKC,EAAQC,EAAUC,GAiB7C,OAfEH,EADqB,oBAAZI,SAA2BA,QAAQC,IACrCD,QAAQC,IAER,SAAcJ,EAAQC,EAAUC,GACrC,IAAIG,ECLK,SAAwBC,EAAQL,GAC7C,MAAQP,OAAOa,UAAUC,eAAeC,KAAKH,EAAQL,IAEpC,QADfK,GAAS,EAAAI,EAAA,GAAeJ,MAI1B,OAAOA,EDDQ,CAAcN,EAAQC,GACjC,GAAKI,EAAL,CACA,IAAIM,EAAOjB,OAAOkB,yBAAyBP,EAAMJ,GAEjD,OAAIU,EAAKP,IACAO,EAAKP,IAAIK,KAAKP,GAGhBS,EAAKlB,SAIJO,EAAQC,EAAUC,GAAYF,K,mCElB7B,SAASa,EAAgBC,GAItC,OAHAD,EAAkBnB,OAAOqB,eAAiBrB,OAAOgB,eAAiB,SAAyBI,GACzF,OAAOA,EAAEE,WAAatB,OAAOgB,eAAeI,KAEvBA,G,mHCHV,SAASG,EAAUC,EAAUC,GAC1C,GAA0B,mBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIC,UAAU,sDAGtBF,EAASX,UAAYb,OAAO2B,OAAOF,GAAcA,EAAWZ,UAAW,CACrEe,YAAa,CACX7B,MAAOyB,EACPpB,UAAU,EACVD,cAAc,KAGdsB,IAAY,OAAeD,EAAUC,K,mCCb5B,SAASI,EAAiBC,GACvC,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOxC,MAAM2C,KAAKH,G,oECDvG,SAASI,IACtB,MAAM,IAAIR,UAAU,6I,8HCCP,SAASS,EAA2BzC,EAAMqB,GACvD,OAAIA,GAA2B,YAAlB,OAAQA,IAAsC,mBAATA,GAI3C,OAAsBrB,GAHpBqB,I,mCCJI,SAASqB,EAAgBhB,EAAGiB,GAMzC,OALAD,EAAkBpC,OAAOqB,gBAAkB,SAAyBD,EAAGiB,GAErE,OADAjB,EAAEE,UAAYe,EACPjB,IAGcA,EAAGiB,G,yICFb,SAASC,EAAerD,EAAKG,GAC1C,OAAO,EAAAmD,EAAA,GAAetD,ICLT,SAA+BA,EAAKG,GACjD,IAAIoD,EAAY,MAAPvD,EAAc,KAAyB,oBAAX8C,QAA0B9C,EAAI8C,OAAOC,WAAa/C,EAAI,cAE3F,GAAU,MAANuD,EAAJ,CACA,IAIIC,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKL,EAAKA,EAAGzB,KAAK9B,KAAQ2D,GAAMH,EAAKD,EAAGM,QAAQC,QAC9CJ,EAAKK,KAAKP,EAAG1C,QAETX,GAAKuD,EAAKxD,SAAWC,GAH4BwD,GAAK,IAK5D,MAAOK,GACPJ,GAAK,EACLH,EAAKO,EACL,QACA,IACOL,GAAsB,MAAhBJ,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIK,EAAI,MAAMH,GAIlB,OAAOC,GDtBuB,CAAqB1D,EAAKG,KAAM,EAAA8D,EAAA,GAA2BjE,EAAKG,KAAM,EAAA+D,EAAA,O,mCELvF,SAASC,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfvD,OAAOwD,OAAOxD,OAAOyD,iBAAiBJ,EAAS,CACpDC,IAAK,CACHvD,MAAOC,OAAOwD,OAAOF,O,oJCHZ,SAASI,EAASzE,GAC/B,OAAO,OAAeA,KAAQ,OAAgBA,KAAQ,OAA2BA,KAAQ,W,wGCD5E,SAAS0E,EAAmB1E,GACzC,OCJa,SAA4BA,GACzC,GAAIK,MAAME,QAAQP,GAAM,OAAO,EAAA2E,EAAA,GAAiB3E,GDGzC,CAAkBA,KAAQ,EAAA4E,EAAA,GAAgB5E,KAAQ,EAAAiE,EAAA,GAA2BjE,IELvE,WACb,MAAM,IAAIyC,UAAU,wIFIwE,K,mCGL/E,SAASoC,EAAQjE,GAa9B,OATEiE,EADoB,mBAAX/B,QAAoD,iBAApBA,OAAOC,SACtC,SAAiBnC,GACzB,cAAcA,GAGN,SAAiBA,GACzB,OAAOA,GAAyB,mBAAXkC,QAAyBlC,EAAI+B,cAAgBG,QAAUlC,IAAQkC,OAAOlB,UAAY,gBAAkBhB,IAI9GA,G,mHCZF,SAASkE,EAA4B3C,EAAG4C,GACrD,GAAK5C,EAAL,CACA,GAAiB,iBAANA,EAAgB,OAAO,OAAiBA,EAAG4C,GACtD,IAAIC,EAAIjE,OAAOa,UAAUqD,SAASnD,KAAKK,GAAGmC,MAAM,GAAI,GAEpD,MADU,WAANU,GAAkB7C,EAAEQ,cAAaqC,EAAI7C,EAAEQ,YAAYuC,MAC7C,QAANF,GAAqB,QAANA,EAAoB3E,MAAM2C,KAAKb,GACxC,cAAN6C,GAAqB,2CAA2CG,KAAKH,IAAW,OAAiB7C,EAAG4C,QAAxG,K,w1FCPF,yBAKIK,OAAOC,aAJTC,SADF,qBACEA,SACAC,uBAFF,qBAEEA,uBACAC,YAHF,qBAGEA,YACAC,wBAJF,qBAIEA,yBAMDL,OAAOM,eAAiBN,OAAOM,gBAAkB,IAAI3B,KAArD,+nPA4VD,IAAM4B,oBAAsBC,OAAOC,IAAV,mIACrB,YACF,OADiD,EAA7CC,SAAWC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAIHC,sB,kNAGJ,+BAAYC,GAAO,kHACjB,mBAAMA,IAHRC,UAAY,KAEO,EAwCnBC,YAAc,SAAAC,GACZ,GAAkB,KAAdA,EAAEC,QAAgB,CACpBD,EAAEE,iBACF,IAAMC,EAASlG,MAAM2C,KAAKwD,SAASC,iBAAiB,iBAC9CC,EAAQH,EAAOI,QAAQP,EAAE/E,QAC/B,QAAcuF,IAAVF,EAAqB,OACzBH,EAAOG,EAAQ,IAAMH,EAAOG,EAAQ,GAAGG,QACvC,MAII,EAAKZ,MAAMa,QAAQC,cAHrBC,EADF,EACEA,eACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WAEEF,GAAkBC,GAAgBC,GACpC,EAAKC,WAAWf,KArDH,EAwGnBgB,SAAW,WACT,IACIC,EAAS,EAAKpB,MAAMa,QAAQQ,YAC5BC,EAAY,EAAKtB,MAAMa,QAAQU,aAMnC,OALIlC,WACM,EAAKmC,MAAM3G,MAEX4G,EAAEjG,IAAIkG,SAASC,WAAf,qBAAyCP,EAAzC,YAAmDE,GAAa,KA/GzD,EAuUnBM,iBAAmBH,EAAEI,UACnB,SAAAhH,GAAK,OAAI,EAAKiH,0BAA0BjH,GAAO,KAC/C,KAzUiB,EAmVnBkH,QAnVmB,oKAmVT,WAAM5B,GAAN,4IACF6B,EAAgB,EAAKhC,MAAMa,QAAQC,YAAY,mBAE/BzB,WAHd,gCAKE,wLALF,cAIA4C,EAJA,OASJC,QATI,SAUAD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,QACAJ,EACA,EAAKhC,MAAMa,SAdP,2CAnVS,wDA0WnBwB,OA1WmB,oKA0WV,WAAOlC,GAAP,sJAAUmC,EAAV,+BAAmB,KAC1B,EAAKR,0BAA0B3B,EAAE/E,OAAOP,OAAO,GAE3C4G,EAAEjG,IAAI8G,EAAQ,YAChB,EAAKR,0BAA0BQ,EAAOC,WAAW,IAE/C,EAAKvC,MAAMa,QAAQC,YAAY,UAAW,KAAQzB,WAN/C,gCAQG,wLARH,cAOC4C,EAPD,OAYHC,QAZG,SAaCD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,OACA,EAAKpC,MAAMa,QAAQC,YAAY,UAAW,IAC1C,EAAKd,MAAMa,SAjBR,2CA1WU,wDAoYnBiB,0BApYmB,oKAoYS,WAAOjH,GAAP,4JAAc2H,EAAd,gCACtBpB,EAAS,EAAKpB,MAAMa,QAAQQ,aAEC,KAD7BC,EAAY,EAAKtB,MAAMa,QAAQU,cACrBb,QAAQ,QACpBY,EAAYhC,uBAAuBgC,MAEjCG,EAAEgB,SAAS,EAAKzC,MAAM0B,WAAaJ,GAAaF,GAN1B,oBAOxB,EAAKpB,MAAM0B,SAASgB,UAClBC,sFAAqBrB,EAAWzG,EAAOuG,EAAQoB,KAE7CA,EAVoB,sBAWhBI,EAAiB,EAAK5C,MAAMa,QAAQC,YAAY,oBAE/BzB,WAbD,kCAeZ,wLAfY,eAcd4C,EAdc,OAmBlBC,QAnBkB,UAoBdD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,SACAQ,EACA,EAAK5C,MAAMa,SAxBO,4CApYT,wDA2anBgC,gBAAkB,WAChB,EAAKC,UAAS,SAACtB,GACb,sCACKA,GADL,IAEEuB,cAAevB,EAAMuB,mBA7azB/C,EAAMa,QAAQmC,WAAd,mFACI7D,OAAO8D,kBACT9D,OAAO8D,kBAAP,oFAEF,EAAKC,SAAW,EAAKA,SAASC,MAAd,oFAChB,EAAKvB,iBAAmB,EAAKA,iBAAiBuB,MAAtB,oFAExB,EAAKC,aAAe,EAAKC,WAAW,yBAEpC,EAAK7B,MAAQ,CACX3B,SAAU,cAAF,GAAMG,EAAMa,QAAQC,eAC5BiC,cAAc,GAEhB,EAAKO,aAAe,CAClBC,WAAW,EAEXC,gBAAiB,4BAAF,OAA8B,EAAKxD,MAAMa,QAAQ4C,SAChEC,gBAAiBvE,OAAOwE,YAAcxE,OAAOwE,YAAYC,cAAcrD,SAASsD,KAAOtD,SAASsD,MAElG,EAAKC,eAAiBC,MAAMC,YACxB,EAAKX,WAAW,0BAClB,EAAKvB,0BAA0B,EAAKuB,WAAW,0BAvBhC,E,4HA8BnB,WAEEY,KAAKf,SADO,IAEZe,KAAKnC,0BAFO,IAE0B,K,wMA8BxC,WAAyBoC,EAAWC,GAApC,+IAEMtJ,EAAQoJ,KAAK9C,YAMf+C,GACCA,EAAUE,aAAaC,YAAY,uBACpCJ,KAAKjE,MAAMoE,aAAaC,YAAY,qBAVxC,uBAYIxJ,EAAQoJ,KAAKZ,WAAW,yBACxBY,KAAKnB,UACH,SAAAtB,GAAK,sCAASA,GAAT,IAAgB8C,eAAe,OACpC,WACE,EAAKxC,0BAA0BjH,MAhBvC,8BAsBIoJ,KAAKjE,MAAMoE,aAAaC,YAAY,uBACpCJ,KAAKjE,MAAMuE,mBAAmBF,YAAY,6BACzCJ,KAAKzC,MAAM8C,cAxBhB,uBA0BIzJ,EAAQoJ,KAAKZ,WAAW,yBACxBY,KAAKnB,UACH,SAAAtB,GAAK,sCAASA,GAAT,IAAgB8C,eAAe,OACpC,WACE,EAAKxC,0BAA0BjH,MA9BvC,mE,4QAwDA,WAA0BqJ,EAAWC,GAArC,4IAEID,IACCA,EAAUK,mBAAmBF,YAAY,6BAC1CJ,KAAKjE,MAAMuE,mBAAmBF,YAAY,8BAEtCxJ,EAAQoJ,KAAKZ,WACf,wBACAY,KAAKjE,MAAMa,QAAQC,YAAY,qBAEjCmD,KAAKnB,UACH,SAAAtB,GAAK,sCAASA,GAAT,IAAgB8C,eAAe,OACpC,WACE,EAAKxC,0BAA0BjH,QASlC4G,EAAE+C,QAAQP,KAAKjE,MAAMoE,aAAcF,EAAUE,eAC9CH,KAAKzC,MAAM3G,OACXoJ,KAAKzC,MAAM3G,MAAM4J,SAEjBR,KAAKnC,0BAA0BmC,KAAKZ,WAAW,0BAGjDY,KAAKS,YAAYR,GA7BnB,gD,4FAoCA,SAAAQ,YAAYR,WAAW,gBACrB,IAAI7E,WAAJ,CAGA,IAAIsF,oBAAsBV,KAAKjE,MAAMa,QAAQC,YAC3C,uBAEI8D,WAAaX,KAAKjE,MAAM6E,WACxBvD,UAAY2C,KAAKjE,MAAMa,QAAQU,aAC/BH,OAAS6C,KAAKjE,MAAMa,QAAQQ,YAClC,GAAKsD,oBAAL,CAiBA,IAAMG,YAAc,GAEdC,UAAYd,KAAKjE,MAAMuE,mBAAmBhC,UAC1CyC,WAAaf,KAAKjE,MAAMoE,aAAa7B,UACrC0C,UAAYhB,KAAKjE,MAAMkF,YAAY3C,UACnC4C,eAAiBlB,KAAKjE,MAAMoF,eAAe7C,UAC3C8C,eAAiBpB,KAAKjE,MAAMqF,eAAe9C,UAC3C+C,UAAYrB,KAAKjE,MAAMuF,UAAUhD,UACjCiD,QAAUvB,KAAKjE,MAAMa,QAAQ4E,kBAAkBlD,UAiDrD,IAhDkD,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQT,UAAYA,UACfA,UAAUW,yBAGbZ,YAAYC,UAAYb,UAAUK,mBAAmBhC,UAFrDuC,YAAYC,UAAYA,YAKuB,IAA/CJ,oBAAoBjE,QAAQ,gBAC9B8E,QAAQZ,WAAaA,WAIjB,UAAGxD,OAAH,YAAaE,aAAgBsD,WAAWe,aAC1Cb,YAAYF,WAAaA,WAEzBE,YAAYF,WAAaV,UAAUW,aAGY,IAA/CF,oBAAoBjE,QAAQ,gBAC9B8E,QAAQR,WAAaA,WACrBF,YAAYE,WAAad,UAAUE,aAAa7B,YAEA,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYf,UAAUgB,YAAY3C,YAEE,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYf,UAAUgB,YAAY3C,YAEO,IAAnDoC,oBAAoBjE,QAAQ,oBAC9B8E,QAAQL,eAAiBA,eACzBL,YAAYK,eAAiBjB,UAAUkB,eAAe7C,YAEN,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQF,UAAYA,UACpBR,YAAYQ,UAAYpB,UAAUqB,UAAUhD,YAES,IAAnDoC,oBAAoBjE,QAAQ,oBAC9B8E,QAAQH,eAAiBA,eACzBP,YAAYO,eAAiBnB,UAAUmB,eAAe9C,YAGH,IAAjDoC,oBAAoBjE,QAAQ,kBAC9B8E,QAAQI,aAAepG,wBAAwB,eAAgB,OAI/DiC,EAAE+C,QAAQN,UAAUK,mBAAoBN,KAAKjE,MAAMuE,qBACnD9C,EAAE+C,QAAQN,UAAUgB,YAAajB,KAAKjE,MAAMkF,cAC5CzD,EAAE+C,QAAQN,UAAUW,WAAYZ,KAAKjE,MAAM6E,aAC3CpD,EAAE+C,QAAQN,UAAUkB,eAAgBnB,KAAKjE,MAAMoF,iBAC/C3D,EAAE+C,QAAQN,UAAUqB,UAAWtB,KAAKjE,MAAMuF,YAC1C9D,EAAE+C,QAAQN,UAAUmB,eAAgBpB,KAAKjE,MAAMqF,iBAC/C5D,EAAE+C,QAAQN,UAAUE,aAAcH,KAAKjE,MAAMoE,iBAK5C3C,EAAE+C,QAAQN,UAAUW,WAAYZ,KAAKjE,MAAM6E,aAC5C,UAAGzD,OAAH,YAAaE,aAAgBsD,WAAWe,cAF1C,CAMA,IAAI9K,MAAQ,GACZ,IAKE,GAJA8J,oBAAsBA,oBACnBkB,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClBhL,MAAQiL,KAAKnB,qBACT9J,QAAUoJ,KAAKzC,MAAM3G,MACvB,OAEFoJ,KAAKnB,UACH,SAAAtB,GAAK,sCAASA,GAAT,IAAgB3G,iBACrB,WACE,OAAKiH,0BAA0BjH,UAGnC,MAAOsF,GACP4F,QAAQC,MACN,6BAA+B7F,EAAE8F,QAAU,IAC3ChC,KAAKjE,MAAMa,QAAQ4C,eA7GvB,CAIE,IAAMyC,KAAO,GAAH,OAAM9E,OAAN,YAAgBE,WAExB2C,KAAKjE,MAAM6E,aAAeX,UAAUW,YACpCpD,EAAEjG,IAAIoJ,WAAYsB,QAAUjC,KAAKzC,MAAM3G,OAEvCoJ,KAAKnB,UAAS,SAAAtB,GAAK,sCACdA,GADc,IAEjB3G,MAAO4G,EAAEjG,IAAIoJ,WAAYsB,e,sBA4GjC,SAAS/F,GAAG,WACNtF,EAAQ,GACRsF,GAAKA,EAAE/E,SACTP,EAAQsF,EAAE/E,OAAOP,OAGfsF,GAAKA,EAAEtF,QACTA,EAAQsF,EAAEtF,OAQZ,IAAM+H,EAAiBqB,KAAKjE,MAAMa,QAAQC,YAAY,kBAChDqF,EAAoBlC,KAAKjE,MAAMa,QAAQC,YAC3C,qBAEIsF,EAA0BnC,KAAKjE,MAAMa,QAAQC,YACjD,4BAGE8B,GAAmBuD,GAAsB9G,YAC3C4E,KAAKrC,iBACmB/G,GAGtB+H,GAAkBuD,IAAsB9G,aAC1C4E,KAAKhE,WAAaoG,aAAapC,KAAKhE,WACpCgE,KAAKhE,UAAYqG,YAAW,WAC1B,EAAK1E,iBACmB/G,KAEvBuL,IAEF/G,WACD4E,KAAKnB,UAAS,SAAAtB,GAAK,sCAAOA,GAAP,IAAc3G,aAEjCoJ,KAAKnC,0BAA0BjH,GAAO,K,qBAoG1C,WACE,gBAAUoJ,KAAKjE,MAAMa,QAAQQ,YAA7B,YAA4C4C,KAAKjE,MAAMa,QAAQU,aAA/D,O,4BAYF,WACE,IAAOV,EAAWoD,KAAKjE,MAAhBa,QACH0F,EAAY1F,EAAQ2F,qBAAqB,aACzCC,EAA0B5F,EAAQ2F,qBAAqB,2BACpDE,EAAgB7F,EAAQhB,SAAxB6G,aACDC,EAAgB,GAWtB,MAVoB,aAAjBD,GAA+BzC,KAAKzC,MAAMuB,cAAgB0D,IAC3DF,EAAYE,EACZE,EAAcC,QAAU3C,KAAKpB,iBAEX,aAAjB6D,GAA+BD,IAChCE,EAAcC,QAAU3C,KAAKpB,gBAC7B8D,EAAcE,MAAQ,CACpBC,OAAQ,YAGRP,EAGG,+FAAMQ,UAAU,+CAAkDJ,EAAlE,CAAiFK,SAAS,MAC9FzH,YAAYgH,IAHN,O,6BAMX,WACE,IAAO1F,EAAWoD,KAAKjE,MAAhBa,QACHoG,EAAapG,EAAQ2F,qBAAqB,cAC1CU,EAA2BrG,EAAQ2F,qBAAqB,4BACrDE,EAAgB7F,EAAQhB,SAAxB6G,aACDS,EAAiB,GAUvB,MAToB,aAAjBT,GAA+BzC,KAAKzC,MAAMuB,cAAgBmE,IAC3DD,EAAaC,GAEK,aAAjBR,GAA+BQ,IAChCC,EAAeP,QAAU3C,KAAKpB,gBAC9BsE,EAAeN,MAAQ,CACrBC,OAAQ,YAGRG,EAGG,+FAAMF,UAAU,gDAAmDI,EAAnE,CAAmFH,SAAS,MAChGzH,YAAY0H,IAHN,O,oBAOX,WACE,IAAIG,EACEvH,EAAWoE,KAAKjE,MAAMa,QAAQC,cAElCuG,EAEExH,EAFFwH,iBACAC,EACEzH,EADFyH,WAEEzM,EAAQoJ,KAAK9C,WAEboG,EAAa,GACbC,EAAa,GACX1H,EAA8BmE,KAAKjE,MAAMa,QAAQ2F,qBACrD,+BAEIiB,EAAsBxD,KAAKjE,MAAMa,QAAQ2F,qBAAqB,uBAChEkB,EAAsBzD,KAAKjE,MAAMa,QAAQ2F,qBAAqB,uBAClE,OAAQ1G,GACN,IAAK,MACH0H,EAAa,CACXG,aAAcD,GACVA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXM,UAAWJ,GACPA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXO,YAAaL,GACTA,aAAA,EAAAA,EAAqBE,OACvBF,aADE,EACFA,EAAqBG,MACnB,OAENN,EAAa,mCACb,MACF,IAAK,WACHC,EAAa,CACXQ,SAAU,WACVC,OAAQ,GAEVV,EAAa,GAKfH,EADEnD,KAAKzC,MAAM3B,SAASqI,eAAiBZ,EAErC,2BACEP,UAAW,+BAAiCQ,EAC5CV,MAAOW,GAEP,6BACEW,QAASlE,KAAKmE,UACdvB,MAAO,CACLwB,QAAS,OACTC,cAAeb,GAEjBV,UAAS,0DAAqD9C,KAAKzC,MAAM3B,SAAS0I,iBAC9E,8BACA,KAGHtE,KAAKzC,MAAM3B,SAASqI,cAEpBZ,GAAcA,EAAWkB,MACxB,4BAAMzB,UAAU,oBACfxH,YAAY+H,MAOb,KAEV,IAAImB,EAEFA,EADExE,KAAKzC,MAAM3B,SAAS6I,qBACP,KAEA,MAGjB,IAAIC,EACF,2BAAK5B,UAAU,uBACb,oBAAC,uDAAD,CACEyB,KAA2C,aAArCvE,KAAKzC,MAAM3B,SAAS6G,aAA+BzC,KAAKzC,MAAMuB,aAAe,OAAS,WAAckB,KAAKzC,MAAM3B,SAAS6G,aAC9HzH,KAAMgF,KAAKmE,UACXQ,GAAI3E,KAAKmE,UACTvN,MAAOA,GAAS,GAChByI,aAAcW,KAAKX,aACnBzC,QAASoD,KAAKjE,MAAMa,QACpBgI,SAAUxB,EACVyB,aAAcL,EACdM,YAAa9E,KAAKzC,MAAM3B,SAASmJ,oBACjCnJ,SAAUoE,KAAKjE,MAAMa,QAAQC,cAC7BmI,UAAWhF,KAAK/D,YAChBgD,SAAUe,KAAKf,SACfb,OAAQ4B,KAAK5B,OACbN,QAASkC,KAAKlC,QACdmH,SAAUjF,KAAKkF,iBACfC,aAAcnF,KAAKoF,qBAKzB,OACE,oBAAC3J,oBAAD,CACEG,SAAUA,EACVkH,UAAU,0BAEuB,QAAhCjH,EAAwCsH,EAAQ,GAChB,SAAhCtH,EAAyCsH,EAAQ,GACjB,UAAhCtH,EAA0CsH,EAAQ,GAClB,aAAhCtH,EAA6CsH,EAAQ,GAErDuB,EACgC,WAAhC7I,EAA2CsH,EAAQ,Q,uBAjmBxBkC,WAumBpC,mD,0/FC39BA,yBASInK,OAAOC,aARTmK,YADF,qBACEA,YACAlK,SAFF,qBAEEA,SACAmK,yBAHF,qBAGEA,yBACAC,sBAJF,qBAIEA,sBACAC,iBALF,qBAKEA,iBACApK,uBANF,qBAMEA,uBACAqK,gBAPF,qBAOEA,gBACAnK,wBARF,qBAQEA,yBAODL,OAAOM,eAAiBN,OAAOM,gBAAkB,IAAI3B,KAArD,+nPA4VD,IAAM4B,oBAAsBC,OAAOC,IAAV,mIACrB,YACA,OADmD,EAAhDC,SAAYC,6BAEb,IAAK,OACH,MAAO,gBAET,IAAK,QACH,MAAO,oEAGX,MAAO,MAIL8J,gB,qNAGJ,yBAAY5J,GAAO,4GACjB,mBAAMA,IAHRC,UAAY,KAEO,EAoCnBC,YAAc,SAAAC,GACZ,GAAkB,KAAdA,EAAEC,QAAgB,CACpBD,EAAEE,iBACF,IAAMC,EAASlG,MAAM2C,KAAKwD,SAASC,iBAAiB,iBAC9CC,EAAQH,EAAOI,QAAQP,EAAE/E,QAC/B,QAAcuF,IAAVF,EAAqB,OACzBH,EAAOG,EAAQ,IAAMH,EAAOG,EAAQ,GAAGG,QACvC,MAII,EAAKZ,MAAMa,QAAQC,cAHrBC,EADF,EACEA,eACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WAEEF,GAAkBC,GAAgBC,GACpC,EAAKC,WAAWf,KAjDH,EAgcnByB,iBAAmBH,EAAEI,UACnB,SAAAhH,GAAK,OAAI,EAAKiH,0BAA0BjH,GAAO,KAC/C,KAlciB,EA+dnBkH,QA/dmB,qKA+dT,WAAM5B,GAAN,4IACF6B,EAAgB,EAAKhC,MAAMa,QAAQC,YAAY,mBAE/BzB,WAHd,gCAKE,wLALF,cAIA4C,EAJA,OASJC,QATI,SAUAD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,QACAJ,EACA,EAAKhC,MAAMa,SAdP,2CA/dS,wDAwfnBwB,OAxfmB,qKAwfV,WAAOlC,GAAP,sJAAUmC,EAAV,+BAAmB,KAC1B,EAAKR,0BAA0B3B,EAAE/E,OAAOP,OAAO,GAE3C4G,EAAEjG,IAAI8G,EAAQ,YAChB,EAAKR,0BAA0BQ,EAAOC,WAAW,IAG/C,EAAKvC,MAAMa,QAAQC,YAAY,UAAW,KAAQzB,WAP/C,gCASG,wLATH,cAQC4C,EARD,OAaHC,QAbG,SAcCD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,OACA,EAAKpC,MAAMa,QAAQC,YAAY,UAAW,IAC1C,EAAKd,MAAMa,SAlBR,2CAxfU,wDAohBnBiB,0BAphBmB,qKAohBS,WAAOjH,GAAP,4JAAc2H,EAAd,gCACtBpB,EAAS,EAAKpB,MAAMa,QAAQQ,aAGC,KAF7BC,EAAY,EAAKtB,MAAMa,QAAQU,cAErBb,QAAQ,QACpBY,EAAYhC,uBAAuBgC,MAGjCG,EAAEgB,SAAS,EAAKzC,MAAM0B,WAAaJ,GAAaF,GAR1B,oBASxB,EAAKpB,MAAM0B,SAASgB,UAClBC,uFAAqBrB,EAAWzG,EAAOuG,EAAQoB,KAG7CA,EAboB,sBAchBI,EAAiB,EAAK5C,MAAMa,QAAQC,YAAY,oBAE/BzB,WAhBD,kCAkBZ,wLAlBY,eAiBd4C,EAjBc,OAsBlBC,QAtBkB,UAuBdD,EAAeE,qBACnB,EAAKnC,MAAMa,QAAQuB,iBACnB,SACAQ,EACA,EAAK5C,MAAMa,SA3BO,4CAphBT,wDA0jBnBK,WA1jBmB,qKA0jBN,WAAMf,GAAN,gKACLC,EAAUD,EAAEC,QACHyJ,EAAe1J,EAAE/E,OAAxBP,MAEQ,KAAZuF,GAAmByJ,EAJZ,sDAaP,EAAK7J,MAAMa,QAAQC,cAJrBG,EATS,EASTA,WACAD,EAVS,EAUTA,aACA8I,EAXS,EAWTA,YACAC,EAZS,EAYTA,iBAGG/I,GAAiBC,EAfX,wDAmBLmD,EAAe,EAAKpE,MAAMa,QAAQ4E,mBACpCuE,EAAOP,sBAAsBK,EAAa1F,GAAc,IACvDpD,GAAgB6I,EACjBI,EAAMP,iBAAiBzI,EAAYmD,EAAa7B,WACpD,EAAKO,UAAS,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB0I,YAAY,OAvBrC,UA0BHC,EAAW,IAAIC,iDAAS,CAC5BC,MAAOJ,IA3BA,UA6BOE,EAASG,KAAKN,GA7BrB,SA6BLO,EA7BK,QA+BDC,SAAW/I,EAAEjG,IAAI+O,EAAK,aACxBE,EAAY,CACdrD,MAAOyC,EACPhP,MAAO4G,EAAEjG,IAAI+O,EAAK,YAGpB,EAAKzH,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB0I,YAAY,OAClC,WACE,IAAIQ,GAAU,4EAAI,EAAKlJ,MAAMkJ,SAC7BA,EAAQC,QAAQF,GAChB,IAAI5P,EAAQ,EAAK2G,MAAM3G,MACnBkP,GACFlP,EAAQA,GAAQ,4EAAIA,GAAS,IACvBiD,KAAK2D,EAAEjG,IAAI+O,EAAK,YAEtB1P,EAAQ4G,EAAEjG,IAAI+O,EAAK,WAGrB,EAAKzH,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiBkJ,UAAS7P,aAC/B,WACE,IAAM+P,EAAqBnJ,EAAEjG,KAAF,mFAEzB,4CAGEoP,GACFA,EAAmB9H,SAAS,CAC1B+H,YAAY,EACZhB,WAAY,YAQ1B,EAAK/G,UAAS,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB0I,YAAY,OArEvC,mDAuETnE,QAAQC,MAAR,MACA,EAAKlD,UAAS,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB0I,YAAY,OAxEvC,2DA1jBM,sDAEjBlK,EAAMa,QAAQmC,WAAd,mFACI7D,OAAO8D,kBACT9D,OAAO8D,kBAAP,oFAEF,EAAKC,SAAW,EAAKA,SAASC,MAAd,oFAChB,EAAKvB,iBAAmB,EAAKA,iBAAiBuB,MAAtB,oFAExB,EAAKC,aAAe,EAAKC,WAAW,0BAA4B,GAChE,EAAK7B,MAAQ,CACX3B,SAAU,cAAF,GAAOG,EAAMa,QAAQC,eAC7BjG,MAAO,EAAKuI,aACZsH,QAASlB,yBACPxJ,EAAMa,QAAQC,YAAY,oBAE5BgK,gBAAiB,MAEnB,EAAKhH,eAAiBC,MAAMC,YACxB,EAAKX,WAAW,0BAClB,EAAKvB,0BAA0B,EAAKuB,WAAW,0BApBhC,E,sHA2BnB,WACEY,KAAKf,SAAS,IACde,KAAKnC,0BAA0B,IAAI,K,yMA8BrC,WAAyBoC,EAAWC,GAApC,iJACMF,KAAKjE,MAAMa,QAAQC,YAAY,qBAC7B4J,EAAUlB,yBACZvF,KAAKjE,MAAMa,QAAQC,YAAY,oBAGjCmD,KAAKnB,UAAS,SAAAtB,GAAK,sCAAUA,GAAV,IAAiBkJ,gBAGlC7P,EAAQoJ,KAAKzC,MAAM3G,MAQrB4G,EAAEjG,IAAIX,EAAO,YACboJ,KAAKjE,MAAMoE,aAAaC,YAAY,uBAEpCxJ,EAAQoJ,KAAKZ,WAAW,2BAOxBa,GACCA,EAAUE,aAAaC,YAAY,uBACpCJ,KAAKjE,MAAMoE,aAAaC,YAAY,qBA7BxC,uBA+BIxJ,EAAQoJ,KAAKZ,WAAW,yBACxBY,KAAKnB,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB3G,QAAOyJ,eAAe,OAC5C,WACE,EAAKxC,0BAA0BjH,MAnCvC,8BA0CIoJ,KAAKjE,MAAMoE,aAAaC,YAAY,uBACpCJ,KAAKjE,MAAMuE,mBAAmBF,YAAY,6BACzCJ,KAAKzC,MAAM8C,cA5ChB,wBA8CIzJ,EAAQoJ,KAAKZ,WAAW,yBACxBY,KAAKnB,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB3G,QAAOyJ,eAAe,OAC5C,WACE,EAAKxC,0BAA0BjH,MAlDvC,2BAwDMoJ,KAAKzC,MAAM3G,QAAUA,GACvBoJ,KAAKnB,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB3G,aACtB,WACE,EAAKiH,0BAA0BjH,MA5DvC,iD,wFAqEA,WACE,IAAIoP,EAAMhG,KAAKjE,MAAMa,QAAQC,YAAY,qBAEzC,OAA0B,IAAtBmJ,EAAIvJ,QAAQ,KACd,uBAAuBuJ,EAAvB,cAEyB,IAAvBA,EAAIvJ,QAAQ,QACduJ,EAAM3K,uBAAuB2K,IAExBA,K,2MAMT,WAA0B/F,EAAWC,GAArC,sJACiDF,KAAKzC,MAAM3B,SAAlDkL,EADV,EACUA,gBAAiBC,EAD3B,EAC2BA,kBAGvB9G,IACCA,EAAUK,mBAAmBF,YAAY,6BAC1CJ,KAAKjE,MAAMuE,mBAAmBF,YAAY,8BAEtCxJ,EAAQoJ,KAAKZ,WACf,wBACAY,KAAKjE,MAAMa,QAAQC,YAAY,qBAEjCmD,KAAKnB,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB3G,QAAOyJ,eAAe,OAC5C,WACE,EAAKxC,0BAA0BjH,QASlC4G,EAAE+C,QAAQP,KAAKjE,MAAMoE,aAAcF,EAAUE,eAC9CH,KAAKzC,MAAM3G,OACXoJ,KAAKzC,MAAM3G,MAAM4J,SAEjBR,KAAKnC,0BAA0BmC,KAAKZ,WAAW,0BAO/CY,KAAKjE,MAAM6E,aAAeX,EAAUW,YACpCZ,KAAKjE,MAAMoE,eAAiBF,EAAUE,cACtCH,KAAKjE,MAAMuE,qBAAuBL,EAAUK,oBAE5CN,KAAKgH,gBAEHF,IAAoBC,IAClBN,EAAUlB,yBAAyBuB,GAClCtJ,EAAE+C,QAAQkG,EAASzG,KAAKzC,MAAMkJ,UACjCzG,KAAKnB,UAAS,SAAAtB,GAAK,sCAAUA,GAAV,IAAiBkJ,gBAGxCzG,KAAKS,YAAYR,GA/CnB,gD,4FAsDA,SAAAQ,YAAYR,WAAW,gBAErB,IAAI7E,WAAJ,CAIA,IAAIsF,oBAAsBV,KAAKjE,MAAMa,QAAQC,YAC3C,uBAEI8D,WAAaX,KAAKjE,MAAM6E,WACxBvD,UAAY2C,KAAKjE,MAAMa,QAAQU,aAC/BH,OAAS6C,KAAKjE,MAAMa,QAAQQ,YAElC,GAAKsD,oBAAL,CAiBA,IAAMG,YAAc,GACdC,UAAYd,KAAKjE,MAAMuE,mBAAmBhC,UAC1CyC,WAAaf,KAAKjE,MAAMoE,aAAa7B,UACrC0C,UAAYhB,KAAKjE,MAAMkF,YAAY3C,UACnC4C,eAAiBlB,KAAKjE,MAAMoF,eAAe7C,UAC3C8C,eAAiBpB,KAAKjE,MAAMqF,eAAe9C,UAC3C+C,UAAYrB,KAAKjE,MAAMuF,UAAUhD,UACjCiD,QAAUvB,KAAKjE,MAAMa,QAAQ4E,kBAAkBlD,UAyDrD,IAvDkD,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQT,UAAYA,UACfA,UAAUW,yBAGbZ,YAAYC,UAAYb,UAAUK,mBAAmBhC,UAFrDuC,YAAYC,UAAYA,YAMuB,IAA/CJ,oBAAoBjE,QAAQ,gBAC9B8E,QAAQZ,WAAaA,WAIjB,UAAGxD,OAAH,YAAaE,aAAgBsD,WAAWe,aAC1Cb,YAAYF,WAAaA,WAEzBE,YAAYF,WAAaV,UAAUW,aAIY,IAA/CF,oBAAoBjE,QAAQ,gBAC9B8E,QAAQR,WAAaA,WACrBF,YAAYE,WAAad,UAAUE,aAAa7B,YAGA,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYf,UAAUgB,YAAY3C,YAGE,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQP,UAAYA,UACpBH,YAAYG,UAAYf,UAAUgB,YAAY3C,YAGO,IAAnDoC,oBAAoBjE,QAAQ,oBAC9B8E,QAAQL,eAAiBA,eACzBL,YAAYK,eAAiBjB,UAAUkB,eAAe7C,YAGN,IAA9CoC,oBAAoBjE,QAAQ,eAC9B8E,QAAQF,UAAYA,UACpBR,YAAYQ,UAAYpB,UAAUqB,UAAUhD,YAGS,IAAnDoC,oBAAoBjE,QAAQ,oBAC9B8E,QAAQH,eAAiBA,eACzBP,YAAYO,eAAiBnB,UAAUmB,eAAe9C,YAGH,IAAjDoC,oBAAoBjE,QAAQ,kBAC9B8E,QAAQI,aAAepG,wBAAwB,eAAgB,OAI/DiC,EAAE+C,QAAQN,UAAUK,mBAAoBN,KAAKjE,MAAMuE,qBACnD9C,EAAE+C,QAAQN,UAAUgB,YAAajB,KAAKjE,MAAMkF,cAC5CzD,EAAE+C,QAAQN,UAAUW,WAAYZ,KAAKjE,MAAM6E,aAC3CpD,EAAE+C,QAAQN,UAAUkB,eAAgBnB,KAAKjE,MAAMoF,iBAC/C3D,EAAE+C,QAAQN,UAAUqB,UAAWtB,KAAKjE,MAAMuF,YAC1C9D,EAAE+C,QAAQN,UAAUmB,eAAgBpB,KAAKjE,MAAMqF,iBAC/C5D,EAAE+C,QAAQN,UAAUE,aAAcH,KAAKjE,MAAMoE,iBAM5C3C,EAAE+C,QAAQN,UAAUW,WAAYZ,KAAKjE,MAAM6E,aAC5C,UAAGzD,OAAH,YAAaE,aAAgBsD,WAAWe,cAF1C,CAOA,IAAI9K,MAAQ,GAEZ,IAKE,GAJA8J,oBAAsBA,oBACnBkB,QAAQ,MAAO,MACfA,QAAQ,MAAO,oBAClBhL,MAAQiL,KAAKnB,qBACT9J,QAAUoJ,KAAKzC,MAAM3G,MACvB,OAEFoJ,KAAKnB,UACH,SAAAtB,GAAK,sCAAUA,GAAV,IAAiB3G,iBACtB,WACE,OAAKiH,0BAA0BjH,UAGnC,MAAOsF,GACP4F,QAAQC,MACN,6BAA+B7F,EAAE8F,QAAU,IAC3ChC,KAAKjE,MAAMa,QAAQ4C,eAvHvB,CAIE,IAAMyC,KAAO,GAAH,OAAM9E,OAAN,YAAgBE,WAExB2C,KAAKjE,MAAM6E,aAAeX,UAAUW,YACpCpD,EAAEjG,IAAIoJ,WAAYsB,QAAUjC,KAAKzC,MAAM3G,OAEvCoJ,KAAKnB,UAAS,SAAAtB,GAAK,sCACdA,GADc,IAEjB3G,MAAO4G,EAAEjG,IAAIoJ,WAAYsB,e,+LAoHjC,2JAEQ9E,EAAS6C,KAAKjE,MAAMa,QAAQQ,YAC5ByJ,EAAkB7G,KAAKjE,MAAMa,QAAQC,YAAY,qBACjDoK,EAAWzJ,EAAEjG,IAAIyI,KAAKjE,MAAM6E,WAAY,CAACzD,GAAS,IACtD0J,EAAkBrB,sBAChBqB,EACA,IAAIK,mDAAWD,IAKbR,GAZR,4EAYsBzG,KAAKzC,MAAMkJ,SAExBjJ,EAAE+C,QAAQsG,EAAiB7G,KAAKzC,MAAMsJ,iBAd/C,oBAeWrJ,EAAE2J,QAAQN,GAfrB,qBAgBY7G,KAAKjE,MAAMa,QAAQC,YAAY,qBAAqB,GAhBhE,wBAiBUgK,EAAkBO,KAAKC,UAAUR,GAjB3C,UAkB0B,IAAIV,iDAAS,CAC3BC,MAAOpG,KAAKsH,aACXC,WAAW,CAAEC,QAASX,IApBnC,QAkBUJ,EAlBV,gDAsB0B,IAAIN,iDAAS,CAAEC,MAAOpG,KAAKsH,aAAcC,WACvDV,GAvBZ,QAsBUJ,EAtBV,eA0BQA,EAAWjJ,EAAEnH,QAAQoQ,GAA0BA,EAAfA,EAAQV,KACxCU,EAAUjJ,EAAEnH,QAAQoQ,GAAWA,EAAU,GA3BjD,4BA4BiBzG,KAAKzC,MAAMsJ,gBA5B5B,kCA6BwB,IAAIV,iDAAS,CAAEC,MAAOpG,KAAKsH,aAAcG,SA7BjE,QA6BQhB,EA7BR,OA8BQA,EAAWjJ,EAAEnH,QAAQoQ,GAA0BA,EAAfA,EAAQV,KACxCU,EAAUjJ,EAAEnH,QAAQoQ,GAAWA,EAAU,GA/BjD,QAkCMzG,KAAKnB,UAAS,SAAAtB,GAAK,sCACdA,GADc,IAEjBsJ,kBACAJ,eArCR,iD,gFAgDA,SAASvK,GAAkB,IAErBwL,EAFqB,OAAfrJ,EAAe,uDAAN,KACfzH,EAAQ,GAGRsF,GAAKA,EAAE/E,SACTP,EAAQsF,EAAE/E,OAAOP,OAGfsF,GAAKA,EAAEtF,QACTA,EAAQsF,EAAEtF,OAGR4G,EAAEjG,IAAI8G,EAAQ,aAChBzH,EAAQ,iDAAH,OAAoDyH,EAAOC,UAA3D,WAGHd,EAAEnH,QAAQ6F,KACZtF,EAAQ4G,EAAEmK,UAAUzL,IAIpB8D,KAAKjE,MAAMa,QAAQC,YAAY,6BAC/BX,GACY,WAAZA,EAAEtF,QAEFA,EAAQ,MAGVoJ,KAAKnB,UACH,SAAAtB,GAAK,sCACAA,GADA,IAEH3G,aAEF,WAKE,IAAM+H,EAAiB,EAAK5C,MAAMa,QAAQC,YAAY,kBAChDqF,EAAoB,EAAKnG,MAAMa,QAAQC,YAC3C,qBAEIsF,EAA0B,EAAKpG,MAAMa,QAAQC,YACjD,4BAGE8B,GAAmBuD,GAAsB9G,YAC3C,EAAKuC,sBACiBjB,IAApBgL,EAAgCA,EAAkB9Q,GAGlD+H,GAAkBuD,IAAsB9G,aAC1C,EAAKY,WAAaoG,aAAa,EAAKpG,WACpC,EAAKA,UAAYqG,YAAW,WAC1B,EAAK1E,sBACiBjB,IAApBgL,EAAgCA,EAAkB9Q,KAEnDuL,S,wBAcX,WACE,IAAIsE,GAAU,4EAAIzG,KAAKzC,MAAMkJ,SACvBmB,EAAwB5H,KAAKjE,MAAMa,QAAQiL,kBAC/C,mBAWF,OARID,IACFnB,EAAUnB,YAAYsC,EAAuBnB,IAG1CzG,KAAKjE,MAAMa,QAAQC,YAAY,kBAClC4J,EAAUjJ,EAAEsK,OAAOrB,GAAS,SAAAxO,GAAC,OAAIA,IAAMA,EAAEkL,MAAQlL,EAAEkL,MAAMpI,WAAa9C,OAGjEwO,I,qBAoLT,WACE,gBAAUzG,KAAKjE,MAAMa,QAAQQ,YAA7B,YAA4C4C,KAAKjE,MAAMa,QAAQU,aAA/D,O,oBAGF,WAAS,IACH6F,EADG,OAEDvH,EAAWoE,KAAKjE,MAAMa,QAAQC,cAElCuG,EAGExH,EAHFwH,iBAEAC,GACEzH,EAFFkK,iBAEElK,EADFyH,YAGEzM,EAAQoJ,KAAKzC,MAAM3G,MAGrB4G,EAAEjG,IAAIX,EAAO,YACboJ,KAAKjE,MAAMoE,aAAaC,YAAY,uBAEpCxJ,EAAQoJ,KAAKZ,WAAW,0BAQtBxI,GAASA,EAAM4J,UACjB5J,EAAQ,IAGV,IAAI0M,EAAa,GACbC,EAAa,GACX1H,EAA8BmE,KAAKjE,MAAMa,QAAQ2F,qBACrD,+BAGF,OAAQ1G,GACN,IAAK,MACH0H,EAAa,CACXG,aAAc1D,KAAKzC,MAAM3B,SAAS6H,oBAC9BzD,KAAKzC,MAAM3B,SAAS6H,oBAAoBE,KAC1C3D,KAAKzC,MAAM3B,SAAS6H,oBAAoBG,KACtC,OAENN,EAAa,GACb,MACF,IAAK,SACHC,EAAa,CACXM,UAAW7D,KAAKzC,MAAM3B,SAAS6H,oBAC3BzD,KAAKzC,MAAM3B,SAAS6H,oBAAoBE,KAC1C3D,KAAKzC,MAAM3B,SAAS6H,oBAAoBG,KACtC,OAENN,EAAa,GACb,MACF,IAAK,OACHC,EAAa,CACXO,YAAa9D,KAAKzC,MAAM3B,SAAS6H,oBAC7BzD,KAAKzC,MAAM3B,SAAS6H,oBAAoBE,KAC1C3D,KAAKzC,MAAM3B,SAAS6H,oBAAoBG,KACtC,OAENN,EAAa,mCACb,MACF,IAAK,WACHC,EAAa,CACXQ,SAAU,WACVC,OAAQ,GAEVV,EAAa,GAKfH,EADEnD,KAAKzC,MAAM3B,SAASqI,cAEpB,2BACEnB,UAAW,+BAAiCQ,EAC5CV,MAAOW,GAEP,6BACET,UAAS,4BAAuB9C,KAAKzC,MAAM3B,SAAS0I,iBAChD,8BACA,KAGHtE,KAAKzC,MAAM3B,SAASqI,eAEtBZ,GAAcA,EAAW0E,WACxB,4BAAMjF,UAAU,oBACb4C,gBAAgBrC,KAMjB,KAGV,IAAImB,EAEFA,EADExE,KAAKzC,MAAM3B,SAAS6I,qBACP,KAEA,MAGjB,IAAMuD,EAAchI,KAAKzC,MAAM3B,SAASqM,kBAElCvD,EACJ,2BAAK5B,UAAU,uBACb,oBAAC,uDAAD,CACEyB,KAAK,OACLvJ,KAAMgF,KAAKmE,UACXvN,MAAOA,GAAS,GAChBgG,QAASoD,KAAKjE,MAAMa,QACpBgI,SAAUxB,EACVyB,aAAcL,EACdM,YAAa9E,KAAKzC,MAAM3B,SAASmJ,oBACjCjC,UACE,eAAiB9C,KAAKzC,MAAM3B,SAASsM,qBAEvCtM,SAAUoE,KAAKjE,MAAMa,QAAQC,cAC7BmI,UAAWhF,KAAK/D,YAChBgD,SAAUe,KAAKf,SACfb,OAAQ4B,KAAK5B,OACbN,QAASkC,KAAKlC,QACd6G,GAAI3E,KAAKzC,MAAM3B,SAASuM,kBAEzBH,GACC,8BACElF,UAAU,kBACVH,QAAS,kBAAM,EAAK9D,SAAS,CAAEjI,MAAO,EAAKuI,iBAF7C,MAUN,OACE,oBAAC1D,oBAAD,CACEG,SAAUA,EACVkH,UAAU,0BAEuB,QAAhCjH,EAAwCsH,EAAQ,GAChB,SAAhCtH,EAAyCsH,EAAQ,GACjB,UAAhCtH,EAA0CsH,EAAQ,GAClB,aAAhCtH,EAA6CsH,EAAQ,GAErDuB,EACgC,WAAhC7I,EAA2CsH,EAAQ,Q,iBAnyB9BkC,WAyyB9B,6C,kBC5pCA,SAAS+C,EAAI1R,EAAK2R,EAAMzR,GACvByR,EAAuB,iBAATA,EAAoBC,EAAYD,EAAKtN,YAA8B,iBAATsN,EAAoBC,EAAYD,GAAQA,EAEhH,MAAME,EAAsB,CAAC7R,EAAK2R,EAAMzR,EAAOX,KAC9C,IAAIuS,EAAOC,EAAOJ,EAAKpS,GAEvB,OAAIoS,EAAKrS,OAASC,GACbE,MAAME,QAAQK,IACjB+R,EAAOC,EAAcD,EAAM/R,GAC3B8R,EAAQ9R,EAAI0D,SAEZoO,EAAQ3R,OAAO8R,OAAO,GAAIjS,GAE3B8R,EAAMC,GAAQF,OAAkC7L,IAAdhG,EAAI+R,GAAsB/R,EAAI+R,GAAQ,GAAIJ,EAAMzR,EAAOX,EAAI,GACtFuS,GAGgB,mBAAV5R,EAAuBA,EAAMF,GAAOE,GAGnD,OAAO2R,EAAoB7R,EAAK2R,EAAMzR,EAAO,GAS9C,SAASW,EAAIb,EAAK2R,EAAMzR,GACvByR,EAAuB,iBAATA,EAAoBC,EAAYD,EAAKtN,YAA8B,iBAATsN,EAAoBC,EAAYD,GAAQA,EAEhH,IAAK,IAAIpS,EAAI,EAAGA,EAAIoS,EAAKrS,OAAQC,IAAK,CACrC,GAAY,OAARS,GAA+B,iBAARA,EAC1B,OAAOE,EAER,IAAI6R,EAAOJ,EAAKpS,GACZE,MAAME,QAAQK,IAAiB,SAAT+R,IACzBA,EAAO/R,EAAIV,OAAS,GAErBU,EAAMA,EAAI+R,GAGX,YAAmB,IAAR/R,EACHE,EAGDF,EA0FR,SAASgS,EAAcD,EAAM/R,GAI5B,GAHa,SAAT+R,IACHA,EAAOG,KAAKC,IAAInS,EAAIV,OAAS,EAAG,KAE5B,WAAWiF,KAAKwN,GACpB,MAAM,IAAIK,MAAM,gBAAgBL,2BAEjC,OAAOM,SAASN,GAGjB,SAASH,EAAYD,GACpB,OAAOA,EAAKW,MAAM,KAAKC,QAAO,CAACC,EAAKC,EAAI3M,EAAO4M,KAC9C,MAAMC,EAAO7M,EAAQ,GAAK4M,EAAK5M,EAAQ,GACvC,GAAI6M,GAAQ,iBAAiBpO,KAAKoO,GAAO,CACxC,MAAMC,EAAOJ,EAAIK,MACjBL,EAAIrP,KAAKyP,EAAKlP,MAAM,GAAI,GAAK,IAAM+O,QAEnCD,EAAIrP,KAAKsP,GAEV,OAAOD,IACL,IAGJM,EAAOC,QAAU,CAChBrB,MACA7Q,MACAmS,OAzGD,SAAiBhT,EAAK2R,GACrBA,EAAuB,iBAATA,EAAoBC,EAAYD,EAAKtN,YAA8B,iBAATsN,EAAoBC,EAAYD,GAAQA,EAEhH,MAAMsB,EAAyB,CAACjT,EAAK2R,EAAMpS,KAC1C,IAAIuS,EAAOC,EAAOJ,EAAKpS,GAEvB,OAAY,OAARS,GAA+B,iBAARA,IACzBP,MAAME,QAAQK,SAAsBgG,IAAdhG,EAAI+R,GAEpB/R,EAGJ2R,EAAKrS,OAAS,EAAIC,GACjBE,MAAME,QAAQK,IACjB+R,EAAOC,EAAcD,EAAM/R,GAC3B8R,EAAQ9R,EAAI0D,SAEZoO,EAAQ3R,OAAO8R,OAAO,GAAIjS,GAG3B8R,EAAMC,GAAQkB,EAAuBjT,EAAI+R,GAAOJ,EAAMpS,EAAI,GACnDuS,IAGJrS,MAAME,QAAQK,IACjB+R,EAAOC,EAAcD,EAAM/R,GAC3B8R,EAAQ,GAAGoB,OAAOlT,EAAI0D,MAAM,EAAGqO,GAAO/R,EAAI0D,MAAMqO,EAAO,MAEvDD,EAAQ3R,OAAO8R,OAAO,GAAIjS,UACnB8R,EAAMC,IAGPD,IAGR,OAAOmB,EAAuBjT,EAAK2R,EAAM,IAuEzCwB,OA7DD,SAAgBnT,EAAK2R,GACpB,MAAMyB,EAASvS,EAAIb,EAAK2R,GACxB,OAAOD,EAAI1R,EAAK2R,GAAO0B,QAAQD,KA4D/BE,MAhDD,SAAetT,EAAK2R,EAAM4B,GACzB,MAAMH,EAASvS,EAAIb,EAAK2R,GACxB,MAAsB,iBAAXyB,EACN3T,MAAME,QAAQyT,GACV1B,EAAI1R,EAAK2R,EAAMyB,EAAOF,OAAOK,IAE7B7B,EAAI1R,EAAK2R,EADK,OAAXyB,EACYG,EAGTpT,OAAO8R,OAAO,GAAImB,EAAQG,SAGZ,IAAXH,EACV1B,EAAI1R,EAAK2R,EAAM4B,GAGfvT","file":"InputTextCommonWidget.5414010e0847904fd4c6.bundle.js","sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"@babel/runtime/helpers/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","const {\n  isEditor,\n  replaceContentWithData,\n  renderAsset,\n  getDataFromLocalStorage,\n} = window.altrpHelpers;\nimport {changeFormFieldValue} from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\nimport AltrpInput from \"../altrp-input/AltrpInput\";\n\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.altrp-field-label_text-widget{\n    width: 100%;\n}\n.bp3-icon_text-widget img{\n  width: 16px;\n  height: 16px;\n  object-fit: contain;\n  pointer-events: none;\n}\n.bp3-icon_text-widget svg{\n  width: 16px;\n  height: 16px;\n  pointer-events: none;\n}\n.bp3-icon_right{\n    margin: 7px;\n}\n.altrp-field {\n  border-style: solid;\n  width: 100%;\n}\n.altrp-field-file{\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.altrp-label-icon svg,\n.altrp-label-icon img {\n  width: 20px;\n}\n.altrp-label-icon svg{\n  height: 20px;\n}\n.altrp-field-file__field{\n  display: none;\n}\n.altrp-field-file__placeholder{\n  display: none;\n}\n.altrp-field-file_empty .altrp-field-file__placeholder{\n  display: block;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: rgb(52,59,76);\n  color: #fff;\n}\n.input-clear-btn {\n  background: transparent;\n  padding: 0;\n  position: absolute;\n  bottom: calc(50% - 7px);\n  right: 15px;\n  display: none;\n}\n.input-clear-btn:hover {\n  font-weight: bold;\n}\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\n  display: block;\n}\n.altrp-input-wrapper, .altrp-field-select2 {\n  position: relative;\n  flex-grow: 1;\n}\n.altrp-field-label--required::after {\n  content: \"*\";\n  color: red;\n  font-size: inherit;\n  padding-left: 10px;\n}\n.altrp-field-label {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__single-value, .altrp-field {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__control, .altrp-field {\n  text-align: left;\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 2px;\n  border-width: 1px;\n}\n.altrp-field-select2__control:hover{\n  border-width: 1px;\n}\n.altrp-field-container {\n  margin: 0;\n}\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\n  font-size: 13px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-image-select {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.altrp-image-select img {\n  flex-grow: 1;\n  object-fit: contain;\n}\n.altrp-field {\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.altrp-field.active {\n  border-color: lightcoral;\n}\n.altrp-field-label {\n  text-align: center;\n  display: block;\n}\n.altrp-pagination__select-size .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-pagination__select-size .altrp-field-select2__control {\n  width: 100px;\n  min-height: 32px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142,148,170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-field-select2 {\n  position: relative;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n.altrp-field-select2__control {\n  webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background-color: hsl(0,0%,100%);\n  border-color: hsl(0,0%,80%);\n  border-style: solid;\n  border-width: 1px;\n  cursor: default;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  min-height: 38px;\n  outline: 0 !important;\n  position: relative;\n  -webkit-transition: all 100ms;\n  transition: all 100ms;\n  box-sizing: border-box;\n}\n.altrp-field-select2__value-container {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  padding: 2px 8px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n.altrp-field-select2__single-value {\n  color: hsl(0,0%,20%);\n  margin-left: 2px;\n  margin-right: 2px;\n  max-width: calc(100% - 8px);\n  overflow: hidden;\n  position: absolute;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicators {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-shrink: 0;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator-separator {\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  background-color: hsl(0,0%,80%);\n  margin-bottom: 8px;\n  margin-top: 8px;\n  width: 1px;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator {\n  color: hsl(0,0%,80%);\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 8px;\n  -webkit-transition: color 150ms;\n  transition: color 150ms;\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n}\n.tba-placeholder {\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: bold;\n}\n.altrp-field-subgroup {\n  display: flex;\n  flex-wrap: wrap;\n}\n.altrp-field-option {\n  display: flex;\n  padding: 10px;\n}\n.altrp-field-option__label {\n  cursor: pointer;\n}\ntextarea.altrp-field {\n  display: block;\n}\n.altrp-table__filter-select .altrp-field-select2__placeholder {\n  white-space: nowrap;\n}\n.altrp-table__filter-select .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-table__filter-select .altrp-field-select2__control {\n  width: 100%;\n  min-height: 19px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142, 148, 170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-table__filter-select .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-table__filter-select .altrp-field-select2__value-container {\n  padding-top: 0;\n  padding-bottom: 0;\n  line-height: 13px;\n}\n.altrp-field-required {\n  color: red;\n  font-size: 18px;\n  padding-left: 10px;\n}\n.altrp-field-container-label {\n  display: flex;\n  flex-direction: row;\n}\n\n.altrp-field-label-container-left {\n  display: flex;\n  align-items: center;\n}\n\n.altrp-field-label-container {\n  display: inline-flex;\n  align-items: center;\n}\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\n  padding: 0 8px;\n  max-height: 14px;\n  overflow: hidden;\n}\n.altrp-field-select2 .altrp-field-select2__value-container {\n  padding: 0px 8px;\n}\n.altrp-field-select2 .css-b8ldur-Input {\n  padding-bottom: 0px;\n  padding-top: 0px;\n  margin: 0 2px;\n}\n.altrp-field-select2 .altrp-field-select2__control {\n  min-height: 14px;\n}\n`)\n\nconst AltrpFieldContainer = styled.div`\n  ${({settings: {content_label_position_type}}) => {\n  switch (content_label_position_type) {\n    case \"left\": {\n      return \"display: flex\";\n    }\n    case \"right\": {\n      return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\n    }\n  }\n  return \"\";\n}}\n`;\n\nclass InputTextCommonWidget extends Component {\n  timeInput = null;\n\n  constructor(props) {\n    super(props);\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    this.onChange = this.onChange.bind(this);\n    this.debounceDispatch = this.debounceDispatch.bind(this);\n\n    this.defaultValue = this.getContent(\"content_default_value\")\n\n    this.state = {\n      settings: {...props.element.getSettings()},\n      showPassword: false,\n    };\n    this.popoverProps = {\n      usePortal: true,\n      // isOpen:true ,\n      portalClassName: `altrp-portal altrp-portal${this.props.element.getId()}`,\n      portalContainer: window.EditorFrame ? window.EditorFrame.contentWindow.document.body : document.body,\n    };\n    this.altrpSelectRef = React.createRef();\n    if (this.getContent(\"content_default_value\")) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n  }\n\n  /**\n   * Чистит значение\n   */\n  clearValue() {\n    let value = \"\";\n    this.onChange(value);\n    this.dispatchFieldValueToStore(value, true);\n  }\n\n  /**\n   * Обработка нажатия клавиши\n   * @param {{}} e\n   */\n  handleEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\n      const index = inputs.indexOf(e.target);\n      if (index === undefined) return;\n      inputs[index + 1] && inputs[index + 1].focus();\n      const {\n        create_allowed,\n        create_label,\n        create_url\n      } = this.props.element.getSettings();\n      if (create_allowed && create_label && create_url) {\n        this.createItem(e);\n      }\n    }\n  };\n\n  /**\n   * Загрузка виджета\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  async _componentDidMount(prevProps, prevState) {\n\n    let value = this.getValue();\n\n    /**\n     * Если модель обновилась при смене URL\n     */\n    if (\n      prevProps &&\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n    if (\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !this.state.contentLoaded\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({...state, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n  }\n\n  /**\n   *\n   * @returns {string}\n   */\n  getValue = () => {\n    let value;\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (isEditor()) {\n      value = this.state.value;\n    } else {\n      value = _.get(appStore.getState(), `formsStore.${formId}.${fieldName}`, '')\n    }\n    return value;\n  }\n\n  /**\n   * Обновление виджета\n   */\n  async _componentDidUpdate(prevProps, prevState) {\n    if (\n      prevProps &&\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\n    ) {\n      let value = this.getContent(\n        \"content_default_value\",\n        this.props.element.getSettings(\"select2_multiple\")\n      );\n      this.setState(\n        state => ({...state, contentLoaded: true}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n\n    /**\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\n     */\n    if (\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\n      this.state.value &&\n      this.state.value.dynamic\n    ) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    this.updateValue(prevProps);\n  }\n\n  /**\n   * Обновить значение если нужно\n   * @param {{}} prevProps\n   */\n  updateValue(prevProps) {\n    if (isEditor()) {\n      return;\n    }\n    let content_calculation = this.props.element.getSettings(\n      \"content_calculation\"\n    );\n    const altrpforms = this.props.formsStore;\n    const fieldName = this.props.element.getFieldId();\n    const formId = this.props.element.getFormId();\n    if (!content_calculation) {\n      /**\n       * Обновить значение, если formsStore изменилось из другого компонента\n       */\n      const path = `${formId}.${fieldName}`;\n      if (\n        this.props.formsStore !== prevProps.formsStore &&\n        _.get(altrpforms, path) !== this.state.value\n      ) {\n        this.setState(state => ({\n          ...state,\n          value: _.get(altrpforms, path)\n        }));\n      }\n      return;\n    }\n\n    const prevContext = {};\n\n    const altrpdata = this.props.currentDataStorage.getData();\n    const altrpmodel = this.props.currentModel.getData();\n    const altrpuser = this.props.currentUser.getData();\n    const altrppagestate = this.props.altrpPageState.getData();\n    const altrpresponses = this.props.altrpresponses.getData();\n    const altrpmeta = this.props.altrpMeta.getData();\n    const context = this.props.element.getCurrentModel().getData();\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\n      context.altrpdata = altrpdata;\n      if (!altrpdata.currentDataStorageLoaded) {\n        prevContext.altrpdata = altrpdata;\n      } else {\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\n      }\n    }\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\n      context.altrpforms = altrpforms;\n      /**\n       * Не производим вычисления, если изменилось текущее поле\n       */\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\n        prevContext.altrpforms = altrpforms;\n      } else {\n        prevContext.altrpforms = prevProps.formsStore;\n      }\n    }\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\n      context.altrpmodel = altrpmodel;\n      prevContext.altrpmodel = prevProps.currentModel.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\n      context.altrppagestate = altrppagestate;\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\n    }\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\n      context.altrpmeta = altrpmeta;\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\n    }\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\n      context.altrpresponses = altrpresponses;\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\n    }\n\n    if (\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\n    ) {\n      return;\n    }\n    if (\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      `${formId}.${fieldName}` === altrpforms.changedField\n    ) {\n      return;\n    }\n    let value = \"\";\n    try {\n      content_calculation = content_calculation\n        .replace(/}}/g, \"')\")\n        .replace(/{{/g, \"_.get(context, '\");\n      value = eval(content_calculation);\n      if (value === this.state.value) {\n        return;\n      }\n      this.setState(\n        state => ({...state, value}),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"Evaluate error in Input: '\" + e.message + \"'\",\n        this.props.element.getId()\n      );\n    }\n  }\n\n\n  /**\n   * Изменение значения в виджете\n   * @param e\n   */\n  onChange(e) {\n    let value = \"\";\n    if (e && e.target) {\n      value = e.target.value;\n    }\n\n    if (e && e.value) {\n      value = e.value;\n    }\n\n\n    /**\n     * Обновляем хранилище только если не текстовое поле\n     */\n\n    const change_actions = this.props.element.getSettings(\"change_actions\");\n    const change_change_end = this.props.element.getSettings(\n      \"change_change_end\"\n    );\n    const change_change_end_delay = this.props.element.getSettings(\n      \"change_change_end_delay\"\n    );\n\n    if (change_actions && !change_change_end && !isEditor()) {\n      this.debounceDispatch(\n        value !== undefined ? value : value\n      );\n    }\n    if (change_actions && change_change_end && !isEditor()) {\n      this.timeInput && clearTimeout(this.timeInput);\n      this.timeInput = setTimeout(() => {\n        this.debounceDispatch(\n          value !== undefined ? value : value\n        );\n      }, change_change_end_delay);\n    }\n    if(isEditor()){\n      this.setState(state=>({...state, value}))\n    } else {\n      this.dispatchFieldValueToStore(value, true)\n    }\n  }\n\n  debounceDispatch = _.debounce(\n    value => this.dispatchFieldValueToStore(value, true),\n    150\n  );\n\n\n  /**\n   * Для действие по фокусу\n   * @param e\n   * @return {Promise<void>}\n   */\n\n  onFocus = async e => {\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\n\n    if (focus_actions && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n          )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"focus\",\n        focus_actions,\n        this.props.element\n      );\n    }\n  };\n  /**\n   * Потеря фокуса для оптимизации\n   * @param  e\n   * @param  editor для получения изменений из CKEditor\n   */\n  onBlur = async (e, editor = null) => {\n    this.dispatchFieldValueToStore(e.target.value, true);\n\n    if (_.get(editor, \"getData\")) {\n      this.dispatchFieldValueToStore(editor.getData(), true);\n    }\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n          )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"blur\",\n        this.props.element.getSettings(\"actions\", []),\n        this.props.element\n      );\n    }\n  };\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n              )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n  /**\n   * Взовращает имя для атрибута name\n   * @return {string}\n   */\n  getName() {\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\n  }\n\n  handleLockClick = () => {\n    this.setState((state) => {\n      return {\n        ...state,\n        showPassword: !state.showPassword,\n      }\n    })\n  }\n\n  renderLeftIcon(){\n    const {element} = this.props;\n    let left_icon = element.getResponsiveSetting('left_icon');\n    let password_show_left_icon = element.getResponsiveSetting('password_show_left_icon');\n    const {content_type} = element.settings\n    const leftIconProps = {}\n    if(content_type === 'password' && this.state.showPassword && password_show_left_icon){\n      left_icon = password_show_left_icon\n      leftIconProps.onClick = this.handleLockClick\n    }\n    if(content_type === 'password' && password_show_left_icon){\n      leftIconProps.onClick = this.handleLockClick\n      leftIconProps.style = {\n        cursor: 'pointer'\n      }\n    }\n    if(!left_icon){\n      return null\n    }\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_left\" {...leftIconProps} tabIndex=\"0\">\n      {renderAsset(left_icon, )}\n    </span>\n  }\n  renderRightIcon(){\n    const {element} = this.props;\n    let right_icon = element.getResponsiveSetting('right_icon');\n    let password_show_right_icon = element.getResponsiveSetting('password_show_right_icon');\n    const {content_type} = element.settings\n    const rightIconProps = {}\n    if(content_type === 'password' && this.state.showPassword && password_show_right_icon){\n      right_icon = password_show_right_icon\n    }\n    if(content_type === 'password' && password_show_right_icon){\n      rightIconProps.onClick = this.handleLockClick\n      rightIconProps.style = {\n        cursor: 'pointer'\n      }\n    }\n    if(!right_icon){\n      return null\n    }\n    return <span className=\"bp3-icon bp3-icon_text-widget bp3-icon_right\" {...rightIconProps} tabIndex=\"0\">\n      {renderAsset(right_icon, )}\n    </span>\n  }\n\n  render() {\n    let label = null;\n    const settings = this.props.element.getSettings();\n    const {\n      content_readonly,\n      label_icon\n    } = settings;\n    let value = this.getValue()\n\n    let classLabel = \"\";\n    let styleLabel = {};\n    const content_label_position_type = this.props.element.getResponsiveSetting(\n      \"content_label_position_type\"\n    );\n    const label_icon_position = this.props.element.getResponsiveSetting('label_icon_position')\n    let label_style_spacing = this.props.element.getResponsiveSetting('label_style_spacing')\n    switch (content_label_position_type) {\n      case \"top\":\n        styleLabel = {\n          marginBottom: label_style_spacing\n            ? label_style_spacing?.size +\n            label_style_spacing?.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"bottom\":\n        styleLabel = {\n          marginTop: label_style_spacing\n            ? label_style_spacing?.size +\n            label_style_spacing?.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"left\":\n        styleLabel = {\n          marginRight: label_style_spacing\n            ? label_style_spacing?.size +\n            label_style_spacing?.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"altrp-field-label-container-left\";\n        break;\n      case \"absolute\":\n        styleLabel = {\n          position: \"absolute\",\n          zIndex: 2\n        };\n        classLabel = \"\";\n        break;\n    }\n\n    if (this.state.settings.content_label || label_icon ) {\n      label = (\n        <div\n          className={\"altrp-field-label-container \" + classLabel}\n          style={styleLabel}\n        >\n          <label\n            htmlFor={this.getName()}\n            style={{\n              display: 'flex',\n              flexDirection: label_icon_position,\n            }}\n            className={`altrp-field-label altrp-field-label_text-widget ${this.state.settings.content_required\n              ? \"altrp-field-label--required\"\n              : \"\"\n            }`}\n          >\n            {this.state.settings.content_label}\n\n            {label_icon && label_icon.type && (\n              <span className=\"altrp-label-icon\">\n              {renderAsset(label_icon)}\n            </span>\n            )}\n          </label>\n        </div>\n      );\n    } else {\n      label = null;\n    }\n    let autocomplete = \"off\";\n    if (this.state.settings.content_autocomplete) {\n      autocomplete = \"on\";\n    } else {\n      autocomplete = \"off\";\n    }\n\n    let input = (\n      <div className=\"altrp-input-wrapper\">\n        <AltrpInput\n          type={this.state.settings.content_type === 'password' ? (this.state.showPassword ? \"text\" : \"password\") : this.state.settings.content_type}\n          name={this.getName()}\n          id={this.getName()}\n          value={value || \"\"}\n          popoverProps={this.popoverProps}\n          element={this.props.element}\n          readOnly={content_readonly}\n          autoComplete={autocomplete}\n          placeholder={this.state.settings.content_placeholder}\n          settings={this.props.element.getSettings()}\n          onKeyDown={this.handleEnter}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          leftIcon={this.renderLeftIcon()}\n          rightElement={this.renderRightIcon()}\n        />\n      </div>\n    );\n\n    return (\n      <AltrpFieldContainer\n        settings={settings}\n        className=\"altrp-field-container \"\n      >\n        {content_label_position_type === \"top\" ? label : \"\"}\n        {content_label_position_type === \"left\" ? label : \"\"}\n        {content_label_position_type === \"right\" ? label : \"\"}\n        {content_label_position_type === \"absolute\" ? label : \"\"}\n        {/* .altrp-field-label-container */}\n        {input}\n        {content_label_position_type === \"bottom\" ? label : \"\"}\n      </AltrpFieldContainer>\n    );\n  }\n}\n\nexport default InputTextCommonWidget;\n","const {\n  convertData,\n  isEditor,\n  parseOptionsFromSettings,\n  parseParamsFromString,\n  parseURLTemplate,\n  replaceContentWithData,\n  renderAssetIcon,\n  getDataFromLocalStorage\n} = window.altrpHelpers;\nimport Resource from \"../../classes/Resource\";\nimport { changeFormFieldValue } from \"../../../../../front-app/src/js/store/forms-data-storage/actions\";\nimport AltrpModel from \"../../classes/AltrpModel\";\nimport AltrpInput from \"../altrp-input/AltrpInput\";\n\n(window.globalDefaults = window.globalDefaults || []).push(`\n.altrp-field-label_text-widget{\n    width: 100%;\n}\n.bp3-icon_text-widget img{\n  width: 16px;\n  height: 16px;\n  object-fit: contain;\n  pointer-events: none;\n}\n.bp3-icon_text-widget svg{\n  width: 16px;\n  height: 16px;\n  pointer-events: none;\n}\n.bp3-icon_right{\n    margin: 7px;\n}\n.altrp-field {\n  border-style: solid;\n  width: 100%;\n}\n.altrp-field-file{\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.altrp-label-icon svg,\n.altrp-label-icon img {\n  width: 20px;\n}\n.altrp-label-icon svg{\n  height: 20px;\n}\n.altrp-field-file__field{\n  display: none;\n}\n.altrp-field-file__placeholder{\n  display: none;\n}\n.altrp-field-file_empty .altrp-field-file__placeholder{\n  display: block;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: rgb(52,59,76);\n  color: #fff;\n}\n.input-clear-btn {\n  background: transparent;\n  padding: 0;\n  position: absolute;\n  bottom: calc(50% - 7px);\n  right: 15px;\n  display: none;\n}\n.input-clear-btn:hover {\n  font-weight: bold;\n}\n.altrp-field:hover + .input-clear-btn, .input-clear-btn:hover {\n  display: block;\n}\n.altrp-input-wrapper, .altrp-field-select2 {\n  position: relative;\n  flex-grow: 1;\n}\n.altrp-field-label--required::after {\n  content: \"*\";\n  color: red;\n  font-size: inherit;\n  padding-left: 10px;\n}\n.altrp-field-label {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__single-value, .altrp-field {\n  font-size: 16px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-field-select2__control, .altrp-field {\n  text-align: left;\n  padding-top: 2px;\n  padding-right: 2px;\n  padding-bottom: 2px;\n  padding-left: 2px;\n  border-width: 1px;\n}\n.altrp-field-select2__control:hover{\n  border-width: 1px;\n}\n.altrp-field-container {\n  margin: 0;\n}\n.altrp-field::placeholder, .altrp-field-select2__placeholder {\n  font-size: 13px;\n  font-family: \"Open Sans\";\n  line-height: 1.5;\n  letter-spacing: 0;\n}\n.altrp-image-select {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n.altrp-image-select img {\n  flex-grow: 1;\n  object-fit: contain;\n}\n.altrp-field {\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n}\n.altrp-field.active {\n  border-color: lightcoral;\n}\n.altrp-field-label {\n  text-align: center;\n  display: block;\n}\n.altrp-pagination__select-size .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-pagination__select-size .altrp-field-select2__control {\n  width: 100px;\n  min-height: 32px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142,148,170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-pagination__select-size .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-field-select2 {\n  position: relative;\n  box-sizing: border-box;\n  pointer-events: none;\n}\n.altrp-field-select2__control {\n  webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  background-color: hsl(0,0%,100%);\n  border-color: hsl(0,0%,80%);\n  border-style: solid;\n  border-width: 1px;\n  cursor: default;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  -webkit-box-pack: justify;\n  -webkit-justify-content: space-between;\n  -ms-flex-pack: justify;\n  justify-content: space-between;\n  min-height: 38px;\n  outline: 0 !important;\n  position: relative;\n  -webkit-transition: all 100ms;\n  transition: all 100ms;\n  box-sizing: border-box;\n}\n.altrp-field-select2__value-container {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex: 1;\n  -ms-flex: 1;\n  flex: 1;\n  -webkit-flex-wrap: wrap;\n  -ms-flex-wrap: wrap;\n  flex-wrap: wrap;\n  padding: 2px 8px;\n  -webkit-overflow-scrolling: touch;\n  position: relative;\n  overflow: hidden;\n  box-sizing: border-box;\n}\n.altrp-field-select2__single-value {\n  color: hsl(0,0%,20%);\n  margin-left: 2px;\n  margin-right: 2px;\n  max-width: calc(100% - 8px);\n  overflow: hidden;\n  position: absolute;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  top: 50%;\n  -webkit-transform: translateY(-50%);\n  -ms-transform: translateY(-50%);\n  transform: translateY(-50%);\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicators {\n  -webkit-align-items: center;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-flex-shrink: 0;\n  -ms-flex-negative: 0;\n  flex-shrink: 0;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator-separator {\n  -webkit-align-self: stretch;\n  -ms-flex-item-align: stretch;\n  align-self: stretch;\n  background-color: hsl(0,0%,80%);\n  margin-bottom: 8px;\n  margin-top: 8px;\n  width: 1px;\n  box-sizing: border-box;\n}\n.altrp-field-select2__indicator {\n  color: hsl(0,0%,80%);\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 8px;\n  -webkit-transition: color 150ms;\n  transition: color 150ms;\n  box-sizing: border-box;\n  justify-content: center;\n  align-items: center;\n}\n.tba-placeholder {\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  font-weight: bold;\n}\n.altrp-field-subgroup {\n  display: flex;\n  flex-wrap: wrap;\n}\n.altrp-field-option {\n  display: flex;\n  padding: 10px;\n}\n.altrp-field-option__label {\n  cursor: pointer;\n}\ntextarea.altrp-field {\n  display: block;\n}\n.altrp-table__filter-select .altrp-field-select2__placeholder {\n  white-space: nowrap;\n}\n.altrp-table__filter-select .altrp-field-select2__single-value {\n  font-size: 14px;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator-separator {\n  display: none;\n}\n.altrp-table__filter-select .altrp-field-select2__indicator {\n  align-items: center;\n}\n.altrp-table__filter-select .altrp-field-select2__control {\n  width: 100%;\n  min-height: 19px;\n  padding: 0;\n  border-radius: 0;\n  outline: none;\n  border-color: rgb(142, 148, 170);\n  -webkit-box-shadow: none;\n  -moz-box-shadow: none;\n  box-shadow: none;\n}\n.altrp-table__filter-select .altrp-field-select2__control input {\n  border: none;\n}\n.altrp-table__filter-select .altrp-field-select2__value-container {\n  padding-top: 0;\n  padding-bottom: 0;\n  line-height: 13px;\n}\n.altrp-field-required {\n  color: red;\n  font-size: 18px;\n  padding-left: 10px;\n}\n.altrp-field-container-label {\n  display: flex;\n  flex-direction: row;\n}\n\n.altrp-field-label-container-left {\n  display: flex;\n  align-items: center;\n}\n\n.altrp-field-label-container {\n  display: inline-flex;\n  align-items: center;\n}\n.altrp-field-select2__indicator.altrp-field-select2__dropdown-indicator {\n  padding: 0 8px;\n  max-height: 14px;\n  overflow: hidden;\n}\n.altrp-field-select2 .altrp-field-select2__value-container {\n  padding: 0px 8px;\n}\n.altrp-field-select2 .css-b8ldur-Input {\n  padding-bottom: 0px;\n  padding-top: 0px;\n  margin: 0 2px;\n}\n.altrp-field-select2 .altrp-field-select2__control {\n  min-height: 14px;\n}\n`)\n\nconst AltrpFieldContainer = styled.div`\n  ${({ settings: { content_label_position_type } }) => {\n    switch (content_label_position_type) {\n      case \"left\": {\n        return \"display: flex\";\n      }\n      case \"right\": {\n        return \"display:flex;flex-direction:row-reverse;justify-content:flex-end;\";\n      }\n    }\n    return \"\";\n  }}\n`;\n\nclass InputTextWidget extends Component {\n  timeInput = null;\n\n  constructor(props) {\n    super(props);\n    props.element.component = this;\n    if (window.elementDecorator) {\n      window.elementDecorator(this);\n    }\n    this.onChange = this.onChange.bind(this);\n    this.debounceDispatch = this.debounceDispatch.bind(this);\n\n    this.defaultValue = this.getContent(\"content_default_value\") || \"\";\n    this.state = {\n      settings: { ...props.element.getSettings() },\n      value: this.defaultValue,\n      options: parseOptionsFromSettings(\n        props.element.getSettings(\"content_options\")\n      ),\n      paramsForUpdate: null\n    };\n    this.altrpSelectRef = React.createRef();\n    if (this.getContent(\"content_default_value\")) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n  }\n\n  /**\n   * Чистит значение\n   */\n  clearValue() {\n    this.onChange(\"\");\n    this.dispatchFieldValueToStore(\"\", true);\n  }\n\n  /**\n   * Обработка нажатия клавиши\n   * @param {{}} e\n   */\n  handleEnter = e => {\n    if (e.keyCode === 13) {\n      e.preventDefault();\n      const inputs = Array.from(document.querySelectorAll(\"input,select\"));\n      const index = inputs.indexOf(e.target);\n      if (index === undefined) return;\n      inputs[index + 1] && inputs[index + 1].focus();\n      const {\n        create_allowed,\n        create_label,\n        create_url\n      } = this.props.element.getSettings();\n      if (create_allowed && create_label && create_url) {\n        this.createItem(e);\n      }\n    }\n  };\n\n  /**\n   * Загрузка виджета\n   * @param {{}} prevProps\n   * @param {{}} prevState\n   */\n  async _componentDidMount(prevProps, prevState) {\n    if (this.props.element.getSettings(\"content_options\")) {\n      let options = parseOptionsFromSettings(\n        this.props.element.getSettings(\"content_options\")\n      );\n\n      this.setState(state => ({ ...state, options }));\n    }\n\n    let value = this.state.value;\n\n    /**\n     * Если динамическое значение загрузилось,\n     * то используем this.getContent для получение этого динамического значения\n     * старые динамические данные\n     * */\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    /**\n     * Если модель обновилась при смене URL\n     */\n    if (\n      prevProps &&\n      !prevProps.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n\n    if (\n      this.props.currentModel.getProperty(\"altrpModelUpdated\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      !this.state.contentLoaded\n    ) {\n      value = this.getContent(\"content_default_value\");\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n      return;\n    }\n\n    if (this.state.value !== value) {\n      this.setState(\n        state => ({ ...state, value }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n  }\n\n  /**\n   * Получить url для запросов\n   */\n  getRoute() {\n    let url = this.props.element.getSettings(\"model_for_options\");\n\n    if (url.indexOf(\"/\") === -1) {\n      return `/ajax/models/${url}_options`;\n    }\n    if (url.indexOf(\"{{\") !== -1) {\n      url = replaceContentWithData(url);\n    }\n    return url;\n  }\n\n  /**\n   * Обновление виджета\n   */\n  async _componentDidUpdate(prevProps, prevState) {\n    const { content_options, model_for_options } = this.state.settings;\n\n    if (\n      prevProps &&\n      !prevProps.currentDataStorage.getProperty(\"currentDataStorageLoaded\") &&\n      this.props.currentDataStorage.getProperty(\"currentDataStorageLoaded\")\n    ) {\n      let value = this.getContent(\n        \"content_default_value\",\n        this.props.element.getSettings(\"select2_multiple\")\n      );\n      this.setState(\n        state => ({ ...state, value, contentLoaded: true }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    }\n\n    /**\n     * Если обновилась модель, то пробрасываем в стор новое значение (старый источник диамических данных)\n     */\n    if (\n      !_.isEqual(this.props.currentModel, prevProps.currentModel) &&\n      this.state.value &&\n      this.state.value.dynamic\n    ) {\n      this.dispatchFieldValueToStore(this.getContent(\"content_default_value\"));\n    }\n\n    /**\n     * Если обновилось хранилище данных формы, currentDataStorage или модель, то получаем новые опции c сервера\n     */\n    if (\n      this.props.formsStore !== prevProps.formsStore ||\n      this.props.currentModel !== prevProps.currentModel ||\n      this.props.currentDataStorage !== prevProps.currentDataStorage\n    ) {\n      this.updateOptions();\n    }\n    if (content_options && !model_for_options) {\n      let options = parseOptionsFromSettings(content_options);\n      if (!_.isEqual(options, this.state.options)) {\n        this.setState(state => ({ ...state, options }));\n      }\n    }\n    this.updateValue(prevProps);\n  }\n\n  /**\n   * Обновить значение если нужно\n   * @param {{}} prevProps\n   */\n  updateValue(prevProps) {\n\n    if (isEditor()) {\n      return;\n    }\n\n    let content_calculation = this.props.element.getSettings(\n      \"content_calculation\"\n    );\n    const altrpforms = this.props.formsStore;\n    const fieldName = this.props.element.getFieldId();\n    const formId = this.props.element.getFormId();\n\n    if (!content_calculation) {\n      /**\n       * Обновить значение, если formsStore изменилось из другого компонента\n       */\n      const path = `${formId}.${fieldName}`;\n      if (\n        this.props.formsStore !== prevProps.formsStore &&\n        _.get(altrpforms, path) !== this.state.value\n      ) {\n        this.setState(state => ({\n          ...state,\n          value: _.get(altrpforms, path)\n        }));\n      }\n      return;\n    }\n\n    const prevContext = {};\n    const altrpdata = this.props.currentDataStorage.getData();\n    const altrpmodel = this.props.currentModel.getData();\n    const altrpuser = this.props.currentUser.getData();\n    const altrppagestate = this.props.altrpPageState.getData();\n    const altrpresponses = this.props.altrpresponses.getData();\n    const altrpmeta = this.props.altrpMeta.getData();\n    const context = this.props.element.getCurrentModel().getData();\n\n    if (content_calculation.indexOf(\"altrpdata\") !== -1) {\n      context.altrpdata = altrpdata;\n      if (!altrpdata.currentDataStorageLoaded) {\n        prevContext.altrpdata = altrpdata;\n      } else {\n        prevContext.altrpdata = prevProps.currentDataStorage.getData();\n      }\n    }\n\n    if (content_calculation.indexOf(\"altrpforms\") !== -1) {\n      context.altrpforms = altrpforms;\n      /**\n       * Не производим вычисления, если изменилось текущее поле\n       */\n      if (`${formId}.${fieldName}` === altrpforms.changedField) {\n        prevContext.altrpforms = altrpforms;\n      } else {\n        prevContext.altrpforms = prevProps.formsStore;\n      }\n    }\n\n    if (content_calculation.indexOf(\"altrpmodel\") !== -1) {\n      context.altrpmodel = altrpmodel;\n      prevContext.altrpmodel = prevProps.currentModel.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpuser\") !== -1) {\n      context.altrpuser = altrpuser;\n      prevContext.altrpuser = prevProps.currentUser.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrppagestate\") !== -1) {\n      context.altrppagestate = altrppagestate;\n      prevContext.altrppagestate = prevProps.altrpPageState.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpmeta\") !== -1) {\n      context.altrpmeta = altrpmeta;\n      prevContext.altrpmeta = prevProps.altrpMeta.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpresponses\") !== -1) {\n      context.altrpresponses = altrpresponses;\n      prevContext.altrpresponses = prevProps.altrpresponses.getData();\n    }\n\n    if (content_calculation.indexOf(\"altrpstorage\") !== -1) {\n      context.altrpstorage = getDataFromLocalStorage(\"altrpstorage\", {});\n    }\n\n    if (\n      _.isEqual(prevProps.currentDataStorage, this.props.currentDataStorage) &&\n      _.isEqual(prevProps.currentUser, this.props.currentUser) &&\n      _.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      _.isEqual(prevProps.altrpPageState, this.props.altrpPageState) &&\n      _.isEqual(prevProps.altrpMeta, this.props.altrpMeta) &&\n      _.isEqual(prevProps.altrpresponses, this.props.altrpresponses) &&\n      _.isEqual(prevProps.currentModel, this.props.currentModel)\n    ) {\n      return;\n    }\n\n    if (\n      !_.isEqual(prevProps.formsStore, this.props.formsStore) &&\n      `${formId}.${fieldName}` === altrpforms.changedField\n    ) {\n      return;\n    }\n\n    let value = \"\";\n\n    try {\n      content_calculation = content_calculation\n        .replace(/}}/g, \"')\")\n        .replace(/{{/g, \"_.get(context, '\");\n      value = eval(content_calculation);\n      if (value === this.state.value) {\n        return;\n      }\n      this.setState(\n        state => ({ ...state, value }),\n        () => {\n          this.dispatchFieldValueToStore(value);\n        }\n      );\n    } catch (e) {\n      console.error(\n        \"Evaluate error in Input: '\" + e.message + \"'\",\n        this.props.element.getId()\n      );\n    }\n  }\n\n  /**\n   * Обновляет опции для селекта при обновлении данных, полей формы\n   */\n  async updateOptions() {\n    {\n      let formId = this.props.element.getFormId();\n      let paramsForUpdate = this.props.element.getSettings(\"params_for_update\");\n      let formData = _.get(this.props.formsStore, [formId], {});\n      paramsForUpdate = parseParamsFromString(\n        paramsForUpdate,\n        new AltrpModel(formData)\n      );\n      /**\n       * Сохраняем параметры запроса, и если надо обновляем опции\n       */\n      let options = [...this.state.options];\n\n      if (!_.isEqual(paramsForUpdate, this.state.paramsForUpdate)) {\n        if (!_.isEmpty(paramsForUpdate)) {\n          if (this.props.element.getSettings(\"params_as_filters\", false)) {\n            paramsForUpdate = JSON.stringify(paramsForUpdate);\n            options = await new Resource({\n              route: this.getRoute()\n            }).getQueried({ filters: paramsForUpdate });\n          } else {\n            options = await new Resource({ route: this.getRoute() }).getQueried(\n              paramsForUpdate\n            );\n          }\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        } else if (this.state.paramsForUpdate) {\n          options = await new Resource({ route: this.getRoute() }).getAll();\n          options = !_.isArray(options) ? options.data : options;\n          options = _.isArray(options) ? options : [];\n        }\n\n        this.setState(state => ({\n          ...state,\n          paramsForUpdate,\n          options\n        }));\n      }\n    }\n  }\n\n  /**\n   * Изменение значения в виджете\n   * @param e\n   * @param  editor для получения изменений из CKEditor\n   */\n  onChange(e, editor = null) {\n    let value = \"\";\n    let valueToDispatch;\n\n    if (e && e.target) {\n      value = e.target.value;\n    }\n\n    if (e && e.value) {\n      value = e.value;\n    }\n\n    if (_.get(editor, \"getData\")) {\n      value = `<div class=\"ck ck-content\" style=\"width:100%\">${editor.getData()}</div>`;\n    }\n\n    if (_.isArray(e)) {\n      value = _.cloneDeep(e);\n    }\n\n    if (\n      this.props.element.getSettings(\"content_options_nullable\") &&\n      e &&\n      e.value === \"<null>\"\n    ) {\n      value = null;\n    }\n\n    this.setState(\n      state => ({\n        ...state,\n        value\n      }),\n      () => {\n        /**\n         * Обновляем хранилище только если не текстовое поле\n         */\n\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n        const change_change_end = this.props.element.getSettings(\n          \"change_change_end\"\n        );\n        const change_change_end_delay = this.props.element.getSettings(\n          \"change_change_end_delay\"\n        );\n\n        if (change_actions && !change_change_end && !isEditor()) {\n          this.debounceDispatch(\n            valueToDispatch !== undefined ? valueToDispatch : value\n          );\n        }\n        if (change_actions && change_change_end && !isEditor()) {\n          this.timeInput && clearTimeout(this.timeInput);\n          this.timeInput = setTimeout(() => {\n            this.debounceDispatch(\n              valueToDispatch !== undefined ? valueToDispatch : value\n            );\n          }, change_change_end_delay);\n        }\n      }\n    );\n  }\n\n  debounceDispatch = _.debounce(\n    value => this.dispatchFieldValueToStore(value, true),\n    150\n  );\n\n  /**\n   * получить опции\n   */\n  getOptions() {\n    let options = [...this.state.options];\n    const optionsDynamicSetting = this.props.element.getDynamicSetting(\n      \"content_options\"\n    );\n\n    if (optionsDynamicSetting) {\n      options = convertData(optionsDynamicSetting, options);\n    }\n\n    if (!this.props.element.getSettings(\"sort_default\")) {\n      options = _.sortBy(options, o => o && (o.label ? o.label.toString() : o));\n    }\n\n    return options;\n  }\n\n  /**\n   * Для действие по фокусу\n   * @param e\n   * @return {Promise<void>}\n   */\n\n  onFocus = async e => {\n    const focus_actions = this.props.element.getSettings(\"focus_actions\");\n\n    if (focus_actions && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n        )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"focus\",\n        focus_actions,\n        this.props.element\n      );\n    }\n  };\n\n  /**\n   * Потеря фокуса для оптимизации\n   * @param  e\n   * @param  editor для получения изменений из CKEditor\n   */\n\n  onBlur = async (e, editor = null) => {\n    this.dispatchFieldValueToStore(e.target.value, true);\n\n    if (_.get(editor, \"getData\")) {\n      this.dispatchFieldValueToStore(editor.getData(), true);\n    }\n\n    if (this.props.element.getSettings(\"actions\", []) && !isEditor()) {\n      const actionsManager = (\n        await import(\n          /* webpackChunkName: 'ActionsManager' */\n          \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n        )\n      ).default;\n      await actionsManager.callAllWidgetActions(\n        this.props.element.getIdForAction(),\n        \"blur\",\n        this.props.element.getSettings(\"actions\", []),\n        this.props.element\n      );\n    }\n  };\n\n  /**\n   * Передадим значение в хранилище формы\n   * @param {*} value\n   * @param {boolean} userInput true - имзенилось пользователем\n   */\n  dispatchFieldValueToStore = async (value, userInput = false) => {\n    let formId = this.props.element.getFormId();\n    let fieldName = this.props.element.getFieldId();\n\n    if (fieldName.indexOf(\"{{\") !== -1) {\n      fieldName = replaceContentWithData(fieldName);\n    }\n\n    if (_.isObject(this.props.appStore) && fieldName && formId) {\n      this.props.appStore.dispatch(\n        changeFormFieldValue(fieldName, value, formId, userInput)\n      );\n\n      if (userInput) {\n        const change_actions = this.props.element.getSettings(\"change_actions\");\n\n        if (change_actions && !isEditor()) {\n          const actionsManager = (\n            await import(\n              /* webpackChunkName: 'ActionsManager' */\n              \"../../../../../front-app/src/js/classes/modules/ActionsManager.js\"\n            )\n          ).default;\n          await actionsManager.callAllWidgetActions(\n            this.props.element.getIdForAction(),\n            \"change\",\n            change_actions,\n            this.props.element\n          );\n        }\n      }\n    }\n  };\n\n  /**\n   * Обработка добавления опции по ajax\n   * @param {SyntheticKeyboardEvent} e\n   */\n  createItem = async e => {\n    const keyCode = e.keyCode;\n    const { value: inputValue } = e.target;\n\n    if (keyCode !== 13 || !inputValue) {\n      return;\n    }\n\n    const {\n      create_url,\n      create_label,\n      create_data,\n      select2_multiple\n    } = this.props.element.getSettings();\n\n    if (!create_label && !create_url) {\n      return;\n    }\n\n    const currentModel = this.props.element.getCurrentModel();\n    let data = parseParamsFromString(create_data, currentModel, true);\n    data[create_label] = inputValue;\n    let url = parseURLTemplate(create_url, currentModel.getData());\n    this.setState(state => ({ ...state, isDisabled: true }));\n\n    try {\n      const resource = new Resource({\n        route: url\n      });\n      let res = await resource.post(data);\n\n      if (res.success && _.get(res, \"data.id\")) {\n        let newOption = {\n          label: inputValue,\n          value: _.get(res, \"data.id\")\n        };\n\n        this.setState(\n          state => ({ ...state, isDisabled: false }),\n          () => {\n            let options = [...this.state.options];\n            options.unshift(newOption);\n            let value = this.state.value;\n            if (select2_multiple) {\n              value = value ? [...value] : [];\n              value.push(_.get(res, \"data.id\"));\n            } else {\n              value = _.get(res, \"data.id\");\n            }\n\n            this.setState(\n              state => ({ ...state, options, value }),\n              () => {\n                const selectStateManager = _.get(\n                  this,\n                  \"altrpSelectRef.current.selectRef.current\"\n                );\n\n                if (selectStateManager) {\n                  selectStateManager.setState({\n                    menuIsOpen: false,\n                    inputValue: \"\"\n                  });\n                }\n              }\n            );\n          }\n        );\n      }\n      this.setState(state => ({ ...state, isDisabled: false }));\n    } catch (error) {\n      console.error(error);\n      this.setState(state => ({ ...state, isDisabled: false }));\n    }\n  };\n\n  /**\n   * Взовращает имя для атрибута name\n   * @return {string}\n   */\n  getName() {\n    return `${this.props.element.getFormId()}[${this.props.element.getFieldId()}]`;\n  }\n\n  render() {\n    let label = null;\n    const settings = this.props.element.getSettings();\n    const {\n      content_readonly,\n      select2_multiple: isMultiple,\n      label_icon\n    } = settings;\n\n    let value = this.state.value;\n\n    if (\n      _.get(value, \"dynamic\") &&\n      this.props.currentModel.getProperty(\"altrpModelUpdated\")\n    ) {\n      value = this.getContent(\"content_default_value\");\n    }\n\n    /**\n     * Пока динамический контент загружается (Еесли это динамический контент),\n     * нужно вывести пустую строку\n     */\n\n    if (value && value.dynamic) {\n      value = \"\";\n    }\n\n    let classLabel = \"\";\n    let styleLabel = {};\n    const content_label_position_type = this.props.element.getResponsiveSetting(\n      \"content_label_position_type\"\n    );\n\n    switch (content_label_position_type) {\n      case \"top\":\n        styleLabel = {\n          marginBottom: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"bottom\":\n        styleLabel = {\n          marginTop: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"\";\n        break;\n      case \"left\":\n        styleLabel = {\n          marginRight: this.state.settings.label_style_spacing\n            ? this.state.settings.label_style_spacing.size +\n            this.state.settings.label_style_spacing.unit\n            : 2 + \"px\"\n        };\n        classLabel = \"altrp-field-label-container-left\";\n        break;\n      case \"absolute\":\n        styleLabel = {\n          position: \"absolute\",\n          zIndex: 2\n        };\n        classLabel = \"\";\n        break;\n    }\n\n    if (this.state.settings.content_label) {\n      label = (\n        <div\n          className={\"altrp-field-label-container \" + classLabel}\n          style={styleLabel}\n        >\n          <label\n            className={`altrp-field-label ${this.state.settings.content_required\n              ? \"altrp-field-label--required\"\n              : \"\"\n              }`}\n          >\n            {this.state.settings.content_label}\n          </label>\n          {label_icon && label_icon.assetType && (\n            <span className=\"altrp-label-icon\">\n              {renderAssetIcon(label_icon)}\n            </span>\n          )}\n        </div>\n      );\n    } else {\n      label = null;\n    }\n\n    let autocomplete = \"off\";\n    if (this.state.settings.content_autocomplete) {\n      autocomplete = \"on\";\n    } else {\n      autocomplete = \"off\";\n    }\n\n    const isClearable = this.state.settings.content_clearable;\n\n    const input = (\n      <div className=\"altrp-input-wrapper\">\n        <AltrpInput\n          type=\"text\"\n          name={this.getName()}\n          value={value || \"\"}\n          element={this.props.element}\n          readOnly={content_readonly}\n          autoComplete={autocomplete}\n          placeholder={this.state.settings.content_placeholder}\n          className={\n            \"altrp-field \" + this.state.settings.position_css_classes\n          }\n          settings={this.props.element.getSettings()}\n          onKeyDown={this.handleEnter}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          id={this.state.settings.position_css_id}\n        />\n        {isClearable && (\n          <button\n            className=\"input-clear-btn\"\n            onClick={() => this.setState({ value: this.defaultValue })}\n          >\n            ✖\n          </button>\n        )}\n      </div>\n    );\n\n    return (\n      <AltrpFieldContainer\n        settings={settings}\n        className=\"altrp-field-container \"\n      >\n        {content_label_position_type === \"top\" ? label : \"\"}\n        {content_label_position_type === \"left\" ? label : \"\"}\n        {content_label_position_type === \"right\" ? label : \"\"}\n        {content_label_position_type === \"absolute\" ? label : \"\"}\n        {/* .altrp-field-label-container */}\n        {input}\n        {content_label_position_type === \"bottom\" ? label : \"\"}\n      </AltrpFieldContainer>\n    );\n  }\n}\n\nexport default InputTextWidget;\n","/**\n * Set a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to be set.\n * @param value The value to set.\n */\nfunction set(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst setPropImmutableRec = (obj, prop, value, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (prop.length > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\t\t\tclone[head] = setPropImmutableRec(obj[head] !== undefined ? obj[head] : {}, prop, value, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\treturn typeof value === 'function' ? value(obj) : value;\n\t};\n\n\treturn setPropImmutableRec(obj, prop, value, 0);\n}\n\n/**\n * Get a value by a dot path.\n * @param obj The object to evaluate.\n * @param prop The path to value that should be returned.\n * @param [value] The default value that should be returned when the target doesn't exist.\n */\nfunction get(obj, prop, value) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tfor (var i = 0; i < prop.length; i++) {\n\t\tif (obj === null || typeof obj !== 'object') {\n\t\t\treturn value;\n\t\t}\n\t\tlet head = prop[i];\n\t\tif (Array.isArray(obj) && head === '$end') {\n\t\t\thead = obj.length - 1;\n\t\t}\n\t\tobj = obj[head];\n\t}\n\n\tif (typeof obj === 'undefined') {\n\t\treturn value;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Delete a property by a dot path.\n * If target container is an object, the property is deleted.\n * If target container is an array, the index is deleted.\n * If target container is undefined, nothing is deleted.\n * @param obj The object to evaluate.\n * @param prop The path to the property or index that should be deleted.\n */\nfunction _delete(obj, prop) {\n\tprop = typeof prop === 'number' ? propToArray(prop.toString()) : typeof prop === 'string' ? propToArray(prop) : prop;\n\n\tconst deletePropImmutableRec = (obj, prop, i) => {\n\t\tlet clone, head = prop[i];\n\n\t\tif (obj === null || typeof obj !== 'object' ||\n\t\t\t!Array.isArray(obj) && obj[head] === undefined) {\n\n\t\t\treturn obj;\n\t\t}\n\n\t\tif (prop.length - 1 > i) {\n\t\t\tif (Array.isArray(obj)) {\n\t\t\t\thead = getArrayIndex(head, obj);\n\t\t\t\tclone = obj.slice();\n\t\t\t} else {\n\t\t\t\tclone = Object.assign({}, obj);\n\t\t\t}\n\n\t\t\tclone[head] = deletePropImmutableRec(obj[head], prop, i + 1);\n\t\t\treturn clone;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\thead = getArrayIndex(head, obj);\n\t\t\tclone = [].concat(obj.slice(0, head), obj.slice(head + 1));\n\t\t} else {\n\t\t\tclone = Object.assign({}, obj);\n\t\t\tdelete clone[head];\n\t\t}\n\n\t\treturn clone;\n\t};\n\n\treturn deletePropImmutableRec(obj, prop, 0);\n}\n\n/**\n * Toggles a value.  The target value is evaluated using Boolean(currentValue).  The result will always be a JSON boolean.\n * Be careful with strings as target value, as \"true\" and \"false\" will toggle to false, but \"0\" will toggle to true.\n * Here is what Javascript considers false:  0, -0, null, false, NaN, undefined, and the empty string (\"\")\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n */\nfunction toggle(obj, prop) {\n\tconst curVal = get(obj, prop);\n\treturn set(obj, prop, !Boolean(curVal));\n}\n\n/**\n * Merges a value.  The target value must be an object, array, null, or undefined.\n * If target is an object, Object.assign({}, target, param) is used.\n * If target an array, target.concat(param) is used.\n * If target is null or undefined, the value is simply set.\n * @param obj The object to evaluate.\n * @param prop The path to the value.\n * @param val The value to merge into the target value.\n */\nfunction merge(obj, prop, val) {\n\tconst curVal = get(obj, prop);\n\tif (typeof curVal === 'object') {\n\t\tif (Array.isArray(curVal)) {\n\t\t\treturn set(obj, prop, curVal.concat(val));\n\t\t} else if (curVal === null) {\n\t\t\treturn set(obj, prop, val);\n\t\t}\n\t\telse {\n\t\t\tlet merged = Object.assign({}, curVal, val);\n\t\t\treturn set(obj, prop, merged);\n\t\t}\n\t} else if (typeof curVal === 'undefined') {\n\t\treturn set(obj, prop, val);\n\t}\n\telse {\n\t\treturn obj;\n\t}\n}\n\nfunction getArrayIndex(head, obj) {\n\tif (head === '$end') {\n\t\thead = Math.max(obj.length - 1, 0);\n\t}\n\tif (!/^\\+?\\d+$/.test(head)) {\n\t\tthrow new Error(`Array index '${head}' has to be an integer`);\n\t}\n\treturn parseInt(head);\n}\n\nfunction propToArray(prop) {\n\treturn prop.split('.').reduce((ret, el, index, list) => {\n\t\tconst last = index > 0 && list[index - 1];\n\t\tif (last && /(?:^|[^\\\\])\\\\$/.test(last)) {\n\t\t\tconst prev = ret.pop();\n\t\t\tret.push(prev.slice(0, -1) + '.' + el);\n\t\t} else {\n\t\t\tret.push(el);\n\t\t}\n\t\treturn ret;\n\t}, []);\n}\n\nmodule.exports = {\n\tset,\n\tget,\n\tdelete: _delete,\n\ttoggle,\n\tmerge\n};\n"],"sourceRoot":""}