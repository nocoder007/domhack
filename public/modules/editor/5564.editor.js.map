{"version":3,"sources":["webpack:///./resources/modules/editor/src/js/classes/modules/SettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateSettingsChangeModule.js","webpack:///./resources/modules/editor/src/js/classes/modules/TemplateDataStorage.js","webpack:///./resources/modules/editor/src/js/classes/Modules.js","webpack:///./resources/modules/editor/src/js/components/WidgetIcon.js","webpack:///./resources/modules/editor/src/js/components/WidgetsPanel.js","webpack:///./resources/modules/editor/src/js/components/SettingSection.js","webpack:///./resources/modules/editor/src/js/components/DynamicContent/DynamicContent.js","webpack:///./resources/modules/editor/src/js/components/PanelTabContent.js","webpack:///./resources/modules/editor/src/js/components/state-section/GlobalStylesPresets.js","webpack:///./resources/modules/editor/src/js/components/StateSection.js","webpack:///./resources/modules/editor/src/js/components/SettingsPanel.js","webpack:///./resources/modules/editor/src/js/components/EditorWindow.js","webpack:///./resources/modules/editor/src/js/components/HistoryPanel.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/utils.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/disposables.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/decorateHandler.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/createSourceFactory.js","webpack:///./resources/modules/editor/src/js/components/NavigationItem.js","webpack:///./node_modules/react-dnd/dist/esm/decorators/DragSource.js","webpack:///./resources/modules/editor/src/js/components/NavigationPanel.js","webpack:///./resources/modules/editor/src/js/components/CommonPanel.js","webpack:///./resources/modules/editor/src/js/components/GlobalColors.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffectItemAdd.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffectItem.js","webpack:///./resources/modules/editor/src/js/components/GlobalEffects.js","webpack:///./resources/modules/editor/src/js/components/GlobalFontItemAdd.js","webpack:///./resources/modules/editor/src/js/components/GlobalFontItem.js","webpack:///./resources/modules/editor/src/js/components/GlobalFonts.js","webpack:///./resources/modules/editor/src/js/components/UpdateButton.js","webpack:///./resources/modules/editor/src/js/classes/modules/AssetsBrowser.js","webpack:///./resources/modules/editor/src/js/helpers/to-data-url.js","webpack:///./resources/modules/editor/src/js/components/ResponsiveDdFooter.js","webpack:///./resources/modules/editor/src/js/components/DialogTab.js","webpack:///./resources/modules/editor/src/js/components/DialogConditionsTab.js","webpack:///./resources/modules/editor/src/js/components/DialogTriggersTab.js","webpack:///./resources/modules/editor/src/js/components/DialogWindow.js","webpack:///./resources/modules/editor/src/Editor.js","webpack:///./node_modules/invert-color/lib/invert.min.js"],"names":["modules","elementsIds","element","RootElement","this","rootElement","getIds","setCurrentRootElement","toObject","data","getTemplateData","title","name","type","currentElement","store","setCurrentElement","BaseElement","elementId","stack","children","length","pop","id","push","elementName","newSection","Section","getId","newColumn","Column","newWidget","window","elementsManager","getElementClass","appendColumn","appendNewSection","changeTemplateStatus","CONSTANTS","getEditor","showSettingsPanel","appendWidget","BaseModule","editor","elementsFactory","ElementsFactory","saveImportModule","SaveImportModule","settingsChangeModule","SettingsChangeModule","templateSettingsChangeModule","TemplateSettingsChangeModule","templateDataStorage","TemplateDataStorage","load","WidgetIcon","props","state","onDragStart","bind","e","startDrag","dataTransfer","effectAllowed","setData","getName","className","draggable","React","getIconComponent","height","getTitle","Component","widgets","getWidgetsList","autoHide","autoHideTimeout","autoHideDuration","map","widget","key","ChevronIcon","SettingSection","open","hidden","toggle","sectionId","console","log","currentElementName","getCurrentElement","currentTab","getCurrentTab","settingSection","undefined","dispatch","setActiveSection","checkSectionDisplay","sectionID","conditionsCallback","setState","conditions","_","toPairs","forEach","condition","controlId","comparedValue","negative","indexOf","replace","_value","getSettings","isArray","value","isString","isBoolean","activeSectionID","controllers","controls","hideOnEmail","getTemplateType","filter","controller","onClick","label","ControllerComponent","controllersManager","getController","connect","settingSectionMenu","controllerValue","DATA_TYPES_OPTIONS","MORPHS_TYPES_OPTIONS","array","DynamicContent","wrapperClickHandler","stopPropagation","typeChange","data_type","unset","setSettings","convertChange","convert_type","changeArgument","index","argument","resource","Resource","route","updateDynamicValue","setDynamicSetting","settingName","getDynamicSetting","prevProps","prevState","top","offsetTop","offsetHeight","left","classes","show","argument1","selectDataTypeProps","onChange","find","item","options","classNamePrefix","placeholder","noOptionsMessage","isClearable","convertsOptions","selectConvertTypeProps","join","style","getPositionProps","AltrpSelect","target","dynamicContentState","get","sections","section","idx","ItemPredicate","query","findIndex","split","char","similar","queryChar","ItemRenderer","handleClick","settings","AltrpMeta","meta","getMetaValue","save","needUpdate","findSimilar","altrpEditor","getRootElement","global_styles_presets","elem","appStore","deleteGlobalStylesPresets","modifiers","minimal","fill","text","alignText","Alignment","intent","icon","ItemCreateRenderer","active","controlsNames","getControls","tab","control","metaValue","keys","setMetaValue","updateGlobalStylesPresets","GlobalStylesPresets","presets","globalStylesPresets","styles","items","currentPreset","currentElementId","current","updateCurrent","updateQuery","removeCurrent","isEqual","s","currentElementSettings","JSON","stringify","isNewPreset","preset","presetSettings","controllerName","setSettingValue","then","r","widgetName","_controls","deleteSetting","createNewItemFromQuery","onQueryChange","createNewItemRenderer","itemPredicate","createNewItemPosition","noResults","disabled","itemRenderer","onItemSelect","popoverProps","targetClassName","payload","firstElement","getChildren","child","StateSection","buttons","setCurrentState","button","currentState","ContentIcon","StyleIcon","AdvancedIcon","SettingsPanel","activeTab","setCurrentTab","pair","Controller","contentTabClasses","TAB_CONTENT","styleTabClasses","TAB_STYLE","advancedTabClasses","TAB_ADVANCED","setActiveTab","EditorWindow","width","currentScreen","historyStoreActive","src","historyStore","UserSvg","StartFilled","HistoryPanel","ActionsTabContent","RevisionTabContent","actionsTabClasses","revisionTabClasses","renderTabContent","controllerHistory","useSelector","history","handlerHistory","i","undo","redo","iconsManager","renderIcon","restoreItemClasses","arrayRevisions","setArrayRevisions","currentRevision","setCurrentRevision","oldRootElement","setOldRootElement","cloneDeep","getTemplateDataStorage","templateId","getState","templateData","getAll","reverse","fetchRevisions","parent","setActiveHistoryStore","handleSetCurrentRevision","parent_template","response","revisionRootElement","parse","parsedData","getFactory","parseData","replaceAll","showWidgetsPanel","addHistoryStoreItem","old","new","dateString","secondsAgo","Date","now","updated_at","Math","floor","date","toLocaleString","month","getDate","getHours","getMinutes","author","_typeof","obj","Symbol","iterator","constructor","prototype","isFunction","input","noop","isPlainObject","isObjectLike","Object","getPrototypeOf","proto","isValidType","allowArray","Array","every","t","_classCallCheck","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_createClass","protoProps","staticProps","Disposable","action","isDisposed","d","Boolean","dispose","result","isDisposable","empty","CompositeDisposable","_len","arguments","disposables","_key","shouldDispose","splice","len","currentDisposables","_i","_i2","SerialDisposable","_arrayLikeToArray","arr","arr2","_setPrototypeOf","o","p","setPrototypeOf","__proto__","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_getPrototypeOf","decorateHandler","_ref","DecoratedComponent","createHandler","createMonitor","createConnector","registerHandler","containerDisplayName","getType","collect","_options$arePropsEqua","arePropsEqual","Decorated","displayName","DragDropContainer","_Component","subClass","superClass","create","_inherits","Derived","hasNativeReflectConstruct","_super","Reflect","construct","sham","Proxy","valueOf","Super","NewTarget","apply","_this","decoratedRef","createRef","handleChange","nextState","getCurrentState","disposable","receiveProps","handlerId","nextProps","currentType","handler","receiveType","handlerMonitor","manager","handlerConnector","_registerHandler2","_arrayWithHoles","_arr","_n","_d","_e","_s","next","done","err","_iterableToArrayLimit","minLen","n","toString","slice","from","test","_unsupportedIterableToArray","_nonIterableRest","unregister","receiveHandlerId","unsubscribe","getMonitor","subscribeToStateChange","handlerIds","setDisposable","hooks","_this2","DndContext","_ref2","C","dragDropManager","receiveDragDropManager","requestAnimationFrame","_this2$handlerConnect","reconnect","assign","ref","render","_item$$$typeof","$$typeof","isRefForwardingComponent","getBackend","concat","ALLOWED_SPEC_METHODS","REQUIRED_SPEC_METHODS","SourceImpl","spec","monitor","beginDrag","canDrag","globalMonitor","sourceId","isDragging","getSourceId","currentRef","endDrag","createSourceFactory","NavigationItem","connectDragSource","opacity","cursor","createSource","backend","SourceConnector","DragSourceMonitorImpl","DragSource","dragSource","NavigationPanel","template","parseTemplate","dragOver","isDrag","handleExpand","handleCollapse","showItem","deleteItem","storeListener","node","nodePath","currentTree","Tree","isExpanded","editorSetCurrentElementByID","newTemplate","currentTemplate","elementID","confirm","preventDefault","deleteCurrentElementByID","newTree","removeElementFromArray","f","childNodes","expandable","isExpandable","depth","hasCaret","overflow","contents","onNodeExpand","onNodeCollapse","onNodeDoubleClick","StyledWrapper","styled","Heading","MenuGroup","MenuItems","Item","showGlobalColorsPanel","showGlobalFontsPanel","showGlobalEffectsPanel","Panel","GlobalColors","colorChange","rgba","rgb","g","b","a","hex","colors","currentColor","color","colorPickedHex","colorRGB","setColors","guid","debounceChangeColor","debounce","globalStyleResource","put","res","editColor","updateEffectColors","recursiveWalkTree","nameChange","debounceChangeName","toggleColorPanel","addItem","colorPanelOpen","effects","effect","globalColor","newEffectColor","editEffect","templateItem","hasGlobal","updateAllGlobals","recursiveUpdate","createGlobalColor","post","delete","marginBottom","backgroundColor","invert","black","white","threshold","presetColors","padding","boxShadow","globalStyles","setGlobalColors","editGlobalColor","editGlobalEffect","typeOptions","defaultValues","blur","horizontal","spread","vertical","isNew","edit","onSlide","onSelect","onSaveEffect","event","string","setting","send","success","addEffect","onSaveEffectClose","onSubmit","required","defaultValue","position","marginTop","GlobalPresetColors","changeValue","min","max","stepSize","labelStepSize","showTrackFill","inline","activeItem","rightIcon","onDeleteEffect","updateAllTree","confirmation","deleteEffect","isOpen","GlobalEffects","setEffect","addGlobalEffect","deleteGlobalEffect","familyOptions","altrpFontsSet","font","units","weightOptions","transformOptions","styleOptions","decorationOptions","decoration","family","lineHeight","size","spacing","sizeUnit","weight","transform","changeUnit","changeSize","changeWeight","changeTransform","changeStyle","changeDecoration","changeLineHeight","changeSpacing","onSaveFont","addFont","onSaveFontClose","unit","onValueChange","defaultChecked","onDeleteFont","editFont","deleteFont","GlobalFonts","fonts","addGlobalFont","editGlobalFont","deleteGlobalFont","Chevron","TEMPLATE_TYPES_WITHOUT_CONDITIONS","UpdateButton","isShowed","saveTemplate","toggleModalWindow","buttonClasses","templateStatus","showTemplateConditions","template_type","showModal","status","Times","AssetsBrowser","insertRaw","asset","url","callback","xhr","assets","selectedAsset","getAsText","rawSVG","onChoose","assetsToggle","dataUrl","XMLHttpRequest","onload","reader","FileReader","onloadend","readAsDataURL","responseType","tabClick","toggleBrowser","selectAsset","chooseAsset","tabs","svgAssets","getAssets","mediaAssets","videoAssets","mediaResource","svgResource","videoResource","nextContext","resSvg","resMedia","document","addEventListener","currentTarget","dataset","assetname","rawEnable","tabClasses","AssetContent","assetProps","iconComponent","filename","assetType","video","xmlns","assetsManagerSettings","ResponsiveDdFooter","screens","screen","setCurrentScreen","toggleOpen","desc","DialogConditionsTab","handleObjectTypeChange","conditionId","v","object_type","object_ids","handleIdsSelect","ids","handleChangeConditionType","condition_type","currentLogic","searchValue","pageOptions","reportsOptions","getTemplateId","close","randomNumber","random","forceUpdate","filteredData","include","exclude","logic_options","main_options","isMulti","closeMenuOnSelect","removeCondition","addCondition","updateConditions","DialogTriggersTab","onLoad","onScroll","scrollElement","afterInactivity","on_exit","inactivity","on_click","on_page_load","on_scroll","to_element","triggers","direction","checked","htmlFor","handleChangePage","step","handleCheck","updateTriggers","Logo","DialogWindow","handleClose","handleOpen","renderSwitch","Link","Navigation","History","Preview","Settings","Dots","Hamburger","activePanel","showDialogWindow","effectRef","openPageSettings","openNavigratonPanel","showNavigationPanel","showHistoryPanel","showCommonPanel","onDragEnd","Modules","loaded","contextMenu","closeDynamicContent","draggableElement","elementDrag","stopDrag","initModules","currentUser","changeCurrentUser","presetGlobalStyles","setEditorMeta","setGlobalStylesPresets","setGlobalEffects","setGlobalFonts","settingsActive","navigationActive","templateClasses","DndProvider","HTML5Backend","onKeyDown","href","admin_logo","renderAsset","viewBox","module","exports","sqrt","Error","parseInt","u","pow","asRGB","asRgbArray","defaultThreshold","asRgbObject"],"mappings":"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","file":"5564.editor.js","sourcesContent":["class SettingsChangeModule {\r\n\r\n}\r\nexport default SettingsChangeModule;","class TemplateSettingsChangeModule {\r\n\r\n}\r\nexport default TemplateSettingsChangeModule;","import RootElement from \"../elements/RootElement\";\nimport { getEditor, getTemplateId } from \"../../helpers\";\nimport CONSTANTS from \"../../consts\";\nimport BaseModule from \"./BaseModule\";\nimport store from \"../../store/store\";\nimport {\n  setCurrentElement,\n  SET_CURRENT_ELEMENT\n} from \"../../store/current-element/actions\";\nimport BaseElement from \"../elements/BaseElement\";\nimport Section from \"../elements/Section\";\nimport Column from \"../elements/Column\";\nimport { changeTemplateStatus } from \"../../store/template-status/actions\";\n\nclass TemplateDataStorage extends BaseModule {\n  constructor(modules) {\n    super(modules);\n    this.elementsIds = [];\n  }\n\n  replaceAll(element) {\n    if (!element instanceof RootElement) {\n      throw \"Expect Root Element as root element;)\";\n    }\n    this.rootElement = element;\n    this.elementsIds = element.getIds();\n    this.setCurrentRootElement();\n  }\n\n  getTemplateData() {\n    return this.rootElement.toObject();\n  }\n  getTemplateDataForSave() {\n    let data = {};\n\n    data.data = this.getTemplateData();\n    data.title = this.title || \"\";\n    data.name = this.name || \"\";\n    return data;\n  }\n\n  setTitle(title) {\n    this.title = title;\n  }\n\n  setName(name) {\n    this.name = name;\n  }\n  setType(type) {\n    this.type = type;\n  }\n\n  setCurrentRootElement() {\n    this.currentElement = this.rootElement;\n    store.dispatch(setCurrentElement(this.currentElement));\n    return this.currentElement;\n  }\n\n  setCurrentElement(element) {\n    if (!element instanceof BaseElement) {\n      throw \"Only Base Element Can Be Set as Default\";\n    }\n    this.currentElement = element;\n    store.dispatch(setCurrentElement(element));\n  }\n\n  getCurrentElement() {\n    if (!this.currentElement) {\n      return this.setCurrentRootElement();\n    }\n    return this.currentElement;\n  }\n\n  getElementById(elementId) {\n    let stack = [...this.rootElement.children];\n    let element;\n    while (!(stack.length === 0)) {\n      element = stack.pop();\n      if (element.id == elementId) return element;\n      stack.push(...element.children);\n    }\n  }\n\n  /**\n   *\n   * @returns {BaseElement}\n   */\n  getRootElement() {\n    return this.rootElement;\n  }\n\n  addWidgetInSection(elementName) {\n    let newSection = new Section();\n    this.elementsIds.push(newSection.getId());\n\n    let newColumn = new Column();\n    this.elementsIds.push(newColumn.getId());\n\n    let newWidget = new (window.elementsManager.getElementClass(elementName))();\n    this.elementsIds.push(newWidget.getId());\n    if (elementName === \"section_widget\") {\n      newSection.appendColumn(newColumn);\n      this.rootElement.appendNewSection(newSection);\n      this.setCurrentElement(newSection);\n      store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\n      getEditor().showSettingsPanel();\n      return;\n    }\n    newColumn.appendWidget(newWidget);\n    newSection.appendColumn(newColumn);\n    this.rootElement.appendNewSection(newSection);\n    this.setCurrentElement(newWidget);\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\n    getEditor().showSettingsPanel();\n  }\n}\n\nexport default TemplateDataStorage;\n","import ElementsFactory from './modules/ElementsFactory';\r\nimport SaveImportModule from \"./modules/SaveImportModule\";\r\nimport SettingsChangeModule from \"./modules/SettingsChangeModule\";\r\nimport TemplateSettingsChangeModule from \"./modules/TemplateSettingsChangeModule\";\r\nimport TemplateDataStorage from \"./modules/TemplateDataStorage\";\r\n\r\nclass Modules {\r\n  /**\r\n   * @param {Editor} editor\r\n   * */\r\n  constructor(editor){\r\n    this.elementsFactory = new ElementsFactory(this);\r\n    this.saveImportModule = new SaveImportModule(this);\r\n    window.saveImportModule = new SaveImportModule(this);\r\n    this.settingsChangeModule = new SettingsChangeModule(this);\r\n    this.templateSettingsChangeModule = new  TemplateSettingsChangeModule(this);\r\n    this.templateDataStorage = new TemplateDataStorage(this);\r\n  }\r\n  loaded(){\r\n    this.saveImportModule.load();\r\n  }\r\n}\r\nexport default Modules;","import React, {Component} from \"react\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from '../store/store'\r\nimport {startDrag} from \"../store/element-drag/actions\";\r\n\r\nexport default class WidgetIcon  extends  Component{\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      element: this.props.element,\r\n    };\r\n    this.onDragStart = this.onDragStart.bind(this);\r\n  }\r\n  onDragStart(e){\r\n    store.dispatch(startDrag(null));\r\n    e.dataTransfer.effectAllowed = \"copy\";\r\n    e.dataTransfer.setData('text/plain', this.state.element.getName());\r\n  }\r\n  render() {\r\n    if (!this.state.element instanceof BaseElement) {\r\n      throw 'Widget Component must has Element in props';\r\n    }\r\n    return <div className='widget-icon' draggable=\"true\" onDragStart={this.onDragStart}>\r\n      {\r\n        React.createElement(this.state.element.getIconComponent(), {height: 35})\r\n      }\r\n      <div className=\"widget-icon__title\">\r\n        {this.state.element.getTitle()}\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport WidgetIcon from \"./WidgetIcon\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\n\r\nclass WidgetsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { widgets: window.elementsManager.getWidgetsList() };\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"widget-panel-wrapper\">\r\n        <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n          <div className=\"widget-panel\">\r\n            {this.state.widgets.map(widget => {\r\n              return <WidgetIcon element={widget} key={widget.getName()} />;\r\n            })}\r\n          </div>\r\n        </Scrollbars>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WidgetsPanel;\r\n","import React, { Component } from \"react\";\r\nimport ChevronIcon from '../../svgs/chevron.svg'\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrentElement, getCurrentTab, getElementState } from \"../store/store\";\r\nimport { setActiveSection } from \"../store/setting-section/actions\";\r\nimport {getTemplateType} from \"../helpers\";\r\n\r\nclass SettingSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      hidden: false,\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n    if(props.sectionId === 'wrapper_click_section'){\r\n      console.log(props);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    /**\r\n     * Если еще ни разу не открывали текущую вкладку у элемента,\r\n     * то в setActiveSection передадим 0\r\n     */\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    if (! (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined))) {\r\n      this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), 0));\r\n    }\r\n    this.checkSectionDisplay();\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.checkSectionDisplay();\r\n  }\r\n\r\n  toggle() {\r\n    this.props.dispatch(setActiveSection(getCurrentElement().getName(), getCurrentTab(), this.props.sectionID));\r\n  };\r\n\r\n  /**\r\n   * Проверим условие отображения\r\n   * @return {undefined}\r\n   */\r\n  checkSectionDisplay(){\r\n\r\n    if(this.props.conditionsCallback){\r\n      let hidden = ! this.props.conditionsCallback();\r\n      if(this.state.hidden === hidden) {\r\n        return\r\n      }\r\n      this.setState(state => ({...state, hidden }));\r\n      return ;\r\n    }\r\n    if(! this.props.conditions){\r\n      return;\r\n    }\r\n    let hidden = false;\r\n\r\n    let conditionPairs = _.toPairs(this.props.conditions);\r\n    conditionPairs.forEach(condition => {\r\n      let [controlId, comparedValue] = condition;\r\n      let negative = controlId.indexOf(\"!\") >= 0;\r\n      controlId = controlId.replace(\"!\", \"\");\r\n      let _value = getCurrentElement().getSettings(controlId);\r\n      if (!_.isArray(_value)) {\r\n        _value = [_value];\r\n      } else if (_value.length === 0) {\r\n        hidden = true;\r\n      }\r\n      _value.forEach(value => {\r\n        if (hidden) {\r\n          return;\r\n        }\r\n        if (_.isString(comparedValue) || _.isBoolean(comparedValue)) {\r\n          hidden = value !== comparedValue ? !negative : negative;\r\n        }\r\n        if (_.isArray(comparedValue)) {\r\n          hidden = comparedValue.indexOf(value) === -1 ? !negative : negative;\r\n        }\r\n      });\r\n    });\r\n    if(this.state.hidden !== hidden){\r\n      this.setState(state => ({...state, hidden}));\r\n    }\r\n  }\r\n  render() {\r\n    if(this.state.hidden){\r\n      return null;\r\n    }\r\n    let currentElementName = getCurrentElement().getName();\r\n    let currentTab = getCurrentTab();\r\n    let activeSectionID = 0;\r\n    /**\r\n     * Сравниваем с undefined\r\n     */\r\n    if (this.props.settingSection[currentElementName]\r\n        && (this.props.settingSection[currentElementName][currentTab] !== undefined)) {\r\n      activeSectionID = this.props.settingSection[currentElementName][currentTab];\r\n    }\r\n    let controllers = this.props.controls || [];\r\n    if(this.props.hideOnEmail && getTemplateType() === 'email'){\r\n      return '';\r\n    }\r\n    controllers = controllers.filter(controller => {\r\n      return ! (controller.hideOnEmail && getTemplateType() === 'email');\r\n    });\r\n    return (\r\n      <div  className={\"settings-section \" + (this.props.sectionID === activeSectionID ? 'open' : '')}>\r\n        <div className=\"settings-section__title d-flex\" onClick={this.toggle}>\r\n          <div className=\"settings-section__icon d-flex \">\r\n            <ChevronIcon />\r\n          </div>\r\n          <div className=\"settings-section__label\">\r\n            {this.props.label}\r\n          </div>\r\n        </div>\r\n        <div className=\"controllers-wrapper\">\r\n          {\r\n            controllers.map((controller) => {\r\n              let ControllerComponent = window.controllersManager.getController(controller.type);\r\n              return React.createElement(ControllerComponent, { ...controller, key: controller.controlId });\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    settingSection: state.settingSectionMenu,\r\n    controllerValue: state.controllerValue,\r\n  }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, null)(SettingSection);\r\n","import React, {Component} from \"react\";\r\nimport ('./DynamicContent.scss');\r\nimport ('./../../../sass/altrp-menu.scss');\r\nimport {connect} from \"react-redux\";\r\nimport Resource from \"../../classes/Resource\";\r\nimport AltrpSelect from \"../../../../../admin/src/components/altrp-select/AltrpSelect\";\r\nimport CONSTANTS from \"../../consts\";\r\nimport {changeTemplateStatus} from \"../../store/template-status/actions\";\r\nimport store from \"../../store/store\";\r\n\r\nconst DATA_TYPES_OPTIONS = [\r\n  {\r\n    value: 'array',\r\n    label: 'Array'\r\n  },\r\n];\r\nconst MORPHS_TYPES_OPTIONS = {\r\n  /**\r\n   * @see {ArrayConverter}\r\n   * @link https://altrp.com/layouts/converters\r\n   */\r\n  array: [\r\n    {\r\n      /**\r\n       * @see {ArrayConverter#extract}\r\n       */\r\n      label: 'Extract',\r\n      value: 'extract',\r\n    },\r\n    {\r\n      /**\r\n       * @see {ArrayConverter#map}\r\n       */\r\n      label: 'Map',\r\n      value: 'map',\r\n    },\r\n  ],\r\n};\r\n/**\r\n * Класс реализующий список динамических конверторов для данных\r\n */\r\nclass DynamicContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: {},\r\n      };\r\n    this.resource = new Resource({route: '/admin/ajax/models_with_fields_options'});\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.updateDynamicValue();\r\n  }\r\n\r\n  /**\r\n   * Сохранйем значение в свойства элемента\r\n   */\r\n  setSettings(){\r\n    store.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    this.props.currentElement.setDynamicSetting(this.props.settingName, this.state.value);\r\n  }\r\n  /**\r\n   * Чтобы не закрывалось предотвращаем всплытие клика\r\n   * @param e\r\n   */\r\n  wrapperClickHandler = (e)=>{\r\n    e.stopPropagation();\r\n  };\r\n  /**\r\n   * Обновляем значение при смене свойства или активного элемента (this.props.currentElement)\r\n   */\r\n  updateDynamicValue(){\r\n    if(! this.props.settingName || ! this.props.currentElement){\r\n      return;\r\n    }\r\n    let value = this.props.currentElement.getDynamicSetting(this.props.settingName);\r\n    if(! value){\r\n      value = {};\r\n    }\r\n    this.setState(state => ({...state, value}));\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(this.props.currentElement !== prevProps.currentElement){\r\n      this.updateDynamicValue();\r\n    }\r\n    if(this.props.settingName !== prevProps.settingName){\r\n      this.updateDynamicValue();\r\n    }\r\n  }\r\n  getPositionProps(){\r\n    let element = this.props.element;\r\n    if(! element){\r\n      return{top:0, left:7};\r\n    }\r\n    return{\r\n      top: element.offsetTop + element.offsetHeight + 2,\r\n      left:7\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Сменим тип данных\r\n   * @param {{}} e\r\n   */\r\n  typeChange = (e) => {\r\n    let value = {...this.state.value};\r\n    if(! e){\r\n      _.unset(value, 'data_type')\r\n    } else {\r\n      value.data_type = e.value;\r\n    }\r\n    _.unset(value, 'convert_type');\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n  /**\r\n   * Сменим тип данных\r\n   * @param {{}} e\r\n   */\r\n  convertChange = (e) => {\r\n    let value = {...this.state.value};\r\n    if(! e){\r\n      _.unset(value, 'convert_type')\r\n    } else {\r\n      value.convert_type = e.value;\r\n    }\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n  /**\r\n   * Сменим аргумент\r\n   * @param {number} index\r\n   * @param {string} argument\r\n   */\r\n  changeArgument = (index, argument) => {\r\n    let value = {...this.state.value};\r\n    if(! argument){\r\n      _.unset(value, `argument${index || 1}`)\r\n    } else {\r\n      value[`argument${index || 1}`] = argument;\r\n    }\r\n    this.setState(state => ({...state, value}), this.setSettings);\r\n  };\r\n\r\n  render() {\r\n    let classes = ['altrp-dynamic-content'];\r\n    if(this.props.show){\r\n      classes.push('altrp-dynamic-content_show')\r\n    }\r\n    const {data_type, convert_type, argument1} = this.state.value;\r\n\r\n    let selectDataTypeProps = {\r\n      onChange: this.typeChange,\r\n      value: _.find(DATA_TYPES_OPTIONS, item => item.value === data_type) || null,\r\n      options: DATA_TYPES_OPTIONS,\r\n      classNamePrefix: 'dynamic-select',\r\n      placeholder: 'Choose Data Type',\r\n      noOptionsMessage: () => \"no found\",\r\n      isClearable: true,\r\n    };\r\n    let convertsOptions = MORPHS_TYPES_OPTIONS[data_type] || [];\r\n    let selectConvertTypeProps = {\r\n      onChange: this.convertChange,\r\n      value: _.find(convertsOptions, item => item.value === convert_type) || null,\r\n      options: convertsOptions,\r\n      classNamePrefix: 'dynamic-select',\r\n      placeholder: 'Choose Data Type',\r\n      noOptionsMessage: () => \"no found\",\r\n      isClearable: true,\r\n    };\r\n    return <div className={classes.join(' ')}  style={this.getPositionProps()} onClick={this.wrapperClickHandler}>\r\n    <div className=\"controller-container controller-container_select2\">\r\n      <div className=\"control-select2-header\">\r\n        <div className=\"control-select2__label\">Select Type</div>\r\n      </div>\r\n      <div className=\"control-container_select2-wrapper\">\r\n        <AltrpSelect isClearable={true} {...selectDataTypeProps} />\r\n      </div>\r\n    </div>\r\n      {convertsOptions.length ? <div className=\"controller-container controller-container_select2\">\r\n        <div className=\"control-select2-header\">\r\n          <div className=\"control-select2__label\">Data Converts</div>\r\n        </div>\r\n        <div className=\"control-container_select2-wrapper\">\r\n          <AltrpSelect isClearable={true} {...selectConvertTypeProps} />\r\n        </div>\r\n      </div> : null}\r\n      {data_type && <div className=\"controller-container controller-container_textarea\">\r\n        <div className=\"controller-container__label\">\r\n          Argument № 1\r\n        </div>\r\n        <textarea className=\"controller-container__textarea\"\r\n                  value={argument1 || ''}\r\n                  onChange={(e) => {this.changeArgument(1, e.target.value)}} />\r\n      </div>}\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.dynamicContentState,\r\n    settingName: _.get(state.dynamicContentState, 'params.settingName'),\r\n    currentElement: state.currentElement.currentElement\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DynamicContent);\r\n","import React, { Component } from \"react\";\r\nimport SettingSection from \"./SettingSection\";\r\nimport { Scrollbars } from \"react-custom-scrollbars\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\n\r\nclass PanelTabContent extends Component {\r\n\r\n  render() {\r\n    let sections = this.props.sections || [];\r\n    return <div className=\"settings-controllers\">\r\n      <Scrollbars\r\n        autoHide\r\n        autoHideTimeout={500}\r\n        autoHideDuration={200}\r\n      >\r\n        <div id=\"settingsControllers\">\r\n          {\r\n            sections.map((section, idx) => {\r\n              return React.createElement(SettingSection, {\r\n                ...section,\r\n                key: section.sectionId,\r\n                sectionID: idx,\r\n              });\r\n            }\r\n            )\r\n          }\r\n          <DynamicContent />\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default PanelTabContent\r\n","import React from \"react\";\nimport {Select} from \"@blueprintjs/select\";\nimport {Button, MenuItem, ButtonGroup, Alignment, Icon} from \"@blueprintjs/core\";\nimport ButtonController from \"../controllers/ButtonController\";\nimport AltrpMeta from \"../../classes/AltrpMeta\";\nimport {connect} from \"react-redux\";\nimport {controllerMapStateToProps} from \"../../decorators/controller\";\nimport {getCurrentElement} from \"../../store/store\";\nimport Controller from \"../../classes/Controller\";\nimport {editGlobalColor, editGlobalEffect, setGlobalColors} from \"../../store/altrp-global-colors/actions\";\nimport {\n  addUpdateGlobalStylesPreset,\n  deleteGlobalStylesPresets,\n  updateGlobalStylesPresets\n} from \"../../store/altrp-global-styles/actions\";\nimport CONSTANTS from \"../../consts\";\n\n/**\n * @return {boolean}\n */\nfunction ItemPredicate(query, value) {\n\n  if(!query) {\n    return true\n  }\n\n  const index = _.findIndex(_.split(value, \"\"), char => {\n    let similar = false;\n    _.split(query, \"\").forEach(queryChar => {\n      if(queryChar === char) {\n        similar = true\n      }\n    });\n    return similar\n  });\n\n  if(index !== -1) {\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction ItemRenderer(query, { handleClick, modifiers }) {\n\n  async function deletePreset() {\n    const currentElement = getCurrentElement();\n    const settings = currentElement.getSettings();\n\n    const meta = await AltrpMeta.getMetaByName(\"global_styles\");\n    const metaValue = meta.getMetaValue({});\n\n    delete metaValue[currentElement.getName()][query];\n\n    await meta.save();\n\n    const needUpdate = [];\n\n    let element = altrpEditor.modules.templateDataStorage.getRootElement();\n\n\n    findSimilar(element, needUpdate);\n\n    delete settings.global_styles_presets;\n\n    needUpdate.forEach(elem => {\n      elem.setSettings(settings);\n    })\n\n    appStore.dispatch(\n      deleteGlobalStylesPresets(currentElement.getName(), query)\n    );\n  }\n\n  return <ButtonGroup key={query} className=\"state-section-style-preset\" minimal>\n    <Button\n      fill\n      text={query}\n      alignText={Alignment.LEFT}\n      onClick={handleClick}\n    />\n    <Button\n      title=\"delete this preset\"\n      onClick={deletePreset}\n      intent=\"danger\"\n      icon=\"cross\"\n    />\n  </ButtonGroup>\n\n}\n\nfunction ItemCreateRenderer(query, active, handleClick) {\n\n  async function create() {\n    const controlsNames = [];\n\n    const currentElement = getCurrentElement();\n\n    if (currentElement.getName) {\n      let tabs = controllersManager.getControls(currentElement.getName());\n\n      tabs.style.forEach(tab => {\n        tab.controls.forEach(control => {\n          controlsNames.push(control.controlId)\n        });\n      });\n    }\n\n    const controls = {};\n\n    controlsNames.forEach(name => {\n      if(currentElement.settings[name]) {\n        controls[name] = currentElement.settings[name]\n      }\n    });\n\n    let meta = await AltrpMeta.getMetaByName(\"global_styles\");\n    const metaValue = meta.getMetaValue({});\n\n    if(metaValue[currentElement.getName()]) {\n      _.keys(metaValue[currentElement.getName()]).forEach((name) => {\n        if(query === name) {\n          throw \"для пресета требуется уникальное имя\"\n        }\n      })\n    }\n\n    meta.setMetaValue({\n      ...metaValue,\n      [currentElement.getName()]: {\n        ...metaValue[currentElement.getName()],\n        [query]: controls\n      }\n    });\n\n    await meta.save();\n\n    appStore.dispatch(\n      updateGlobalStylesPresets(currentElement.getName(), query, controls)\n    );\n\n    handleClick()\n  }\n\n  return <MenuItem\n    icon=\"add\"\n    text={`Create preset`}\n    onClick={create}\n  />\n}\n\nclass GlobalStylesPresets extends React.Component {\n  constructor(props) {\n    super(props);\n    const currentElement = props.currentElement.currentElement;\n    const presets = props.globalStylesPresets.styles;\n\n    let items = [];\n    if(presets) {\n      if(presets[currentElement.getName()]) {\n        items =_.keys(presets[currentElement.getName()])\n      }\n    }\n    const currentPreset = currentElement.getSettings(\"global_styles_presets\", \"\")\n\n    this.state = {\n      currentElementId: currentElement.getId(),\n      query: \"\",\n      current: currentPreset,\n      items,\n    };\n\n    this.updateCurrent = this.updateCurrent.bind(this);\n    this.updateQuery = this.updateQuery.bind(this);\n    this.removeCurrent = this.removeCurrent.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const currentElement = this.props.currentElement.currentElement;\n    const presets = this.props.globalStylesPresets.styles;\n    let items = [];\n    if (presets[currentElement.getName()]) {\n      items = _.keys(presets[currentElement.getName()])\n    }\n\n    if (!_.isEqual(this.state.items, items)) {\n      this.setState((s) => ({\n        ...s,\n        items,\n      }))\n    }\n\n    if(currentElement.getId() !== this.state.currentElementId) {\n      const currentElementSettings = currentElement.getSettings(\"global_styles_presets\", \"\");\n      let items = this.props.globalStylesPresets.styles[currentElement.getName()] || {};\n\n      this.setState((s) => ({\n        ...s,\n        currentElementId: currentElement.getId(),\n        current: currentElementSettings,\n        query: \"\",\n        items: _.keys(items),\n      }))\n    }\n    if(this.state.current) {\n      let removeCurrent = _.findIndex(this.state.items, (item) => item === this.state.current);\n\n      if(removeCurrent === -1) {\n        this.setState((s) => ({\n          ...s,\n          current: \"\"\n        }))\n      }\n    }\n\n    if(JSON.stringify(this.props.controllerValue) !== JSON.stringify(prevProps.controllerValue) && this.state.current) {\n      this.save()\n    }\n  }\n\n  updateCurrent(current) {\n    const currentElement = this.props.currentElement.currentElement;\n    let isNewPreset = this.state.items.findIndex(preset => current === preset);\n\n    const presetSettings = this.props.globalStylesPresets.styles[currentElement.getName()][current];\n\n    _.keys(presetSettings).forEach((controllerName) => {\n      currentElement.setSettingValue(controllerName, presetSettings[controllerName])\n    })\n    currentElement.setSettingValue(\"global_styles_presets\", current)\n\n    // setSettingValue\n\n    // currentElement.setSettings({\n    //   ...settings,\n    //   ...this.props.globalStylesPresets.styles[currentElement.getName()][current],\n    //   global_styles_presets: current,\n    // });\n\n    if(isNewPreset === -1) {\n      this.setState((s) => ({\n        ...s,\n        current,\n        query: \"\",\n        items: [current, ...s.items]\n      }))\n    } else {\n      this.setState((s) => ({\n        ...s,\n        query: \"\",\n        current\n      }))\n    }\n  }\n\n  save() {\n    const currentElement = this.props.currentElement.currentElement;\n    // настроки елемента\n\n    const controlsNames = [];\n\n    if (currentElement.getName) {\n      let tabs = controllersManager.getControls(currentElement.getName());\n\n      tabs.style.forEach(tab => {\n        tab.controls.forEach(control => {\n          controlsNames.push(control.controlId)\n        });\n      });\n    }\n\n    const controls = {};\n\n    controlsNames.forEach(name => {\n      if(currentElement.settings[name]) {\n        controls[name] = currentElement.settings[name]\n      }\n    });\n\n    AltrpMeta.getMetaByName(\"global_styles\").then((r) => {\n      let metaValue = r.data.metaValue;\n\n      metaValue = {\n        ...metaValue,\n        [currentElement.getName()]: {\n          ...metaValue[currentElement.getName()],\n          [this.state.current]: controls\n        }\n      }\n\n      AltrpMeta.saveGlobalStylesPresets(metaValue).then(r => {\n      })\n      // meta.setMetaValue({\n      //   ...metaValue,\n      //   [currentElement.getName()]: {\n      //     ...metaValue[currentElement.getName()],\n      //     [this.state.current]: controls\n      //   }\n      // });\n      // meta.save();\n    })\n\n    if(this.props.globalStylesPresets.styles[currentElement.getName()]) {\n      this.props.updateGlobalStylesPresets({\n        widgetName: currentElement.getName(),\n        name: this.state.current,\n        settings: controls,\n      });\n    }\n\n    const needUpdate = [];\n\n    let element = altrpEditor.modules.templateDataStorage.getRootElement();\n\n    findSimilar(element, needUpdate);\n    needUpdate.forEach(elem => {\n      const settings = elem.getSettings();\n      if(elem === getCurrentElement()){\n        return;\n      }\n      // _.keys(controls).forEach((controllerName) => {\n      //   elem.setSettingValue(controllerName, controls[controllerName])\n      // })\n      console.log(elem);\n      console.log(controlsNames);\n      console.log(this);\n      let _controls = controls\n      if(this.props?.controllerValue?.controlId){\n        _controls = {..._controls}\n        _controls[this.props.controllerValue.controlId] = this.props?.controllerValue?.value\n      }\n      elem.setSettings({\n        ...settings,\n        ..._controls,\n      });\n    })\n  }\n\n  updateQuery(query) {\n    query = _.replace(query, \" \" , \"_\");\n\n    this.setState((s) => ({\n      ...s,\n      query\n    }))\n  }\n\n  removeCurrent() {\n    this.setState(s => ({\n      ...s,\n      current: \"\"\n    }))\n\n    const currentElement = this.props.currentElement.currentElement;\n\n    currentElement.deleteSetting(\"global_styles_presets\")\n  }\n\n  render() {\n    const items = this.state.items || [];\n    const query = this.state.query || \"\";\n\n    const classes = [\"state-section-style-presets\"];\n\n    if(this.state.current) {\n      classes.push(\"state-section-style-presets_active\")\n    }\n\n    return <div className={_.join(classes, \" \")}>\n      <Select\n        createNewItemFromQuery={(query) => query}\n        onQueryChange={this.updateQuery}\n        query={query}\n        createNewItemRenderer={ItemCreateRenderer}\n        itemPredicate={ItemPredicate}\n        items={items}\n        createNewItemPosition=\"first\"\n        noResults={<MenuItem disabled={true} text=\"No results.\" />}\n        itemRenderer={ItemRenderer}\n        onItemSelect={this.updateCurrent}\n        popoverProps={{\n          targetClassName: \"state-section-style-target\"\n        }}\n      >\n        <button className=\"state-section-style-button btn\">\n          {\n            this.state.current ? this.state.current : \"Presets\"\n          }\n        </button>\n      </Select>\n      {\n        this.state.current ? (\n          <button\n            onClick={this.removeCurrent}\n            className=\"btn state-section-style-button\"\n            title=\"remove preset\"\n          >\n            <Icon icon=\"cross\"/>\n          </button>\n        ) : \"\"\n      }\n    </div>\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentElement: state.currentElement,\n    globalStylesPresets: state.globalStylesPresets,\n    controllerValue: state.controllerValue,\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateGlobalStylesPresets: payload => dispatch(updateGlobalStylesPresets(payload.widgetName, payload.name, payload.settings)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalStylesPresets);\n\n/**\n *\n * @param {BaseElement} firstElement\n * @param {BaseElement[]} needUpdate\n */\nfunction findSimilar(firstElement, needUpdate) {\n  const children = firstElement.getChildren();\n  const currentElement = getCurrentElement();\n  if(children.length !== 0) {\n    children.forEach(child => {\n      const name = child.getName();\n\n      if(currentElement.getName() === name) {\n        const preset = child.getSettings(\"global_styles_presets\", \"\");\n        const currentPreset = currentElement.getSettings(\"global_styles_presets\", \"\");\n\n        if(preset === currentPreset) {\n          needUpdate.push(child)\n        }\n      }\n\n      findSimilar(child, needUpdate)\n    })\n  }\n}\n","import React, { Component } from \"react\";\nimport ('../../sass/state-section.scss');\nimport { connect } from \"react-redux\";\nimport { setCurrentState } from \"../store/state-section/actions\";\nimport { getElementState, getCurrentTab } from \"../store/store\";\nimport GlobalStylesPresets from \"./state-section/GlobalStylesPresets\";\n\nclass StateSection extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttons: [\n        { title: \"N\", value: \"\" },\n        { title: \"H\", value: \":hover\" },\n        { title: \"A\", value: \".active\" },\n        { title: \"F\", value: \":focus\" },\n        { title: \"E\", value: \".state-error\" },\n        { title: \"D\", value: \".state-disabled\" },\n      ]\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.dispatch(setCurrentState(\"N\", \"\"));\n  }\n\n  setCurrentState(button) {\n    this.props.dispatch(setCurrentState(button.title, button.value));\n  }\n\n  render() {\n    return (\n      <div className=\"state-section-wrapper\">\n        <div className=\"state-section\">\n          {\n            this.state.buttons.map((button, index) => {\n              return <button\n                key={index}\n                className={\"state-section__button \" + (this.props.currentState.title === button.title ? \"state-section__button_active\" : \"\")}\n                onClick={() => this.setCurrentState(button)}\n              >{button.title}</button>\n            })\n          }\n        </div>\n        <GlobalStylesPresets/>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentState: state.currentState\n  }\n}\n\nexport default connect(mapStateToProps, null)(StateSection);\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContentIcon from \"../../svgs/content.svg\";\r\nimport StyleIcon from \"../../svgs/style.svg\";\r\nimport AdvancedIcon from \"../../svgs/advanced.svg\";\r\nimport {\r\n  TAB_ADVANCED,\r\n  TAB_CONTENT,\r\n  TAB_STYLE\r\n} from \"../classes/modules/ControllersManager\";\r\nimport PanelTabContent from \"./PanelTabContent\";\r\nimport DynamicContent from \"./DynamicContent/DynamicContent\";\r\nimport Controller from \"../classes/Controller\";\r\nimport { setCurrentTab } from \"../store/active-settings-tab/actions\";\r\nimport { getCurrentTab, getElementState } from \"../store/store\";\r\nimport StateSection from \"./StateSection\";\r\nimport { setCurrentState } from \"../store/state-section/actions\";\r\n\r\nclass SettingsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: \"content\"\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Устанавливает текущий таб\r\n   * @param activeTab\r\n   */\r\n  setActiveTab(activeTab) {\r\n    this.setState({\r\n      ...this.state,\r\n      activeTab\r\n    });\r\n    this.props.setCurrentTab(activeTab);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setCurrentTab(this.state.activeTab);\r\n  }\r\n\r\n  render() {\r\n    let controllersManager = window.controllersManager;\r\n    let sections = [];\r\n    if (this.props.currentElement.getName) {\r\n      let allControllersPairs = _.toPairs(\r\n        controllersManager.getControls(this.props.currentElement.getName())\r\n      );\r\n      allControllersPairs.forEach(pair => {\r\n        pair[1].forEach(section => {\r\n          section.controls = section.controls.map(control => {\r\n            return {\r\n              ...control,\r\n              controller: new Controller(control)\r\n            };\r\n          });\r\n        });\r\n        if (pair[0] === this.state.activeTab) {\r\n          sections = [...pair[1]];\r\n        }\r\n      });\r\n    }\r\n\r\n    let contentTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_CONTENT ? \"active\" : \"\");\r\n    let styleTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_STYLE ? \"active\" : \"\");\r\n    let advancedTabClasses =\r\n      \"panel-tab d-flex \" +\r\n      (this.state.activeTab === TAB_ADVANCED ? \"active\" : \"\");\r\n    return (\r\n      <div className=\"panel settings-panel d-flex\">\r\n        <div className=\"panel-tabs d-flex\">\r\n          <button\r\n            className={contentTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_CONTENT)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <ContentIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Content</span>\r\n          </button>\r\n          <button\r\n            className={styleTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_STYLE)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <StyleIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Style</span>\r\n          </button>\r\n          <button\r\n            className={advancedTabClasses}\r\n            onClick={() => this.setActiveTab(TAB_ADVANCED)}\r\n          >\r\n            <span className=\"panel-tab__icon\">\r\n              <AdvancedIcon />\r\n            </span>\r\n            <span className=\"panel-tab__text\">Advanced</span>\r\n          </button>\r\n        </div>\r\n        {this.state.activeTab === \"style\" && <StateSection />}\r\n        <PanelTabContent sections={sections} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentElement: state.currentElement.currentElement,\r\n    currentState: state.currentState\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentTab, setCurrentState })(\r\n  SettingsPanel\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditorWindow extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ width: this.props.currentScreen.width, height: this.props.currentScreen.height }} className={\"editor-window\"} id=\"editorWindow\">\r\n      {!this.props.historyStoreActive && <div className=\"blocking-layer\" />}\r\n      <iframe src=\"/admin/editor-content\" id=\"editorContent\" width=\"100%\" />\r\n    </div>\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n    historyStoreActive: state.historyStore.active\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(EditorWindow)","import React, { Component } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { iconsManager } from \"../../../../front-app/src/js/helpers\";\r\nimport { getEditor, getTemplateDataStorage, getFactory } from \"../helpers\";\r\nimport Resource from \"../classes/Resource\";\r\nimport {\r\n  setActiveHistoryStore,\r\n  addHistoryStoreItem\r\n} from \"../store/history-store/actions\";\r\n\r\nimport UserSvg from \"../../../../admin/src/svgs/user.svg\";\r\nimport StartFilled from \"../../../../admin/src/svgs/start-filled.svg\";\r\nimport Scrollbars from \"react-custom-scrollbars\";\r\nimport { changeTemplateStatus } from \"../store/template-status/actions\";\r\nimport CONSTANTS from \"../consts\";\r\n\r\nclass HistoryPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeTab: \"actions\"\r\n    };\r\n  }\r\n\r\n  setActiveTab(activeTab) {\r\n    return () => {\r\n      this.setState(state => ({\r\n        ...state,\r\n        activeTab\r\n      }));\r\n    };\r\n  }\r\n\r\n  renderTabContent() {\r\n    switch (this.state.activeTab) {\r\n      case \"actions\":\r\n        return <ActionsTabContent />;\r\n      case \"revision\":\r\n        return <RevisionTabContent />;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let actionsTabClasses =\r\n      \"history-panel__tab \" +\r\n      (this.state.activeTab === \"actions\" ? \"history-panel__tab--active\" : \"\");\r\n    let revisionTabClasses =\r\n      \"history-panel__tab \" +\r\n      (this.state.activeTab === \"revision\" ? \"history-panel__tab--active\" : \"\");\r\n\r\n    return (\r\n      <div className=\"history-panel\">\r\n        <div className=\"history-panel__tabs\">\r\n          <button\r\n            onClick={this.setActiveTab(\"actions\")}\r\n            className={actionsTabClasses}\r\n          >\r\n            <span>ACTIONS</span>\r\n          </button>\r\n          <button\r\n            onClick={this.setActiveTab(\"revision\")}\r\n            className={revisionTabClasses}\r\n          >\r\n            <span>REVISION</span>\r\n          </button>\r\n        </div>\r\n        <div className=\"history-panel__tab-content\">\r\n          {this.renderTabContent()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst ActionsTabContent = () => {\r\n  const controllerHistory = window.controllerHistory;\r\n  const historyStore = useSelector(state => state.historyStore.history);\r\n  const current = useSelector(state => state.historyStore.current);\r\n\r\n  const handlerHistory = index => {\r\n    return () => {\r\n      if (current > index) {\r\n        for (let i = 0; i < current - index; i++) {\r\n          controllerHistory.undo();\r\n        }\r\n      } else if (current < index) {\r\n        for (let i = 0; i < index - current; i++) {\r\n          controllerHistory.redo();\r\n        }\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"history-panel__content\">\r\n      <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n        <div\r\n          key={-1}\r\n          className={\r\n            current === -1\r\n              ? \"history-panel__restore-item history-panel__restore-item--active\"\r\n              : \"history-panel__restore-item\"\r\n          }\r\n          onClick={handlerHistory(-1)}\r\n        >\r\n          <span className=\"history-panel__restore-item-title\">start edit</span>\r\n          {current === -1\r\n            ? iconsManager().renderIcon(\"check\", {\r\n                style: { width: 20, height: 20 },\r\n                className: \"history-panel__restore-item-icon\"\r\n              })\r\n            : \"\"}\r\n        </div>\r\n        {historyStore.map((item, index) => {\r\n          let title = \"\";\r\n          if (item.data && item.data.element) {\r\n            title = item.data.element.getTitle();\r\n          }\r\n\r\n          let type = \"\";\r\n          switch (item.type) {\r\n            case \"ADD\":\r\n              type = \"Added\";\r\n              break;\r\n            case \"EDIT\":\r\n              type = \"Edited\";\r\n              break;\r\n            case \"DELETE\":\r\n              type = \"Removed\";\r\n              break;\r\n            case \"REVISION\":\r\n              title = \"Revision\";\r\n              break;\r\n          }\r\n\r\n          let restoreItemClasses = \"history-panel__restore-item \";\r\n          if (current === index) {\r\n            restoreItemClasses += \"history-panel__restore-item--active \";\r\n          }\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={restoreItemClasses}\r\n              onClick={handlerHistory(index)}\r\n            >\r\n              <span className=\"history-panel__restore-item-title\">{title}</span>\r\n              <span className=\"history-panel__restore-item-type\">{type}</span>\r\n              {current === index\r\n                ? iconsManager().renderIcon(\"check\", {\r\n                    style: { width: 20, height: 20 },\r\n                    className: \"history-panel__restore-item-icon\"\r\n                  })\r\n                : \"\"}\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"history-panel__actions-tab-subscribe\">\r\n          Switch to Revisions tab for older version\r\n        </div>\r\n      </Scrollbars>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst RevisionTabContent = () => {\r\n  const [arrayRevisions, setArrayRevisions] = React.useState([]);\r\n  const [currentRevision, setCurrentRevision] = React.useState(-1);\r\n  const [oldRootElement, setOldRootElement] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    setOldRootElement(_.cloneDeep(getTemplateDataStorage().rootElement));\r\n    let templateId = appStore.getState().templateData.id;\r\n\r\n    const fetchRevisions = async () => {\r\n      let arrayRevisions = await new Resource({\r\n        route: `/admin/ajax/templates/${templateId}/reviews`\r\n      }).getAll();\r\n      setArrayRevisions(arrayRevisions.reverse());\r\n    };\r\n    fetchRevisions(0);\r\n    window.parent.appStore.dispatch(setActiveHistoryStore(false));\r\n    return () => {\r\n      window.parent.appStore.dispatch(setActiveHistoryStore(true));\r\n    };\r\n  }, []);\r\n\r\n  const handleClickDiscard = () => {\r\n    getTemplateDataStorage().replaceAll(oldRootElement);\r\n    getEditor().showWidgetsPanel();\r\n  };\r\n\r\n  const handleClickApply = () => {\r\n    window.parent.appStore.dispatch(\r\n      addHistoryStoreItem(\"REVISION\", {\r\n        old: oldRootElement,\r\n        new: _.cloneDeep(getTemplateDataStorage().rootElement)\r\n      })\r\n    );\r\n    \r\n    window.parent.appStore.dispatch(changeTemplateStatus(CONSTANTS.TEMPLATE_NEED_UPDATE));\r\n    getEditor().showWidgetsPanel();\r\n  };\r\n\r\n  const handleSetCurrentRevision = (index, item) => async () => {\r\n    setCurrentRevision(index);\r\n    let response = await new Resource({\r\n      route: `/admin/ajax/templates/${item.parent_template}/reviews/${item.id}`\r\n    }).getAll();\r\n    let revisionRootElement = JSON.parse(response.data[0].data);\r\n\r\n    let parsedData = getFactory().parseData(revisionRootElement);\r\n    getTemplateDataStorage().replaceAll(parsedData);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"history-panel__revision-actions\">\r\n        <div className=\"history-panel__discard\" onClick={handleClickDiscard}>\r\n          {iconsManager().renderIcon(\"deleteOne\", {\r\n            style: { width: 14, height: 14 },\r\n            className: \"history-panel__discard-icon\"\r\n          })}\r\n          DISCARD\r\n        </div>\r\n        <div className=\"history-panel__apply\" onClick={handleClickApply}>\r\n          APPLY\r\n        </div>\r\n      </div>\r\n      <div className=\"history-panel__title\">Revisions</div>\r\n      <div className=\"history-panel__content history-panel__content--revision\">\r\n        <Scrollbars autoHide autoHideTimeout={500} autoHideDuration={200}>\r\n          {arrayRevisions.map((item, index) => {\r\n            let secondsAgo = (Date.now() - Date.parse(item.updated_at)) / 1000;\r\n            let dateString;\r\n            if (secondsAgo < 100) {\r\n              dateString = `${secondsAgo} seconds ago`;\r\n            } else if (secondsAgo < 6000) {\r\n              dateString = `${Math.floor(secondsAgo / 100)} minutes ago`;\r\n            } else if (secondsAgo < 144000) {\r\n              dateString = `${Math.floor(secondsAgo / 6000)} hours ago`;\r\n            } else if (secondsAgo < 4320000) {\r\n              dateString = `${Math.floor(secondsAgo / 144000)} days ago`;\r\n            } else if (secondsAgo < 51840000) {\r\n              dateString = `${Math.floor(secondsAgo / 4320000)} months ago`;\r\n            } else {\r\n              dateString = `${Math.floor(secondsAgo / 51840000)} years ago`;\r\n            }\r\n            let date = new Date(item.updated_at);\r\n            dateString += ` (${date.toLocaleString(\"en\", {\r\n              month: \"short\"\r\n            })} ${date.getDate()} @ ${date.getHours()}:${\r\n              date.getMinutes() > 9\r\n                ? date.getMinutes()\r\n                : `0${date.getMinutes()}`\r\n            })`;\r\n            return (\r\n              <div\r\n                className={\r\n                  index === currentRevision\r\n                    ? \"history-panel__card-revision history-panel__card-revision--active\"\r\n                    : \"history-panel__card-revision\"\r\n                }\r\n                onClick={handleSetCurrentRevision(index, item)}\r\n                key={index}\r\n              >\r\n                <UserSvg className=\"history-panel__card-avatar\" />\r\n                <div className=\"history-panel__card-content\">\r\n                  <div className=\"history-panel__card-time\">{dateString}</div>\r\n                  <div className=\"history-panel__card-author\">\r\n                    Revision by {item.author}\r\n                  </div>\r\n                </div>\r\n                {index === currentRevision && (\r\n                  <StartFilled className=\"history-panel__card-icon\" />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </Scrollbars>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HistoryPanel;\r\n","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function getDecoratedComponent(instanceRef) {\n  var currentRef = instanceRef.current;\n\n  if (currentRef == null) {\n    return null;\n  } else if (currentRef.decoratedRef) {\n    // go through the private field in decorateHandler to avoid the invariant hit\n    return currentRef.decoratedRef.current;\n  } else {\n    return currentRef;\n  }\n}\nexport function isClassComponent(Component) {\n  return Component && Component.prototype && typeof Component.prototype.render === 'function';\n}\nexport function isRefForwardingComponent(C) {\n  var _item$$$typeof;\n\n  var item = C;\n  return (item === null || item === void 0 ? void 0 : (_item$$$typeof = item.$$typeof) === null || _item$$$typeof === void 0 ? void 0 : _item$$$typeof.toString()) === 'Symbol(react.forward_ref)';\n}\nexport function isRefable(C) {\n  return isClassComponent(C) || isRefForwardingComponent(C);\n}\nexport function checkDecoratorArguments(functionName, signature) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var i = 0; i < (arguments.length <= 2 ? 0 : arguments.length - 2); i++) {\n      var arg = i + 2 < 2 || arguments.length <= i + 2 ? undefined : arguments[i + 2];\n\n      if (arg && arg.prototype && arg.prototype.render) {\n        // eslint-disable-next-line no-console\n        console.error('You seem to be applying the arguments in the wrong order. ' + \"It should be \".concat(functionName, \"(\").concat(signature, \")(Component), not the other way around. \") + 'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#you-seem-to-be-applying-the-arguments-in-the-wrong-order');\n        return;\n      }\n    }\n  }\n}\nexport function isFunction(input) {\n  return typeof input === 'function';\n}\nexport function noop() {// noop\n}\n\nfunction isObjectLike(input) {\n  return _typeof(input) === 'object' && input !== null;\n}\n\nexport function isPlainObject(input) {\n  if (!isObjectLike(input)) {\n    return false;\n  }\n\n  if (Object.getPrototypeOf(input) === null) {\n    return true;\n  }\n\n  var proto = input;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(input) === proto;\n}\nexport function isValidType(type, allowArray) {\n  return typeof type === 'string' || _typeof(type) === 'symbol' || !!allowArray && Array.isArray(type) && type.every(function (t) {\n    return isValidType(t, false);\n  });\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { isFunction, noop } from './utils';\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\n\nexport var Disposable = /*#__PURE__*/function () {\n  function Disposable(action) {\n    _classCallCheck(this, Disposable);\n\n    this.isDisposed = false;\n    this.action = isFunction(action) ? action : noop;\n  }\n  /**\n   * Validates whether the given object is a disposable\n   * @param {Object} Object to test whether it has a dispose method\n   * @returns {Boolean} true if a disposable object, else false.\n   */\n\n\n  _createClass(Disposable, [{\n    key: \"dispose\",\n    value:\n    /** Performs the task of cleaning up resources. */\n    function dispose() {\n      if (!this.isDisposed) {\n        this.action();\n        this.isDisposed = true;\n      }\n    }\n  }], [{\n    key: \"isDisposable\",\n    value: function isDisposable(d) {\n      return Boolean(d && isFunction(d.dispose));\n    }\n  }, {\n    key: \"_fixup\",\n    value: function _fixup(result) {\n      return Disposable.isDisposable(result) ? result : Disposable.empty;\n    }\n    /**\n     * Creates a disposable object that invokes the specified action when disposed.\n     * @param {Function} dispose Action to run during the first call to dispose.\n     * The action is guaranteed to be run at most once.\n     * @return {Disposable} The disposable object that runs the given action upon disposal.\n     */\n\n  }, {\n    key: \"create\",\n    value: function create(action) {\n      return new Disposable(action);\n    }\n  }]);\n\n  return Disposable;\n}();\n/**\n * Gets the disposable that does nothing when disposed.\n */\n\nDisposable.empty = {\n  dispose: noop\n};\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\n\nexport var CompositeDisposable = /*#__PURE__*/function () {\n  function CompositeDisposable() {\n    _classCallCheck(this, CompositeDisposable);\n\n    this.isDisposed = false;\n\n    for (var _len = arguments.length, disposables = new Array(_len), _key = 0; _key < _len; _key++) {\n      disposables[_key] = arguments[_key];\n    }\n\n    this.disposables = disposables;\n  }\n  /**\n   * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n   * @param {Any} item Disposable to add.\n   */\n\n\n  _createClass(CompositeDisposable, [{\n    key: \"add\",\n    value: function add(item) {\n      if (this.isDisposed) {\n        item.dispose();\n      } else {\n        this.disposables.push(item);\n      }\n    }\n    /**\n     * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n     * @param {Any} item Disposable to remove.\n     * @returns {Boolean} true if found; false otherwise.\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var shouldDispose = false;\n\n      if (!this.isDisposed) {\n        var idx = this.disposables.indexOf(item);\n\n        if (idx !== -1) {\n          shouldDispose = true;\n          this.disposables.splice(idx, 1);\n          item.dispose();\n        }\n      }\n\n      return shouldDispose;\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group but\n     *  does not dispose the CompositeDisposable.\n     */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (!this.isDisposed) {\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i = 0; _i < len; _i++) {\n          currentDisposables[_i].dispose();\n        }\n      }\n    }\n    /**\n     *  Disposes all disposables in the group and removes them from the group.\n     */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var len = this.disposables.length;\n        var currentDisposables = new Array(len);\n\n        for (var i = 0; i < len; i++) {\n          currentDisposables[i] = this.disposables[i];\n        }\n\n        this.disposables = [];\n\n        for (var _i2 = 0; _i2 < len; _i2++) {\n          currentDisposables[_i2].dispose();\n        }\n      }\n    }\n  }]);\n\n  return CompositeDisposable;\n}();\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\n\nexport var SerialDisposable = /*#__PURE__*/function () {\n  function SerialDisposable() {\n    _classCallCheck(this, SerialDisposable);\n\n    this.isDisposed = false;\n  }\n  /**\n   * Gets the underlying disposable.\n   * @returns {Any} the underlying disposable.\n   */\n\n\n  _createClass(SerialDisposable, [{\n    key: \"getDisposable\",\n    value: function getDisposable() {\n      return this.current;\n    }\n  }, {\n    key: \"setDisposable\",\n    value: function setDisposable(value) {\n      var shouldDispose = this.isDisposed;\n\n      if (!shouldDispose) {\n        var old = this.current;\n        this.current = value;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n\n      if (shouldDispose && value) {\n        value.dispose();\n      }\n    }\n    /** Performs the task of cleaning up resources. */\n\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      if (!this.isDisposed) {\n        this.isDisposed = true;\n        var old = this.current;\n        this.current = undefined;\n\n        if (old) {\n          old.dispose();\n        }\n      }\n    }\n  }]);\n\n  return SerialDisposable;\n}();","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createRef, Component } from 'react';\nimport { shallowEqual } from '@react-dnd/shallowequal';\nimport { invariant } from '@react-dnd/invariant';\nimport { DndContext } from '../core';\nimport { isPlainObject } from './utils';\nimport { Disposable, CompositeDisposable, SerialDisposable } from './disposables';\nimport { isRefable } from './utils';\nimport hoistStatics from 'hoist-non-react-statics';\nexport function decorateHandler(_ref) {\n  var DecoratedComponent = _ref.DecoratedComponent,\n      createHandler = _ref.createHandler,\n      createMonitor = _ref.createMonitor,\n      createConnector = _ref.createConnector,\n      registerHandler = _ref.registerHandler,\n      containerDisplayName = _ref.containerDisplayName,\n      getType = _ref.getType,\n      collect = _ref.collect,\n      options = _ref.options;\n  var _options$arePropsEqua = options.arePropsEqual,\n      arePropsEqual = _options$arePropsEqua === void 0 ? shallowEqual : _options$arePropsEqua;\n  var Decorated = DecoratedComponent;\n  var displayName = DecoratedComponent.displayName || DecoratedComponent.name || 'Component';\n\n  var DragDropContainer = /*#__PURE__*/function (_Component) {\n    _inherits(DragDropContainer, _Component);\n\n    var _super = _createSuper(DragDropContainer);\n\n    function DragDropContainer(props) {\n      var _this;\n\n      _classCallCheck(this, DragDropContainer);\n\n      _this = _super.call(this, props);\n      _this.decoratedRef = createRef();\n\n      _this.handleChange = function () {\n        var nextState = _this.getCurrentState();\n\n        if (!shallowEqual(nextState, _this.state)) {\n          _this.setState(nextState);\n        }\n      };\n\n      _this.disposable = new SerialDisposable();\n\n      _this.receiveProps(props);\n\n      _this.dispose();\n\n      return _this;\n    }\n\n    _createClass(DragDropContainer, [{\n      key: \"getHandlerId\",\n      value: function getHandlerId() {\n        return this.handlerId;\n      }\n    }, {\n      key: \"getDecoratedComponentInstance\",\n      value: function getDecoratedComponentInstance() {\n        invariant(this.decoratedRef.current, 'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()');\n        return this.decoratedRef.current;\n      }\n    }, {\n      key: \"shouldComponentUpdate\",\n      value: function shouldComponentUpdate(nextProps, nextState) {\n        return !arePropsEqual(nextProps, this.props) || !shallowEqual(nextState, this.state);\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.disposable = new SerialDisposable();\n        this.currentType = undefined;\n        this.receiveProps(this.props);\n        this.handleChange();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!arePropsEqual(this.props, prevProps)) {\n          this.receiveProps(this.props);\n          this.handleChange();\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.dispose();\n      }\n    }, {\n      key: \"receiveProps\",\n      value: function receiveProps(props) {\n        if (!this.handler) {\n          return;\n        }\n\n        this.handler.receiveProps(props);\n        this.receiveType(getType(props));\n      }\n    }, {\n      key: \"receiveType\",\n      value: function receiveType(type) {\n        if (!this.handlerMonitor || !this.manager || !this.handlerConnector) {\n          return;\n        }\n\n        if (type === this.currentType) {\n          return;\n        }\n\n        this.currentType = type;\n\n        var _registerHandler = registerHandler(type, this.handler, this.manager),\n            _registerHandler2 = _slicedToArray(_registerHandler, 2),\n            handlerId = _registerHandler2[0],\n            unregister = _registerHandler2[1];\n\n        this.handlerId = handlerId;\n        this.handlerMonitor.receiveHandlerId(handlerId);\n        this.handlerConnector.receiveHandlerId(handlerId);\n        var globalMonitor = this.manager.getMonitor();\n        var unsubscribe = globalMonitor.subscribeToStateChange(this.handleChange, {\n          handlerIds: [handlerId]\n        });\n        this.disposable.setDisposable(new CompositeDisposable(new Disposable(unsubscribe), new Disposable(unregister)));\n      }\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        this.disposable.dispose();\n\n        if (this.handlerConnector) {\n          this.handlerConnector.receiveHandlerId(null);\n        }\n      }\n    }, {\n      key: \"getCurrentState\",\n      value: function getCurrentState() {\n        if (!this.handlerConnector) {\n          return {};\n        }\n\n        var nextState = collect(this.handlerConnector.hooks, this.handlerMonitor, this.props);\n\n        if (process.env.NODE_ENV !== 'production') {\n          invariant(isPlainObject(nextState), 'Expected `collect` specified as the second argument to ' + '%s for %s to return a plain object of props to inject. ' + 'Instead, received %s.', containerDisplayName, displayName, nextState);\n        }\n\n        return nextState;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        return _jsx(DndContext.Consumer, {\n          children: function children(_ref2) {\n            var dragDropManager = _ref2.dragDropManager;\n\n            _this2.receiveDragDropManager(dragDropManager);\n\n            if (typeof requestAnimationFrame !== 'undefined') {\n              requestAnimationFrame(function () {\n                var _this2$handlerConnect;\n\n                return (_this2$handlerConnect = _this2.handlerConnector) === null || _this2$handlerConnect === void 0 ? void 0 : _this2$handlerConnect.reconnect();\n              });\n            }\n\n            return _jsx(Decorated, Object.assign({}, _this2.props, _this2.getCurrentState(), {\n              // NOTE: if Decorated is a Function Component, decoratedRef will not be populated unless it's a refforwarding component.\n              ref: isRefable(Decorated) ? _this2.decoratedRef : null\n            }), void 0);\n          }\n        }, void 0);\n      }\n    }, {\n      key: \"receiveDragDropManager\",\n      value: function receiveDragDropManager(dragDropManager) {\n        if (this.manager !== undefined) {\n          return;\n        }\n\n        invariant(dragDropManager !== undefined, 'Could not find the drag and drop manager in the context of %s. ' + 'Make sure to render a DndProvider component in your top-level component. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context', displayName, displayName);\n\n        if (dragDropManager === undefined) {\n          return;\n        }\n\n        this.manager = dragDropManager;\n        this.handlerMonitor = createMonitor(dragDropManager);\n        this.handlerConnector = createConnector(dragDropManager.getBackend());\n        this.handler = createHandler(this.handlerMonitor, this.decoratedRef);\n      }\n    }]);\n\n    return DragDropContainer;\n  }(Component);\n\n  DragDropContainer.DecoratedComponent = DecoratedComponent;\n  DragDropContainer.displayName = \"\".concat(containerDisplayName, \"(\").concat(displayName, \")\");\n  return hoistStatics(DragDropContainer, DecoratedComponent);\n}","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { invariant } from '@react-dnd/invariant';\nimport { isPlainObject, getDecoratedComponent } from './utils';\nvar ALLOWED_SPEC_METHODS = ['canDrag', 'beginDrag', 'isDragging', 'endDrag'];\nvar REQUIRED_SPEC_METHODS = ['beginDrag'];\n\nvar SourceImpl = /*#__PURE__*/function () {\n  function SourceImpl(spec, monitor, ref) {\n    var _this = this;\n\n    _classCallCheck(this, SourceImpl);\n\n    this.props = null;\n\n    this.beginDrag = function () {\n      if (!_this.props) {\n        return;\n      }\n\n      var item = _this.spec.beginDrag(_this.props, _this.monitor, _this.ref.current);\n\n      if (process.env.NODE_ENV !== 'production') {\n        invariant(isPlainObject(item), 'beginDrag() must return a plain object that represents the dragged item. ' + 'Instead received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', item);\n      }\n\n      return item;\n    };\n\n    this.spec = spec;\n    this.monitor = monitor;\n    this.ref = ref;\n  }\n\n  _createClass(SourceImpl, [{\n    key: \"receiveProps\",\n    value: function receiveProps(props) {\n      this.props = props;\n    }\n  }, {\n    key: \"canDrag\",\n    value: function canDrag() {\n      if (!this.props) {\n        return false;\n      }\n\n      if (!this.spec.canDrag) {\n        return true;\n      }\n\n      return this.spec.canDrag(this.props, this.monitor);\n    }\n  }, {\n    key: \"isDragging\",\n    value: function isDragging(globalMonitor, sourceId) {\n      if (!this.props) {\n        return false;\n      }\n\n      if (!this.spec.isDragging) {\n        return sourceId === globalMonitor.getSourceId();\n      }\n\n      return this.spec.isDragging(this.props, this.monitor);\n    }\n  }, {\n    key: \"endDrag\",\n    value: function endDrag() {\n      if (!this.props) {\n        return;\n      }\n\n      if (!this.spec.endDrag) {\n        return;\n      }\n\n      this.spec.endDrag(this.props, this.monitor, getDecoratedComponent(this.ref));\n    }\n  }]);\n\n  return SourceImpl;\n}();\n\nexport function createSourceFactory(spec) {\n  Object.keys(spec).forEach(function (key) {\n    invariant(ALLOWED_SPEC_METHODS.indexOf(key) > -1, 'Expected the drag source specification to only have ' + 'some of the following keys: %s. ' + 'Instead received a specification with an unexpected \"%s\" key. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', ALLOWED_SPEC_METHODS.join(', '), key);\n    invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' + 'Instead received a specification with %s: %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n  });\n  REQUIRED_SPEC_METHODS.forEach(function (key) {\n    invariant(typeof spec[key] === 'function', 'Expected %s in the drag source specification to be a function. ' + 'Instead received a specification with %s: %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', key, key, spec[key]);\n  });\n  return function createSource(monitor, ref) {\n    return new SourceImpl(spec, monitor, ref);\n  };\n}","import React, { Component } from \"react\";\r\n\r\nimport { DragSource } from \"react-dnd\";\r\n/**\r\n * Implements the drag source contract.\r\n */\r\nconst cardSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      text: props.text\r\n    };\r\n  }\r\n};\r\n/**\r\n * Specifies the props to inject into your component.\r\n */\r\nfunction collect(connect, monitor) {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n}\r\nclass NavigationItem extends Component {\r\n  render() {\r\n    const { isDragging, connectDragSource, text, key } = this.props;\r\n    return connectDragSource(\r\n      <div\r\n        key={key}\r\n        style={{ opacity: isDragging ? 0.5 : 1, cursor: \"pointer\" }}\r\n      >\r\n        {text}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DragSource(\"CARD\", cardSource, collect)(NavigationItem);\r\n","import { invariant } from '@react-dnd/invariant';\nimport { registerSource, DragSourceMonitorImpl, SourceConnector } from '../internals';\nimport { checkDecoratorArguments, isPlainObject, isValidType } from './utils';\nimport { decorateHandler } from './decorateHandler';\nimport { createSourceFactory } from './createSourceFactory';\n/**\n * Decorates a component as a dragsource\n * @param type The dragsource type\n * @param spec The drag source specification\n * @param collect The props collector function\n * @param options DnD options\n */\n\nexport function DragSource(type, spec, collect) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  checkDecoratorArguments('DragSource', 'type, spec, collect[, options]', type, spec, collect, options);\n  var getType = type;\n\n  if (typeof type !== 'function') {\n    invariant(isValidType(type), 'Expected \"type\" provided as the first argument to DragSource to be ' + 'a string, or a function that returns a string given the current props. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', type);\n\n    getType = function getType() {\n      return type;\n    };\n  }\n\n  invariant(isPlainObject(spec), 'Expected \"spec\" provided as the second argument to DragSource to be ' + 'a plain object. Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', spec);\n  var createSource = createSourceFactory(spec);\n  invariant(typeof collect === 'function', 'Expected \"collect\" provided as the third argument to DragSource to be ' + 'a function that returns a plain object of props to inject. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  invariant(isPlainObject(options), 'Expected \"options\" provided as the fourth argument to DragSource to be ' + 'a plain object when specified. ' + 'Instead, received %s. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source', collect);\n  return function decorateSource(DecoratedComponent) {\n    return decorateHandler({\n      containerDisplayName: 'DragSource',\n      createHandler: createSource,\n      registerHandler: registerSource,\n      createConnector: function createConnector(backend) {\n        return new SourceConnector(backend);\n      },\n      createMonitor: function createMonitor(manager) {\n        return new DragSourceMonitorImpl(manager);\n      },\n      DecoratedComponent: DecoratedComponent,\n      getType: getType,\n      collect: collect,\n      options: options\n    });\n  };\n}","import React, { Component } from \"react\";\r\nimport { Tree, Icon } from \"@blueprintjs/core\";\r\nimport { connect } from \"react-redux\";\r\nimport NavigationItem from \"./NavigationItem\";\r\nimport {\r\n  editorSetCurrentElementByID,\r\n  deleteCurrentElementByID,\r\n  getEditor\r\n} from \"../helpers\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport store from \"../store/store\";\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    templateData: getEditor().modules.templateDataStorage.getRootElement()\r\n  };\r\n};\r\n\r\nfunction isExpandable(name) {\r\n  switch (name) {\r\n    case \"root-element\":\r\n      return true;\r\n    case \"section\":\r\n      return true;\r\n    case \"section_widget\":\r\n      return true;\r\n    case \"column\":\r\n      return true;\r\n    default:\r\n      return false;\r\n  }\r\n}\r\nclass NavigationPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let template = [this.parseTemplate(props.templateData)];\r\n    this.state = {\r\n      template: template,\r\n      dragOver: false,\r\n      isDrag: false\r\n    };\r\n    this.handleExpand = this.handleExpand.bind(this);\r\n    this.handleCollapse = this.handleCollapse.bind(this);\r\n    this.showItem = this.showItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    store.subscribe(this.storeListener.bind(this));\r\n  }\r\n\r\n  handleExpand(node, nodePath) {\r\n    let currentTree = _.cloneDeep(this.state.template);\r\n    let currentNode = Tree.nodeFromPath(nodePath, currentTree);\r\n    currentNode.isExpanded = true;\r\n    this.setState(s => ({ ...s, template: currentTree }));\r\n  }\r\n\r\n  handleCollapse(node, nodePath) {\r\n    let currentTree = _.cloneDeep(this.state.template);\r\n    let currentNode = Tree.nodeFromPath(nodePath, currentTree);\r\n    currentNode.isExpanded = false;\r\n    this.setState(s => ({ ...s, template: currentTree }));\r\n  }\r\n\r\n  showItem(node, nodePath) {\r\n    editorSetCurrentElementByID(node.id);\r\n    getEditor().showSettingsPanel();\r\n  }\r\n\r\n  storeListener() {\r\n    const newTemplate = [\r\n      this.parseTemplate(\r\n        getEditor().modules.templateDataStorage.getRootElement()\r\n      )\r\n    ];\r\n    const currentTemplate = _.cloneDeep(this.state.template, []);\r\n    if (!_.isEqual(newTemplate, currentTemplate)) {\r\n      this.setState(s => ({ ...s, template: newTemplate }));\r\n    }\r\n  }\r\n\r\n  deleteItem(e, elementID) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    e.preventDefault();\r\n    if (confirm) {\r\n      const success = deleteCurrentElementByID(elementID);\r\n      if (success) {\r\n        let currentTree = _.cloneDeep(this.state.template);\r\n        let newTree = this.removeElementFromArray(currentTree, elementID);\r\n        this.setState(s => ({ ...s, template: newTree }));\r\n      }\r\n    }\r\n  }\r\n\r\n  removeElementFromArray(template, elementID) {\r\n    return template.filter(function f(item) {\r\n      if (item.childNodes.length > 0) {\r\n        return (item.childNodes = item.childNodes.filter(f)).length;\r\n      } else if (item.id === elementID) return false;\r\n      else return true;\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {BaseElement} template\r\n   */\r\n  parseTemplate(template) {\r\n    const expandable = isExpandable(template.getName());\r\n    return {\r\n      label: (\r\n        <NavigationItem\r\n          key={template.id}\r\n          text={template.getName()}\r\n          id={template.id}\r\n        ></NavigationItem>\r\n      ),\r\n      depth: 2,\r\n      name: template.getName(),\r\n      icon: expandable && \"folder-close\",\r\n      childNodes: template.children.map((item, index) =>\r\n        this.parseTemplate(item)\r\n      ),\r\n      hasCaret: expandable,\r\n      key: template.id,\r\n      isExpanded: expandable,\r\n      id: template.id,\r\n      onClick: (node, e) => this.showItem(e, node.id),\r\n      [parent != null && \"parent\"]: parent,\r\n      secondaryLabel: template.name !== \"root-element\" && (\r\n        <div>\r\n          <Icon\r\n            icon=\"trash\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={e => this.deleteItem(e, template.id)}\r\n          />\r\n        </div>\r\n      )\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ overflow: \"auto\" }}>\r\n        <Tree\r\n          contents={this.state.template}\r\n          onNodeExpand={this.handleExpand}\r\n          onNodeCollapse={this.handleCollapse}\r\n          onNodeDoubleClick={this.showItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavigationPanel);\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 25px 15px 0;\r\n  width: 100%;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Heading = styled.p`\r\n  text-transform: uppercase;\r\n  font-size: 11px;\r\n`;\r\n\r\nconst MenuGroup = styled.div``;\r\n\r\nconst MenuItems = styled.div`\r\n  margin: 15px 0 25px;\r\n  -webkit-border-radius: 5px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Item = styled.div`\r\n  display: table;\r\n  width: 100%;\r\n  height: 40px;\r\n  cursor: pointer;\r\n  margin-bottom: 1px;\r\n  padding: 10px;\r\n  background-color: #fff;\r\n`;\r\n\r\nclass CommonPanel extends Component {\r\n  render() {\r\n    return (\r\n      <StyledWrapper>\r\n        <MenuGroup>\r\n          <Heading>Design System</Heading>\r\n          <MenuItems>\r\n            <Item onClick={this.props.showGlobalColorsPanel}>\r\n              Global Colors\r\n            </Item>\r\n            <Item onClick={this.props.showGlobalFontsPanel}>Global Fonts</Item>\r\n            <Item onClick={this.props.showGlobalEffectsPanel}>\r\n              Global Effects\r\n            </Item>\r\n          </MenuItems>\r\n        </MenuGroup>\r\n      </StyledWrapper>\r\n    );\r\n  }\r\n}\r\nexport default CommonPanel;\r\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  ControlGroup,\r\n  InputGroup,\r\n  Button,\r\n  Divider,\r\n  Icon\r\n} from \"@blueprintjs/core\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport invert from \"invert-color\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setGlobalColors,\r\n  editGlobalColor,\r\n  editGlobalEffect\r\n} from \"../store/altrp-global-colors/actions\";\r\nimport { createGlobalColor, getTemplateDataStorage } from \"../helpers\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\n\r\nconst Panel = styled.div`\r\n  background-color: #fff;\r\n  padding: 25px 15px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  colors: state.globalStyles.colors,\r\n  effects: state.globalStyles.effects\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setColors: colors => dispatch(setGlobalColors(colors)),\r\n  editColor: color => dispatch(editGlobalColor(color)),\r\n  editEffect: effect => dispatch(editGlobalEffect(effect))\r\n});\r\n\r\nclass GlobalColors extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colors: props.colors\r\n    };\r\n    this.toggleColorPanel = this.toggleColorPanel.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.debounceChangeColor = this.debounceChangeColor.bind(this);\r\n    this.debounceChangeName = this.debounceChangeName.bind(this);\r\n    this.updateEffectColors = this.updateEffectColors.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  toggleColorPanel(id) {\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let color = _.find(colors, color => color.id === id);\r\n    color.colorPanelOpen = !color.colorPanelOpen;\r\n    this.setState(s => ({ ...s, colors: colors }));\r\n  }\r\n\r\n  colorChange = (value, id) => {\r\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\r\n    const hex = value.hex;\r\n    const rgb = value.rgb;\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let currentColor = _.find(colors, color => color.id === id);\r\n    currentColor.color = rgba;\r\n    currentColor.colorPickedHex = hex;\r\n    currentColor.colorRGB = rgb;\r\n    this.setState(\r\n      s => ({ ...s, colors: colors }),\r\n      () => this.props.setColors(colors)\r\n    );\r\n    const data = {\r\n      color: rgba,\r\n      colorPickedHex: hex,\r\n      colorRGB: rgb,\r\n      guid: currentColor.guid\r\n    };\r\n    this.debounceChangeColor(data, id);\r\n  };\r\n\r\n  debounceChangeColor = _.debounce((color, id) => {\r\n    console.log(color);\r\n    this.globalStyleResource\r\n      .put(id, {\r\n        settings: { ...color },\r\n        type: \"color\"\r\n      })\r\n      .then(res => {\r\n        this.props.editColor({ ...color, id: id });\r\n        this.updateEffectColors(color);\r\n        getTemplateDataStorage()\r\n          .getRootElement()\r\n          .children.forEach(child => {\r\n            this.recursiveWalkTree(child, color.guid, color);\r\n          });\r\n      });\r\n  }, 50);\r\n\r\n  /**\r\n   * Обновление цвета в эффекте\r\n   * @param {*} color\r\n   */\r\n  updateEffectColors(color) {\r\n    const guid = color.guid;\r\n    this.props.effects.forEach(effect => {\r\n      const check = effect.globalColor == guid;\r\n      if (check) {\r\n        const newEffectColor = {\r\n          ...effect,\r\n          colorRGB: color.colorRGB,\r\n          color: color.color,\r\n          colorPickedHex: color.colorPickedHex\r\n        };\r\n        this.globalStyleResource\r\n          .put(effect.id, { settings: newEffectColor })\r\n          .then(res => {\r\n            this.props.editEffect(newEffectColor);\r\n            getTemplateDataStorage()\r\n              .getRootElement()\r\n              .children.forEach(child => {\r\n                this.recursiveWalkTree(\r\n                  child,\r\n                  newEffectColor.guid,\r\n                  newEffectColor\r\n                );\r\n              });\r\n          });\r\n      }\r\n      // this.globalStyleResource.put();\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} color\r\n   */\r\n  recursiveWalkTree(template, guid, color) {\r\n    if (Array.isArray(template)) {\r\n      template?.forEach(\r\n        /**\r\n         * @param {BaseElement} templateItem\r\n         */\r\n        templateItem => {\r\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\r\n          if (hasGlobal) {\r\n            templateItem.updateAllGlobals(guid, color);\r\n          }\r\n          this.recursiveWalkTree(templateItem, guid, color);\r\n        }\r\n      );\r\n    } else this.recursiveUpdate(template, guid, color);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} color\r\n   */\r\n  recursiveUpdate(template, guid, color) {\r\n    if (template.hasGlobal(guid)) {\r\n      template.updateAllGlobals(guid, color);\r\n    }\r\n    template.children?.forEach(\r\n      /**\r\n       * @param {BaseElement} child\r\n       */\r\n      child => {\r\n        if (child.hasGlobal(guid)) {\r\n          child.updateAllGlobals(guid, color);\r\n        }\r\n\r\n        child.children.length > 0 &&\r\n          this.recursiveWalkTree(child.children, guid, color);\r\n      }\r\n    );\r\n  }\r\n\r\n  nameChange = (value, id) => {\r\n    if (value.length === 0) throw \"Value cannot be empty\";\r\n    const colors = _.cloneDeep(this.state.colors, []);\r\n    let color = _.find(colors, color => color.id === id);\r\n    color.name = value;\r\n    this.setState(\r\n      s => ({ ...s, colors: colors }),\r\n      () => this.props.setColors(colors)\r\n    );\r\n    this.debounceChangeName(value, id);\r\n  };\r\n\r\n  debounceChangeName = _.debounce((value, id) => {\r\n    this.globalStyleResource.put(id, {\r\n      settings: { name: value },\r\n      type: \"color\"\r\n    });\r\n  }, 150);\r\n\r\n  addItem(e) {\r\n    const color = {};\r\n    color.settings = JSON.stringify(createGlobalColor());\r\n    color.type = \"color\";\r\n    this.globalStyleResource.post(color).then(response => {\r\n      const colors = [\r\n        ...this.state.colors,\r\n        {\r\n          id: response.id,\r\n          guid: response.guid,\r\n          ...response.settings\r\n        }\r\n      ];\r\n      this.setState(\r\n        s => ({ ...s, colors: colors }),\r\n        () => this.props.setColors(colors)\r\n      );\r\n    });\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    if (confirm) {\r\n      let colors = _.cloneDeep(this.state.colors, []);\r\n      colors = colors.filter(item => item.id !== id);\r\n      this.setState(\r\n        s => ({ ...s, colors: colors }),\r\n        () => this.props.setColors(colors)\r\n      );\r\n      this.globalStyleResource.delete(id);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        {this.state.colors.length > 0 ? (\r\n          this.state.colors.map(item => {\r\n            return (\r\n              <React.Fragment key={item.id}>\r\n                <ControlGroup\r\n                  key={item.id}\r\n                  style={{\r\n                    marginBottom: \"10px\"\r\n                  }}\r\n                >\r\n                  <InputGroup\r\n                    style={{\r\n                      width: \"140px\"\r\n                    }}\r\n                    onChange={e => this.nameChange(e.target.value, item.id)}\r\n                    value={item.name}\r\n                  ></InputGroup>\r\n\r\n                  <Button onClick={e => this.deleteItem(item.id)}>\r\n                    <Icon icon=\"trash\"></Icon>\r\n                  </Button>\r\n                  <Button\r\n                    onClick={e => this.toggleColorPanel(item.id)}\r\n                    style={{\r\n                      backgroundColor: item.color,\r\n                      width: \"70px\",\r\n                      color: invert(item.colorPickedHex, {\r\n                        black: \"#000000\",\r\n                        white: \"#FFFFFF\",\r\n                        threshold: 0.45\r\n                      })\r\n                    }}\r\n                  >\r\n                    {item.colorPickedHex}\r\n                  </Button>\r\n                </ControlGroup>\r\n                <div\r\n                  className={!item.colorPanelOpen ? \" control-color-hide\" : \"\"}\r\n                >\r\n                  <SketchPicker\r\n                    presetColors={[]}\r\n                    color={item.color}\r\n                    onChange={color => this.colorChange(color, item.id)}\r\n                    style={{\r\n                      padding: 0,\r\n                      boxShadow: \"none\"\r\n                    }}\r\n                  ></SketchPicker>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })\r\n        ) : (\r\n          <div>Color list empty</div>\r\n        )}\r\n        <Divider></Divider>\r\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\r\n          Add Item\r\n        </Button>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalColors);\r\n","import React, { Component } from \"react\";\nimport {\n  ControlGroup,\n  FormGroup,\n  InputGroup,\n  Button,\n  Slider,\n  MenuItem\n} from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/select\";\nimport { SketchPicker } from \"react-color\";\nimport Resource from \"../classes/Resource\";\nimport GlobalPresetColors from \"./controllers/GlobalPresetColors\";\n\nconst typeOptions = [\n  {\n    value: \" \",\n    label: \"outline\",\n    key: 0\n  },\n  {\n    value: \"inset\",\n    label: \"Inset\",\n    key: 1\n  }\n];\n\nclass GlobalEffectItemAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultValues = {\n      blur: 0,\n      color: `rgba(255, 255, 255, 1)`,\n      colorPickedHex: \"#FFFFFF\",\n      colorRGB: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 1\n      },\n      globalColor: \"\",\n      horizontal: 0,\n      opacity: 1,\n      spread: 0,\n      type: \" \",\n      vertical: 0,\n      name: \"\"\n    };\n    const { isNew, effect } = props;\n    this.state = {\n      effect: isNew ? this.defaultValues : effect,\n      edit: false\n    };\n    this.nameChange = this.nameChange.bind(this);\n    this.colorChange = this.colorChange.bind(this);\n    this.onSlide = this.onSlide.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.globalColor = this.globalColor.bind(this);\n    this.onSaveEffect = this.onSaveEffect.bind(this);\n    this.globalStyleResource = new Resource({\n      route: \"/admin/ajax/global_template_styles\"\n    });\n  }\n\n  globalColor = value => {\n    const guid = value.guid;\n    const rgba = `rgba(${value.colorRGB.r}, ${value.colorRGB.g}, ${value.colorRGB.b}, ${value.colorRGB.a})`;\n    const hex = value.colorPickedHex;\n    const rgb = value.colorRGB;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        color: rgba,\n        colorPickedHex: hex,\n        colorRGB: rgb,\n        globalColor: guid\n      }\n    }));\n  };\n\n  colorChange = value => {\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\n    const hex = value.hex;\n    const rgb = value.rgb;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        color: rgba,\n        colorPickedHex: hex,\n        colorRGB: rgb,\n        globalColor: \"\"\n      }\n    }));\n  };\n  /**\n   *\n   * @param {Event} event\n   */\n  nameChange(event) {\n    const string = event.target.value;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        name: string\n      }\n    }));\n  }\n\n  onSlide(value, setting) {\n    const { effect } = this.state;\n    effect[setting] = value;\n    this.setState(s => ({ ...s, effect: effect }));\n  }\n\n  onSelect(event, value) {\n    this.setState(s => ({ ...s, effect: { ...s.effect, type: value } }));\n  }\n\n  onSaveEffect(event) {\n    event.preventDefault();\n    const { effect } = this.state;\n    const send = {\n      type: \"effect\",\n      settings: JSON.stringify(effect)\n    };\n    this.globalStyleResource.post(send).then(success => {\n      const effect = {\n        id: success.id,\n        guid: success.guid,\n        ...success.settings\n      };\n      this.props.addEffect(effect);\n      this.props.onSaveEffectClose();\n    });\n  }\n\n  render() {\n    const { effect } = this.state;\n    return (\n      <>\n        <ControlGroup vertical>\n          <form onSubmit={this.onSaveEffect}>\n            <FormGroup label=\"Enter Effect Name\">\n              <InputGroup\n                required\n                name=\"name\"\n                id=\"text-input\"\n                placeholder=\"Enter Effect Name\"\n                defaultValue={effect.name}\n                onChange={this.nameChange}\n              />\n            </FormGroup>\n\n            <FormGroup label=\"Choose Effect Color\">\n              <div\n                className={\"control-color-colorPicker\"}\n                style={{\n                  position: \"relative\",\n                  marginTop: `0`\n                }}\n              >\n                <SketchPicker\n                  color={effect.color}\n                  presetColors={[]}\n                  onChange={color => this.colorChange(color)}\n                  style={{\n                    padding: 0,\n                    boxShadow: \"none\"\n                  }}\n                ></SketchPicker>\n                <GlobalPresetColors\n                  changeValue={color => {\n                    console.log(color);\n                    this.globalColor(color);\n                    // this._changeValue(color);\n                    // this.setState(state=>({...state, colorRGB: color.colorRGB}))\n                  }}\n                ></GlobalPresetColors>\n              </div>\n            </FormGroup>\n            <FormGroup label=\"Blur\">\n              <Slider\n                onChange={value => this.onSlide(value, \"blur\")}\n                min={0}\n                max={100}\n                stepSize={1}\n                labelStepSize={10}\n                showTrackFill={true}\n                value={effect.blur}\n              />\n            </FormGroup>\n            <FormGroup label=\"Horizontal displacement\">\n              <Slider\n                onChange={value => this.onSlide(value, \"horizontal\")}\n                min={-100}\n                max={100}\n                stepSize={1}\n                labelStepSize={25}\n                value={effect.horizontal}\n                showTrackFill={true}\n              />\n            </FormGroup>\n            <FormGroup label=\"Vertical displacement\">\n              <Slider\n                onChange={value => this.onSlide(value, \"vertical\")}\n                min={-100}\n                max={100}\n                stepSize={1}\n                labelStepSize={25}\n                value={effect.vertical}\n                showTrackFill={true}\n              />\n            </FormGroup>\n            <FormGroup label=\"Spread\">\n              <Slider\n                onChange={value => this.onSlide(value, \"spread\")}\n                min={-100}\n                max={100}\n                stepSize={1}\n                labelStepSize={25}\n                value={effect.spread}\n                showTrackFill={true}\n              />\n            </FormGroup>\n            <FormGroup label=\"Position\" inline={true}>\n              <Select\n                activeItem={\n                  typeOptions.filter(item => item.value == effect.type)[0]\n                }\n                itemRenderer={item => (\n                  <MenuItem\n                    key={item.key}\n                    text={item.label}\n                    onClick={e => this.onSelect(e, item.value)}\n                  />\n                )}\n                items={typeOptions}\n                noResults={<MenuItem disabled={true} text=\"No results.\" />}\n              >\n                <Button\n                  text={\n                    typeOptions.filter(item => item.value == effect.type)[0]\n                      .label\n                  }\n                  rightIcon=\"double-caret-vertical\"\n                />\n              </Select>\n            </FormGroup>\n            <FormGroup>\n              <Button type=\"submit\" style={{ width: \"100%\" }}>\n                Save\n              </Button>\n            </FormGroup>\n          </form>\n        </ControlGroup>\n      </>\n    );\n  }\n}\n\nexport default GlobalEffectItemAdd;\n","import React, { Component } from \"react\";\nimport {\n  ControlGroup,\n  FormGroup,\n  InputGroup,\n  Button,\n  Slider,\n  MenuItem,\n  Collapse\n} from \"@blueprintjs/core\";\nimport { Select } from \"@blueprintjs/select\";\nimport { SketchPicker } from \"react-color\";\nimport Resource from \"../classes/Resource\";\nimport GlobalPresetColors from \"./controllers/GlobalPresetColors\";\n\nconst typeOptions = [\n  {\n    value: \" \",\n    label: \"outline\",\n    key: 0\n  },\n  {\n    value: \"inset\",\n    label: \"Inset\",\n    key: 1\n  }\n];\n\nclass GlobalEffectItem extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultValues = {\n      blur: 0,\n      color: `rgba(255, 255, 255, 1)`,\n      colorPickedHex: \"#FFFFFF\",\n      colorRGB: {\n        r: 255,\n        g: 255,\n        b: 255,\n        a: 1\n      },\n      horizontal: 0,\n      opacity: 1,\n      spread: 0,\n      type: \" \",\n      vertical: 0,\n      name: \"\"\n    };\n    const { isNew, effect } = props;\n    this.state = {\n      effect: isNew ? this.defaultValues : effect,\n      edit: false\n    };\n    this.nameChange = this.nameChange.bind(this);\n    this.colorChange = this.colorChange.bind(this);\n    this.onSlide = this.onSlide.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n    this.onSaveEffect = this.onSaveEffect.bind(this);\n    this.onDeleteEffect = this.onDeleteEffect.bind(this);\n    this.globalColor = this.globalColor.bind(this);\n    this.globalStyleResource = new Resource({\n      route: \"/admin/ajax/global_template_styles\"\n    });\n  }\n\n  colorChange = value => {\n    const rgba = `rgba(${value.rgb.r}, ${value.rgb.g}, ${value.rgb.b}, ${value.rgb.a})`;\n    const hex = value.hex;\n    const rgb = value.rgb;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        color: rgba,\n        colorPickedHex: hex,\n        colorRGB: rgb,\n        globalColor: \"\"\n      }\n    }));\n  };\n  /**\n   *\n   * @param {Event} event\n   */\n  nameChange(event) {\n    const string = event.target.value;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        name: string\n      }\n    }));\n  }\n\n  onSlide(value, setting) {\n    const { effect } = this.state;\n    effect[setting] = value;\n    this.setState(s => ({ ...s, effect: effect }));\n  }\n\n  onSelect(event, value) {\n    this.setState(s => ({ ...s, effect: { ...s.effect, type: value } }));\n  }\n\n  onSaveEffect(event) {\n    event.preventDefault();\n    const { effect } = this.state;\n    console.log(effect);\n    const send = {\n      type: \"effect\",\n      settings: effect\n    };\n    this.globalStyleResource.put(effect.id, send).then(success => {\n      this.props.editEffect(effect);\n      this.setState(\n        s => ({ ...s, edit: false }),\n        () => this.props.updateAllTree(effect)\n      );\n    });\n  }\n  onDeleteEffect(event) {\n    const confirmation = window.confirm(\"Are you shure?\");\n    event.preventDefault();\n    if (confirmation) {\n      const { effect } = this.state;\n      this.globalStyleResource.delete(effect.id).then(success => {\n        this.props.deleteEffect(effect);\n        // this.props.onSaveEffectClose();\n      });\n    }\n  }\n\n  globalColor = value => {\n    const guid = value.guid;\n    const rgba = `rgba(${value.colorRGB.r}, ${value.colorRGB.g}, ${value.colorRGB.b}, ${value.colorRGB.a})`;\n    const hex = value.colorPickedHex;\n    const rgb = value.colorRGB;\n    this.setState(s => ({\n      ...s,\n      effect: {\n        ...s.effect,\n        color: rgba,\n        colorPickedHex: hex,\n        colorRGB: rgb,\n        globalColor: guid\n      }\n    }));\n  };\n\n  render() {\n    const { effect } = this.state;\n    return (\n      <React.Fragment>\n        {!this.props.isNew && (\n          <Button\n            style={{ width: \"100%\" }}\n            onClick={e => this.setState(s => ({ ...s, edit: !s.edit }))}\n          >\n            {!this.props.isNew && effect.name}\n          </Button>\n        )}\n        <Collapse isOpen={this.state.edit}>\n          <ControlGroup vertical>\n            <form onSubmit={this.onSaveEffect}>\n              <FormGroup label=\"Enter Effect Name\">\n                <InputGroup\n                  required\n                  name=\"name\"\n                  id=\"text-input\"\n                  placeholder=\"Enter Effect Name\"\n                  defaultValue={effect.name}\n                  onChange={this.nameChange}\n                />\n              </FormGroup>\n\n              <FormGroup label=\"Choose Effect Color\">\n                <div\n                  className={\"control-color-colorPicker\"}\n                  style={{\n                    position: \"relative\",\n                    marginTop: `0`\n                  }}\n                >\n                  <SketchPicker\n                    color={effect.color}\n                    presetColors={[]}\n                    onChange={color => this.colorChange(color)}\n                    style={{\n                      padding: 0,\n                      boxShadow: \"none\"\n                    }}\n                  ></SketchPicker>\n                  <GlobalPresetColors\n                    changeValue={color => {\n                      console.log(color);\n                      this.globalColor(color);\n                      // this._changeValue(color);\n                      // this.setState(state=>({...state, colorRGB: color.colorRGB}))\n                    }}\n                  ></GlobalPresetColors>\n                </div>\n              </FormGroup>\n              <FormGroup label=\"Blur\">\n                <Slider\n                  onChange={value => this.onSlide(value, \"blur\")}\n                  min={0}\n                  max={100}\n                  stepSize={1}\n                  labelStepSize={10}\n                  showTrackFill={true}\n                  value={effect.blur}\n                />\n              </FormGroup>\n              <FormGroup label=\"Horizontal displacement\">\n                <Slider\n                  onChange={value => this.onSlide(value, \"horizontal\")}\n                  min={-100}\n                  max={100}\n                  stepSize={1}\n                  labelStepSize={25}\n                  value={effect.horizontal}\n                  showTrackFill={true}\n                />\n              </FormGroup>\n              <FormGroup label=\"Vertical displacement\">\n                <Slider\n                  onChange={value => this.onSlide(value, \"vertical\")}\n                  min={-100}\n                  max={100}\n                  stepSize={1}\n                  labelStepSize={25}\n                  value={effect.vertical}\n                  showTrackFill={true}\n                />\n              </FormGroup>\n              <FormGroup label=\"Spread\">\n                <Slider\n                  onChange={value => this.onSlide(value, \"spread\")}\n                  min={-100}\n                  max={100}\n                  stepSize={1}\n                  labelStepSize={25}\n                  value={effect.spread}\n                  showTrackFill={true}\n                />\n              </FormGroup>\n              <FormGroup label=\"Position\" inline={true}>\n                <Select\n                  activeItem={\n                    typeOptions.filter(item => item.value == effect.type)[0]\n                  }\n                  itemRenderer={item => (\n                    <MenuItem\n                      key={item.key}\n                      text={item.label}\n                      onClick={e => this.onSelect(e, item.value)}\n                    />\n                  )}\n                  items={typeOptions}\n                  noResults={<MenuItem disabled={true} text=\"No results.\" />}\n                >\n                  <Button\n                    text={\n                      typeOptions.filter(item => item.value == effect.type)[0]\n                        .label\n                    }\n                    rightIcon=\"double-caret-vertical\"\n                  />\n                </Select>\n              </FormGroup>\n              <FormGroup>\n                <Button\n                  type=\"submit\"\n                  style={{ width: \"100%\", marginBottom: \"5px\" }}\n                >\n                  Edit\n                </Button>\n                <Button\n                  intent=\"danger\"\n                  onClick={this.onDeleteEffect}\n                  style={{ width: \"100%\" }}\n                >\n                  Delete\n                </Button>\n              </FormGroup>\n            </form>\n          </ControlGroup>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GlobalEffectItem;\n","import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Button, Divider, Collapse } from \"@blueprintjs/core\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addGlobalEffect,\r\n  editGlobalEffect,\r\n  deleteGlobalEffect\r\n} from \"../store/altrp-global-colors/actions\";\r\nimport BaseElement from \"../classes/elements/BaseElement\";\r\nimport GlobalEffectItemAdd from \"./GlobalEffectItemAdd\";\r\nimport GlobalEffectItem from \"./GlobalEffectItem\";\r\nimport { getTemplateDataStorage } from \"../helpers\";\r\n\r\nconst Panel = styled.div`\r\n  background-color: #fff;\r\n  padding: 25px 20px;\r\n  width: 100%;\r\n  margin: 20px 0;\r\n  overflow: auto;\r\n`;\r\n\r\nconst mapStateToProps = state => ({\r\n  effects: state.globalStyles.effects || [],\r\n  colors: state.globalStyles.colors || []\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addEffect: effect => dispatch(addGlobalEffect(effect)),\r\n  editEffect: effect => dispatch(editGlobalEffect(effect)),\r\n  deleteEffect: effect => dispatch(deleteGlobalEffect(effect))\r\n});\r\n\r\nclass GlobalEffects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      new: false,\r\n      effects: props.effects\r\n    };\r\n    this.addItem = this.addItem.bind(this);\r\n    this.deleteItem = this.deleteItem.bind(this);\r\n    this.onSaveEffect = this.onSaveEffect.bind(this);\r\n    this.updateAllTree = this.updateAllTree.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevState, prevProps) {\r\n    if (\r\n      !_.isEqual(\r\n        JSON.stringify(prevProps.colors),\r\n        JSON.stringify(this.props.colors)\r\n      )\r\n    ) {\r\n      console.log(\"IM WATCHING UPDATES\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} effect\r\n   */\r\n  recursiveWalkTree(template, guid, effect) {\r\n    console.log(template);\r\n    if (Array.isArray(template)) {\r\n      template?.forEach(\r\n        /**\r\n         * @param {BaseElement} templateItem\r\n         */\r\n        templateItem => {\r\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\r\n          if (hasGlobal) {\r\n            templateItem.updateAllGlobals(guid, effect);\r\n          }\r\n          this.recursiveWalkTree(templateItem, guid, effect);\r\n        }\r\n      );\r\n    } else this.recursiveUpdate(template, guid, effect);\r\n  }\r\n\r\n  /**\r\n   * @param {BaseElement} template\r\n   * @param {String} guid\r\n   * @param {*} effect\r\n   */\r\n  recursiveUpdate(template, guid, effect) {\r\n    if (template.hasGlobal(guid)) {\r\n      template.updateAllGlobals(guid, effect);\r\n    }\r\n    template.children?.forEach(\r\n      /**\r\n       * @param {BaseElement} child\r\n       */\r\n      child => {\r\n        if (child.hasGlobal(guid)) {\r\n          child.updateAllGlobals(guid, effect);\r\n        }\r\n\r\n        child.children.length > 0 &&\r\n          this.recursiveWalkTree(child.children, guid, effect);\r\n      }\r\n    );\r\n  }\r\n\r\n  addItem(e) {\r\n    this.setState(s => ({ new: !s.new }));\r\n  }\r\n\r\n  deleteItem(id) {\r\n    const confirm = window.confirm(\"Are you shure?\");\r\n    if (confirm) {\r\n      let effects = _.cloneDeep(this.state.effects, []);\r\n      effects = effects.filter(item => item.id !== id);\r\n      this.setState(\r\n        s => ({ ...s, effects: effects }),\r\n        () => this.props.setEffect(effects)\r\n      );\r\n      this.globalStyleResource.delete(id);\r\n    }\r\n  }\r\n  /**\r\n   * Рекурсивно обновляет эффект во всех элементах\r\n   * @param {*} effect\r\n   */\r\n  updateAllTree(effect) {\r\n    getTemplateDataStorage()\r\n      .getRootElement()\r\n      .children.forEach(child => {\r\n        this.recursiveWalkTree(child, effect.guid, effect);\r\n      });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} e\r\n   */\r\n  onSaveEffect() {\r\n    this.setState(s => ({ ...s, new: false }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Panel>\r\n        <Collapse isOpen={this.state.new}>\r\n          <GlobalEffectItemAdd\r\n            addEffect={this.props.addEffect}\r\n            onSaveEffectClose={this.onSaveEffect}\r\n            isNew={true}\r\n          />\r\n        </Collapse>\r\n        {!this.state.new &&\r\n          (this.props.effects.length > 0 ? (\r\n            this.props.effects.map((item, index) => (\r\n              <div key={index} style={{ marginBottom: \"10px\" }}>\r\n                <GlobalEffectItem\r\n                  effect={item}\r\n                  editEffect={this.props.editEffect}\r\n                  deleteEffect={this.props.deleteEffect}\r\n                  onSaveEffectClose={this.onSaveEffect}\r\n                  updateAllTree={this.updateAllTree}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>Effects list empty</div>\r\n          ))}\r\n        <Divider></Divider>\r\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\r\n          {!this.state.new ? \"Add Item\" : \"Cancel\"}\r\n        </Button>\r\n      </Panel>\r\n    );\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalEffects);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  NumericInput,\r\n  MenuItem,\r\n  HTMLSelect\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { altrpFontsSet } from \"../../../../front-app/src/js/constants/fonts\";\r\n\r\nconst familyOptions = _.toPairs(altrpFontsSet).map(([font, type]) => {\r\n  return {\r\n    label: font,\r\n    value: font\r\n  };\r\n});\r\n\r\nconst units = [\"px\", \"em\", \"rem\", \"%\", \"vw\", \"vh\"];\r\n\r\nconst weightOptions = [\r\n  {\r\n    value: \"100\",\r\n    label: \"100\"\r\n  },\r\n  {\r\n    value: \"200\",\r\n    label: \"200\"\r\n  },\r\n  {\r\n    value: \"300\",\r\n    label: \"300\"\r\n  },\r\n  {\r\n    value: \"400\",\r\n    label: \"400\"\r\n  },\r\n  {\r\n    value: \"500\",\r\n    label: \"500\"\r\n  },\r\n  {\r\n    value: \"600\",\r\n    label: \"600\"\r\n  },\r\n  {\r\n    value: \"700\",\r\n    label: \"700\"\r\n  },\r\n  {\r\n    value: \"800\",\r\n    label: \"800\"\r\n  },\r\n  {\r\n    value: \"900\",\r\n    label: \"900\"\r\n  },\r\n  {\r\n    value: \"bold\",\r\n    label: \"bold\"\r\n  },\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\"\r\n  },\r\n  {\r\n    value: \"bolder\",\r\n    label: \"bolder\"\r\n  },\r\n  {\r\n    value: \"lighter\",\r\n    label: \"lighter\"\r\n  }\r\n];\r\nconst transformOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"default\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"capitalize\",\r\n    label: \"capitalize\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"uppercase\",\r\n    label: \"uppercase\",\r\n    key: 2\r\n  },\r\n  {\r\n    value: \"lowercase\",\r\n    label: \"lowercase\",\r\n    key: 3\r\n  }\r\n];\r\nconst styleOptions = [\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"italic\",\r\n    label: \"italic\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"oblique\",\r\n    label: \"oblique\",\r\n    key: 2\r\n  }\r\n];\r\nconst decorationOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"none\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"underline\",\r\n    label: \"underline\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"overline\",\r\n    label: \"overline\",\r\n    key: 3\r\n  },\r\n  {\r\n    value: \"line-through\",\r\n    label: \"line-through\",\r\n    key: 4\r\n  }\r\n];\r\nclass GlobalFontItemAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.defaultValues = {\r\n      name: \"\",\r\n      decoration: \"\",\r\n      family: \"Roboto\",\r\n      lineHeight: 1,\r\n      size: 16,\r\n      spacing: 0,\r\n      sizeUnit: \"px\",\r\n      weight: \"normal\",\r\n      style: \"\",\r\n      transform: \"\"\r\n    };\r\n    const { isNew, font } = props;\r\n    this.state = {\r\n      font: isNew ? this.defaultValues : font,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.changeUnit = this.changeUnit.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.changeWeight = this.changeWeight.bind(this);\r\n    this.changeTransform = this.changeTransform.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n    this.changeDecoration = this.changeDecoration.bind(this);\r\n    this.changeLineHeight = this.changeLineHeight.bind(this);\r\n    this.changeSpacing = this.changeSpacing.bind(this);\r\n    this.onSaveFont = this.onSaveFont.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: {\r\n        ...s.font,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSelect(event, font) {\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: { ...s.font, family: font.value, label: font.label }\r\n    }));\r\n  }\r\n\r\n  onSaveFont(event) {\r\n    event.preventDefault();\r\n    const { font } = this.state;\r\n    const send = {\r\n      type: \"font\",\r\n      settings: JSON.stringify(font)\r\n    };\r\n    this.globalStyleResource.post(send).then(success => {\r\n      const font = {\r\n        id: success.id,\r\n        guid: success.guid,\r\n        ...success.settings\r\n      };\r\n      this.props.addFont(font);\r\n      this.props.onSaveFontClose();\r\n    });\r\n  }\r\n\r\n  changeUnit(event) {\r\n    const unit = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, sizeUnit: unit } }));\r\n  }\r\n\r\n  changeSize(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, size: value } }));\r\n  }\r\n\r\n  changeLineHeight(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, lineHeight: value } }));\r\n  }\r\n\r\n  changeSpacing(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, spacing: value } }));\r\n  }\r\n\r\n  changeWeight(event) {\r\n    const weight = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, weight: weight } }));\r\n  }\r\n\r\n  changeTransform(event) {\r\n    const transform = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, transform: transform } }));\r\n  }\r\n\r\n  changeStyle(event) {\r\n    const style = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, style: style } }));\r\n  }\r\n\r\n  changeDecoration(event) {\r\n    const decoration = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, decoration: decoration } }));\r\n  }\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n    return (\r\n      <>\r\n        <ControlGroup vertical>\r\n          <form onSubmit={this.onSaveFont}>\r\n            <FormGroup label=\"Enter Font Name\">\r\n              <InputGroup\r\n                required\r\n                name=\"name\"\r\n                id=\"text-input\"\r\n                placeholder=\"Enter Font Name\"\r\n                defaultValue={font?.name || \"\"}\r\n                onChange={this.nameChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup label=\"Family\" inline={true}>\r\n              <Select\r\n                itemPredicate={(query, item) => item.label.indexOf(query) >= 0}\r\n                activeItem={\r\n                  familyOptions.filter(item => item.value == font.family)[0]\r\n                }\r\n                itemRenderer={item => (\r\n                  <MenuItem\r\n                    text={item.label}\r\n                    onClick={e => this.onSelect(e, item)}\r\n                  />\r\n                )}\r\n                items={familyOptions}\r\n                noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n              >\r\n                <Button\r\n                  text={\r\n                    familyOptions.filter(item => item.value == font.family)[0]\r\n                      .label\r\n                  }\r\n                  rightIcon=\"double-caret-vertical\"\r\n                />\r\n              </Select>\r\n            </FormGroup>\r\n            <FormGroup label=\"Size\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.size}\r\n                  placeholder=\"Enter size\"\r\n                  min={0}\r\n                  max={200}\r\n                  stepSize={0.1}\r\n                  onValueChange={this.changeSize}\r\n                />\r\n                <HTMLSelect\r\n                  onChange={this.changeUnit}\r\n                  options={units}\r\n                  defaultChecked={font.sizeUnit}\r\n                  value={font.sizeUnit}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Weight\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeWeight}\r\n                  options={weightOptions}\r\n                  defaultChecked={font.weight}\r\n                  value={font.weight}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Transform\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeTransform}\r\n                  options={transformOptions}\r\n                  defaultChecked={font.transform}\r\n                  value={font.transform}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Style\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeStyle}\r\n                  options={styleOptions}\r\n                  defaultChecked={font.style}\r\n                  value={font.style}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Decoration\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <HTMLSelect\r\n                  onChange={this.changeDecoration}\r\n                  options={decorationOptions}\r\n                  defaultChecked={font.decoration}\r\n                  value={font.decoration}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Line height\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.lineHeight}\r\n                  placeholder=\"Enter line height\"\r\n                  stepSize={0.1}\r\n                  min={0.1}\r\n                  max={10}\r\n                  onValueChange={this.changeLineHeight}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup label=\"Letter spacing\" inline={true}>\r\n              <ControlGroup fill={true} vertical={false}>\r\n                <NumericInput\r\n                  style={{\r\n                    width: \"100px\"\r\n                  }}\r\n                  value={font.spacing}\r\n                  placeholder=\"Enter letter spacing\"\r\n                  stepSize={0.1}\r\n                  min={-5}\r\n                  max={10}\r\n                  onValueChange={this.changeSpacing}\r\n                />\r\n              </ControlGroup>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n                Save\r\n              </Button>\r\n            </FormGroup>\r\n          </form>\r\n        </ControlGroup>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalFontItemAdd;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  ControlGroup,\r\n  FormGroup,\r\n  InputGroup,\r\n  Button,\r\n  MenuItem,\r\n  NumericInput,\r\n  HTMLSelect,\r\n  Collapse\r\n} from \"@blueprintjs/core\";\r\nimport { Select } from \"@blueprintjs/select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { altrpFontsSet } from \"../../../../front-app/src/js/constants/fonts\";\r\n\r\nconst familyOptions = _.toPairs(altrpFontsSet).map(([font, type]) => {\r\n  return {\r\n    label: font,\r\n    value: font\r\n  };\r\n});\r\n\r\nconst units = [\"px\", \"em\", \"rem\", \"%\", \"vw\", \"vh\"];\r\n\r\nconst weightOptions = [\r\n  {\r\n    value: \"100\",\r\n    label: \"100\"\r\n  },\r\n  {\r\n    value: \"200\",\r\n    label: \"200\"\r\n  },\r\n  {\r\n    value: \"300\",\r\n    label: \"300\"\r\n  },\r\n  {\r\n    value: \"400\",\r\n    label: \"400\"\r\n  },\r\n  {\r\n    value: \"500\",\r\n    label: \"500\"\r\n  },\r\n  {\r\n    value: \"600\",\r\n    label: \"600\"\r\n  },\r\n  {\r\n    value: \"700\",\r\n    label: \"700\"\r\n  },\r\n  {\r\n    value: \"800\",\r\n    label: \"800\"\r\n  },\r\n  {\r\n    value: \"900\",\r\n    label: \"900\"\r\n  },\r\n  {\r\n    value: \"bold\",\r\n    label: \"bold\"\r\n  },\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\"\r\n  },\r\n  {\r\n    value: \"bolder\",\r\n    label: \"bolder\"\r\n  },\r\n  {\r\n    value: \"lighter\",\r\n    label: \"lighter\"\r\n  }\r\n];\r\nconst transformOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"default\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"capitalize\",\r\n    label: \"capitalize\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"uppercase\",\r\n    label: \"uppercase\",\r\n    key: 2\r\n  },\r\n  {\r\n    value: \"lowercase\",\r\n    label: \"lowercase\",\r\n    key: 3\r\n  }\r\n];\r\nconst styleOptions = [\r\n  {\r\n    value: \"normal\",\r\n    label: \"normal\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"italic\",\r\n    label: \"italic\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"oblique\",\r\n    label: \"oblique\",\r\n    key: 2\r\n  }\r\n];\r\nconst decorationOptions = [\r\n  {\r\n    value: \"none\",\r\n    label: \"none\",\r\n    key: 0\r\n  },\r\n  {\r\n    value: \"underline\",\r\n    label: \"underline\",\r\n    key: 1\r\n  },\r\n  {\r\n    value: \"overline\",\r\n    label: \"overline\",\r\n    key: 3\r\n  },\r\n  {\r\n    value: \"line-through\",\r\n    label: \"line-through\",\r\n    key: 4\r\n  }\r\n];\r\nclass GlobalFontItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.defaultValues = {\r\n      name: \"\",\r\n      decoration: \"\",\r\n      family: \"Roboto\",\r\n      lineHeight: 1,\r\n      size: 16,\r\n      spacing: 0,\r\n      sizeUnit: \"px\",\r\n      weight: \"normal\",\r\n      style: \"\",\r\n      transform: \"\"\r\n    };\r\n\r\n    const { isNew, font } = props;\r\n    this.state = {\r\n      font: isNew ? this.defaultValues : font,\r\n      edit: false\r\n    };\r\n    this.nameChange = this.nameChange.bind(this);\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.changeUnit = this.changeUnit.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.changeWeight = this.changeWeight.bind(this);\r\n    this.changeTransform = this.changeTransform.bind(this);\r\n    this.changeStyle = this.changeStyle.bind(this);\r\n    this.changeDecoration = this.changeDecoration.bind(this);\r\n    this.changeLineHeight = this.changeLineHeight.bind(this);\r\n    this.changeSpacing = this.changeSpacing.bind(this);\r\n    this.onSaveFont = this.onSaveFont.bind(this);\r\n    this.onDeleteFont = this.onDeleteFont.bind(this);\r\n    this.globalStyleResource = new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {Event} event\r\n   */\r\n  nameChange(event) {\r\n    const string = event.target.value;\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: {\r\n        ...s.font,\r\n        name: string\r\n      }\r\n    }));\r\n  }\r\n\r\n  onSelect(event, font) {\r\n    console.log(font);\r\n    this.setState(s => ({\r\n      ...s,\r\n      font: { ...s.font, family: font.value, label: font.label }\r\n    }));\r\n  }\r\n\r\n  changeUnit(event) {\r\n    const unit = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, sizeUnit: unit } }));\r\n  }\r\n\r\n  changeSize(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, size: value } }));\r\n  }\r\n\r\n  changeLineHeight(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, lineHeight: value } }));\r\n  }\r\n\r\n  changeSpacing(value) {\r\n    this.setState(s => ({ ...s, font: { ...s.font, spacing: value } }));\r\n  }\r\n\r\n  changeWeight(event) {\r\n    const weight = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, weight: weight } }));\r\n  }\r\n\r\n  changeTransform(event) {\r\n    const transform = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, transform: transform } }));\r\n  }\r\n\r\n  changeStyle(event) {\r\n    const style = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, style: style } }));\r\n  }\r\n\r\n  changeDecoration(event) {\r\n    const decoration = event.target.value;\r\n    this.setState(s => ({ ...s, font: { ...s.font, decoration: decoration } }));\r\n  }\r\n\r\n  onSaveFont(event) {\r\n    event.preventDefault();\r\n    const { font } = this.state;\r\n    const send = {\r\n      type: \"font\",\r\n      settings: font\r\n    };\r\n    this.globalStyleResource.put(font.id, send).then(success => {\r\n      this.props.editFont(font);\r\n      this.setState(\r\n        s => ({ ...s, edit: false }),\r\n        () => this.props.updateAllTree(font)\r\n      );\r\n    });\r\n  }\r\n\r\n  onDeleteFont(event) {\r\n    const confirmation = window.confirm(\"Are you shure?\");\r\n    event.preventDefault();\r\n    if (confirmation) {\r\n      const { font } = this.state;\r\n      this.globalStyleResource.delete(font.id).then(success => {\r\n        this.props.deleteFont(font);\r\n        // this.props.onSaveEffectClose();\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { font } = this.state;\r\n\r\n    return (\r\n      <>\r\n        {\" \"}\r\n        {!this.props.isNew && (\r\n          <Button\r\n            style={{ width: \"100%\" }}\r\n            onClick={e => this.setState(s => ({ ...s, edit: !s.edit }))}\r\n          >\r\n            {!this.props.isNew && font.name}\r\n          </Button>\r\n        )}\r\n        <Collapse isOpen={this.state.edit}>\r\n          <ControlGroup vertical>\r\n            <form onSubmit={this.onSaveFont}>\r\n              <FormGroup label=\"Enter Font Name\">\r\n                <InputGroup\r\n                  required\r\n                  name=\"name\"\r\n                  id=\"text-input\"\r\n                  placeholder=\"Enter Font Name\"\r\n                  defaultValue={font.name}\r\n                  onChange={this.nameChange}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup label=\"Family\" inline={true}>\r\n                <Select\r\n                  itemPredicate={(query, item) =>\r\n                    item.label.indexOf(query) >= 0\r\n                  }\r\n                  activeItem={\r\n                    familyOptions.filter(item => item.value == font.family)[0]\r\n                  }\r\n                  itemRenderer={item => (\r\n                    <MenuItem\r\n                      text={item.label}\r\n                      onClick={e => this.onSelect(e, item)}\r\n                    />\r\n                  )}\r\n                  items={familyOptions}\r\n                  noResults={<MenuItem disabled={true} text=\"No results.\" />}\r\n                >\r\n                  <Button\r\n                    text={\r\n                      familyOptions.filter(item => item.value == font.family)[0]\r\n                        .label\r\n                    }\r\n                    rightIcon=\"double-caret-vertical\"\r\n                  />\r\n                </Select>\r\n              </FormGroup>\r\n              <FormGroup label=\"Size\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.size}\r\n                    placeholder=\"Enter size\"\r\n                    min={0}\r\n                    max={200}\r\n                    stepSize={0.1}\r\n                    onValueChange={this.changeSize}\r\n                  />\r\n                  <HTMLSelect\r\n                    onChange={this.changeUnit}\r\n                    options={units}\r\n                    defaultChecked={font.sizeUnit}\r\n                    value={font.sizeUnit}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Weight\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeWeight}\r\n                    options={weightOptions}\r\n                    defaultChecked={font.weight}\r\n                    value={font.weight}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Transform\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeTransform}\r\n                    options={transformOptions}\r\n                    defaultChecked={font.transform}\r\n                    value={font.transform}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Style\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeStyle}\r\n                    options={styleOptions}\r\n                    defaultChecked={font.style}\r\n                    value={font.style}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Decoration\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <HTMLSelect\r\n                    onChange={this.changeDecoration}\r\n                    options={decorationOptions}\r\n                    defaultChecked={font.decoration}\r\n                    value={font.decoration}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Line height\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.lineHeight}\r\n                    placeholder=\"Enter line height\"\r\n                    stepSize={0.1}\r\n                    min={0.1}\r\n                    max={10}\r\n                    onValueChange={this.changeLineHeight}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup label=\"Letter spacing\" inline={true}>\r\n                <ControlGroup fill={true} vertical={false}>\r\n                  <NumericInput\r\n                    style={{\r\n                      width: \"100px\"\r\n                    }}\r\n                    value={font.spacing}\r\n                    placeholder=\"Enter letter spacing\"\r\n                    stepSize={0.1}\r\n                    min={-5}\r\n                    max={10}\r\n                    onValueChange={this.changeSpacing}\r\n                  />\r\n                </ControlGroup>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button type=\"submit\" style={{ width: \"100%\" }}>\r\n                  Save\r\n                </Button>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button\r\n                  intent=\"danger\"\r\n                  onClick={this.onDeleteFont}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </FormGroup>\r\n            </form>\r\n          </ControlGroup>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GlobalFontItem;\r\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Divider, Collapse } from \"@blueprintjs/core\";\nimport { connect } from \"react-redux\";\nimport {\n  addGlobalFont,\n  editGlobalFont,\n  deleteGlobalFont\n} from \"../store/altrp-global-colors/actions\";\nimport BaseElement from \"../classes/elements/BaseElement\";\nimport GlobalFontItemAdd from \"./GlobalFontItemAdd\";\nimport GlobalFontItem from \"./GlobalFontItem\";\nimport { getTemplateDataStorage } from \"../helpers\";\n\nconst Panel = styled.div`\n  background-color: #fff;\n  padding: 25px 20px;\n  width: 100%;\n  margin: 20px 0;\n  overflow: auto;\n`;\n\nconst mapStateToProps = state => ({\n  fonts: state.globalStyles.fonts || []\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addFont: font => dispatch(addGlobalFont(font)),\n  editFont: font => dispatch(editGlobalFont(font)),\n  deleteFont: font => dispatch(deleteGlobalFont(font))\n});\n\nclass GlobalFonts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      new: false,\n      fonts: props.fonts\n    };\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.onSaveFont = this.onSaveFont.bind(this);\n    this.updateAllTree = this.updateAllTree.bind(this);\n  }\n\n  /**\n   * @param {BaseElement} template\n   * @param {String} guid\n   * @param {*} font\n   */\n  recursiveWalkTree(template, guid, font) {\n    if (Array.isArray(template)) {\n      template?.forEach(\n        /**\n         * @param {BaseElement} templateItem\n         */\n        templateItem => {\n          const hasGlobal = Boolean(templateItem.hasGlobal(guid));\n          if (hasGlobal) {\n            templateItem.updateAllGlobals(guid, font);\n          }\n          this.recursiveWalkTree(templateItem, guid, font);\n        }\n      );\n    } else this.recursiveUpdate(template, guid, font);\n  }\n\n  /**\n   * @param {BaseElement} template\n   * @param {String} guid\n   * @param {*} font\n   */\n  recursiveUpdate(template, guid, font) {\n    if (template.hasGlobal(guid)) {\n      template.updateAllGlobals(guid, font);\n    }\n    template.children?.forEach(\n      /**\n       * @param {BaseElement} child\n       */\n      child => {\n        if (child.hasGlobal(guid)) {\n          child.updateAllGlobals(guid, font);\n        }\n\n        child.children.length > 0 &&\n          this.recursiveWalkTree(child.children, guid, font);\n      }\n    );\n  }\n\n  addItem(e) {\n    this.setState(\n      s => ({ new: !s.new }),\n      () => {\n        console.log(this.state.new);\n      }\n    );\n  }\n\n  deleteItem(id) {\n    const confirm = window.confirm(\"Are you shure?\");\n    if (confirm) {\n      let effects = _.cloneDeep(this.state.effects, []);\n      effects = effects.filter(item => item.id !== id);\n      this.setState(\n        s => ({ ...s, effects: effects }),\n        () => this.props.setEffect(effects)\n      );\n      this.globalStyleResource.delete(id);\n    }\n  }\n  /**\n   * Рекурсивно обновляет эффект во всех элементах\n   * @param {*} effect\n   */\n  updateAllTree(effect) {\n    getTemplateDataStorage()\n      .getRootElement()\n      .children.forEach(child => {\n        this.recursiveWalkTree(child, effect.guid, effect);\n      });\n  }\n\n  /**\n   *\n   * @param {Event} e\n   */\n  onSaveFont() {\n    this.setState(s => ({ ...s, new: false }));\n  }\n\n  render() {\n    return (\n      <Panel>\n        <Collapse isOpen={this.state.new}>\n          <GlobalFontItemAdd\n            addFont={this.props.addFont}\n            onSaveFontClose={this.onSaveFont}\n            isNew={true}\n          />\n        </Collapse>\n        {!this.state.new &&\n          (this.props.fonts.length > 0 ? (\n            this.props.fonts.map((item, index) => (\n              <div key={index} style={{ marginBottom: \"10px\" }}>\n                <GlobalFontItem\n                  font={item}\n                  editFont={this.props.editFont}\n                  deleteFont={this.props.deleteFont}\n                  onSaveFontClose={this.onSaveFont}\n                  updateAllTree={this.updateAllTree}\n                />\n              </div>\n            ))\n          ) : (\n            <div>Font list empty</div>\n          ))}\n        <Divider></Divider>\n        <Button style={{ width: \"100%\" }} onClick={this.addItem}>\n          {!this.state.new ? \"Add Item\" : \"Cancel\"}\n        </Button>\n      </Panel>\n    );\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalFonts);\n","import Chevron from \"../../svgs/chevron.svg\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getEditor } from \"../helpers\";\r\nimport CONSTANTS from \"../consts\";\r\nconst TEMPLATE_TYPES_WITHOUT_CONDITIONS = [\r\n  'email',\r\n];\r\nclass UpdateButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isShowed: false\r\n    };\r\n    this.saveTemplate = this.saveTemplate.bind(this);\r\n  }\r\n  saveTemplate(e) {\r\n    getEditor().modules.saveImportModule.saveTemplate();\r\n  }\r\n  showModal() {\r\n    this.props.toggleModalWindow();\r\n  }\r\n\r\n  render() {\r\n    let buttonClasses = \"btn font_montserrat font_500 btn_grey\";\r\n    switch (this.props.templateStatus) {\r\n      case CONSTANTS.TEMPLATE_UPDATED:\r\n        {\r\n          buttonClasses += \" btn_disabled \";\r\n        }\r\n        break;\r\n      case CONSTANTS.TEMPLATE_NEED_UPDATE:\r\n        {\r\n          buttonClasses += \" btn_active \";\r\n        }\r\n        break;\r\n    }\r\n    let showTemplateConditions = true;\r\n    if(this.props.templateData.template_type\r\n        && (TEMPLATE_TYPES_WITHOUT_CONDITIONS.indexOf(this.props.templateData.template_type) >= 0)){\r\n      showTemplateConditions = false;\r\n    }\r\n    return (\r\n      <div className={\"control-group d-flex \" + (showTemplateConditions ? '' : 'control-group_single')}>\r\n        <button className={buttonClasses} onClick={this.saveTemplate}>\r\n          UPDATE\r\n        </button>\r\n        {showTemplateConditions && <button onClick={() => this.showModal()} className=\"btn btn_grey\">\r\n          <Chevron className=\"icon\" />\r\n        </button>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status,\r\n    templateData: state.templateData,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(UpdateButton);\r\n","import React, {Component} from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Times from \"../../../svgs/times.svg\";\r\nimport { assetsToggle } from \"../../store/assets-browser/actions\";\r\nimport Resource from \"../Resource\";\r\nimport '../../../sass/assets-browser.scss';\r\nimport toDataURL from \"../../helpers/to-data-url\";\r\n\r\n\r\nclass AssetsBrowser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.tabClick = this.tabClick.bind(this);\r\n    this.toggleBrowser = this.toggleBrowser.bind(this);\r\n    this.selectAsset = this.selectAsset.bind(this);\r\n    this.chooseAsset = this.chooseAsset.bind(this);\r\n    this.state = {\r\n      // activeTab: 'icons',\r\n      activeTab: \"media\",\r\n      tabs: [\r\n        // {\r\n        //   name: 'upload',\r\n        //   title: 'Upload Media File',\r\n        // },\r\n        {\r\n          name: \"icons\",\r\n          title: \"Icons Library\"\r\n        },\r\n        {\r\n          name: \"media\",\r\n          title: \"Media Library\"\r\n        },\r\n        {\r\n          name: \"video\", //TODO: логично было бы эту вкладку назвать Media\r\n          title: \"Video Library\"\r\n        }\r\n      ],\r\n      svgAssets: [],\r\n      assets: this.getAssets(\"media\"),\r\n      // assets: this.getAssets('icons'),\r\n      selectedAsset: null,\r\n      mediaAssets: [],\r\n      videoAssets: []\r\n    };\r\n    this.mediaResource = new Resource({ route: \"/admin/ajax/media?type=image\" });\r\n    this.svgResource  =new Resource({ route: \"/admin/ajax/media?type=svg\" });\r\n    this.videoResource = new Resource({ route: \"/admin/ajax/media?type=media\" });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, nextContext) {\r\n    if(this.props.tabs && prevProps.tabs !== this.props.tabs) {\r\n      let tabs = [...this.state.tabs];\r\n      let activeTab;\r\n      tabs = tabs.filter(tab=>{\r\n        if(this.props.tabs.indexOf(tab.name) !== -1 && ! activeTab){\r\n          activeTab = tab.name;\r\n        }\r\n        return this.props.tabs.indexOf(tab.name) !== -1;\r\n      });\r\n      if(! activeTab){\r\n        activeTab = 'media';\r\n      }\r\n      this.setState(state=>({...state, tabs, activeTab }), ()=>{this.setActiveTab(activeTab)})\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      this.videoResource.getAll()\r\n        .then(videoAssets => this.setState({ videoAssets }));\r\n\r\n      let resSvg = await this.svgResource.getAll();\r\n      this.setState(state => {\r\n        return { ...state, svgAssets: resSvg };\r\n      });\r\n\r\n      let resMedia = await this.mediaResource.getAll();\r\n      this.setState(state => {\r\n        state = { ...state, mediaAssets: resMedia };\r\n        if (state.activeTab === \"media\") {\r\n          state.assets = resMedia;\r\n        }\r\n        return state;\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n    }\r\n\r\n    document.addEventListener('keydown', (event) => {\r\n      if (event.key === \"Escape\") {\r\n          this.toggleBrowser();\r\n      }\r\n    });\r\n  }\r\n  getAssets(tab) {\r\n    if (! tab) {\r\n      tab = this.state.activeTab;\r\n    }\r\n\r\n    switch (tab) {\r\n      case \"icons\": {\r\n        return this.state.svgAssets\r\n        // return [ ...iconsManager().getIconsList(), ...this.state.svgAssets];\r\n      }\r\n      case \"media\": {\r\n        return this.state ? this.state.mediaAssets : [];\r\n      }\r\n    }\r\n    return [];\r\n  }\r\n\r\n  selectAsset(e) {\r\n    let selectedAsset = e.currentTarget.dataset.assetname;\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset };\r\n    });\r\n  }\r\n\r\n  tabClick(e) {\r\n    this.setActiveTab(e.target.dataset.tab);\r\n  }\r\n\r\n  setActiveTab(tab) {\r\n    this.setState(state => {\r\n      return { ...state, activeTab: tab, assets: this.getAssets(tab) };\r\n    });\r\n  }\r\n\r\n  toggleBrowser() {\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  chooseAsset() {\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    this.props.onChoose(asset);\r\n    this.setState(state => {\r\n      return { ...state, selectedAsset: null };\r\n    });\r\n    this.props.dispatch(assetsToggle());\r\n  }\r\n\r\n  /**\r\n   * функция добавляет контент самого изображения к возвращаемым данным об изображении\r\n   * для вставки в HTML картинок в виде данных svg base64\r\n   */\r\n  insertRaw = ()=>{\r\n\r\n    let asset;\r\n    this.state.assets.forEach(item => {\r\n      if (item.name === this.state.selectedAsset) {\r\n        asset = item;\r\n      }\r\n    });\r\n    if (!asset) {\r\n      throw `Asset with name ${this.state.selectedAsset} not found in Assets Browser (${this.state.activeTab})!`;\r\n    }\r\n    if(asset.type === 'svg'){\r\n      const resource = new Resource({route: asset.url});\r\n      resource.getAsText().then(rawSVG=>{\r\n        rawSVG = rawSVG.replace(/<!--[\\s\\S]*?-->/g, '')\r\n        rawSVG = rawSVG.replace(/<![\\s\\S]*?>/g, '')\r\n        rawSVG = rawSVG.replace(/<\\?[\\s\\S]*?\\?>/g, '')\r\n        this.props.onChoose({...asset, rawSVG});\r\n        this.props.dispatch(assetsToggle());\r\n      });\r\n    } else {\r\n      toDataURL(asset.url, (dataUrl)=>{\r\n        this.props.onChoose({...asset, dataUrl});\r\n        this.props.dispatch(assetsToggle());\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { videoAssets, activeTab } = this.state;\r\n    const { rawEnable, } = this.props;\r\n    let classes = \"assets-browser\";\r\n    if (this.props.active) {\r\n      classes += \" assets-browser_active\";\r\n    }\r\n    let buttonClasses = \"btn\";\r\n    if (!this.state.selectedAsset) {\r\n      buttonClasses += \" btn_disabled\";\r\n    } else {\r\n      buttonClasses += \" btn_success\";\r\n    }\r\n    if(! this.props.active){\r\n      return  '';\r\n    }\r\n    return (\r\n      <div className={classes}>\r\n        <div className=\"assets-browser__bg\" onClick={this.toggleBrowser} />\r\n        <div className=\"assets-browser-content\">\r\n          <div className=\"assets-browser-top\">\r\n            <div className=\"caption\">Append Media</div>\r\n            <button className=\"btn btn_bare assets-browser__close\" onClick={this.toggleBrowser} >\r\n              <Times className=\"icon\"/>\r\n            </button>\r\n            <div className=\"assets-browser-nav\">\r\n              {this.state.tabs.map(tab => {\r\n                let tabClasses = \"assets-browser__tab\";\r\n                if (this.state.activeTab === tab.name) {\r\n                  tabClasses += \" assets-browser__tab_active\";\r\n                }\r\n                return (\r\n                  <button\r\n                    className={tabClasses}\r\n                    onClick={this.tabClick}\r\n                    key={tab.name}\r\n                    data-tab={tab.name}\r\n                  >\r\n                    {tab.title}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n          {this.state.assets.length ? (\r\n            <div className=\"assets-browser-choose-frame\">\r\n              {this.state.assets.map(asset => {\r\n                let AssetContent;\r\n                let classes = \"asset-choose\";\r\n                let assetProps = {\r\n                  className: \"asset-choose__content\"\r\n                };\r\n                if (this.state.activeTab === \"icons\") {\r\n                  if(asset.iconComponent) {\r\n                    AssetContent = asset.iconComponent;\r\n                  } else {\r\n                    AssetContent = \"img\";\r\n                    asset.name = asset.filename;\r\n                    assetProps.src = asset.url;\r\n                  }\r\n\r\n                  classes += \" asset-choose_icon\";\r\n                  // assetProps.viewBox = '0 0 20 20';\r\n                  // assetProps.viewport = '0 0 10 10';\r\n                  assetProps.width = \"35\";\r\n                  assetProps.height = \"35\";\r\n                }\r\n                if (this.state.activeTab === \"media\") {\r\n                  AssetContent = \"img\";\r\n                  assetProps.src = asset.url;\r\n                  classes += \" asset-choose_media\";\r\n                  asset.name = asset.filename;\r\n                  asset.assetType = \"media\";\r\n                }\r\n                asset.assetType = this.state.activeTab\r\n                if (this.state.selectedAsset === asset.name) {\r\n                  classes += \" asset-choose_selected\";\r\n                }\r\n                return (\r\n                  <div\r\n                    className={classes}\r\n                    data-assetname={asset.name}\r\n                    key={asset.name}\r\n                    onClick={this.selectAsset}\r\n                  >\r\n                    <AssetContent {...assetProps} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {activeTab === 'video' && <div className=\"assets-browser-choose-frame\">\r\n            {videoAssets.map(video => <div className=\"assets-list__item item col-1\" onClick={this.selectAsset}>\r\n              <svg width=\"43\" height=\"56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"item__icon-background\">\r\n                <path d=\"M30.485 0H1.463C.655 0 0 .655 0 1.926V55c0 .345.655 1 1.463 1h40.074c.808 0 1.463-.655 1.463-1V12.978c0-.696-.093-.92-.257-1.085L31.107.257A.884.884 0 0030.485 0z\" fill=\"#F7F8F9\"></path><path d=\"M31 .151V12h11.849L31 .151z\" fill=\"#E0E1E6\"></path><path d=\"M41.537 56H1.463A1.463 1.463 0 010 54.537V39h43v15.537c0 .808-.655 1.463-1.463 1.463z\" fill=\"#7CA727\"></path><path d=\"M18.262 52h-1.86v-6.07L13.96 52h-.806l-2.444-6.07V52H8.863v-8.67h2.587l2.106 5.238 2.106-5.239h2.6V52zM21.83 52h-1.846v-8.67h4.056c.91 0 1.62.268 2.132.805.52.529.78 1.192.78 1.99 0 .788-.26 1.45-.78 1.988-.52.537-1.23.806-2.132.806h-2.21V52zm1.963-4.706c.373 0 .676-.104.91-.312.243-.217.364-.503.364-.858s-.121-.637-.364-.845c-.234-.217-.537-.325-.91-.325H21.83v2.34h1.963zM33.556 52H31.71v-1.794h-4.147V48.75l3.445-5.42h2.548v5.251h1.118v1.625h-1.118V52zm-1.846-3.419v-3.614l-2.34 3.614h2.34z\" fill=\"#fff\"></path><path d=\"M16.923 28a.964.964 0 01-.444-.108.87.87 0 01-.479-.767v-12.25a.87.87 0 01.48-.768.972.972 0 01.94.03l10.153 6.124c.265.161.427.44.427.739 0 .3-.162.577-.427.738l-10.154 6.125a.968.968 0 01-.496.137zm.923-11.532v9.063L25.357 21l-7.51-4.532z\" fill=\"#D5D7DE\"></path><path d=\"M21 35c-7.72 0-14-6.28-14-14S13.28 7 21 7s14 6.28 14 14-6.28 14-14 14zm0-26.133C14.31 8.867 8.867 14.31 8.867 21c0 6.69 5.443 12.133 12.133 12.133 6.69 0 12.133-5.443 12.133-12.133 0-6.69-5.443-12.133-12.133-12.133z\" fill=\"#D5D7DE\"></path>\r\n              </svg>\r\n            </div>)}\r\n          </div>}\r\n          <div className=\"assets-browser-bottom\">\r\n            <button className={buttonClasses} onClick={this.chooseAsset}>\r\n              Choose\r\n            </button>\r\n            {rawEnable && <button className={buttonClasses + ' ml-3'} onClick={this.insertRaw}>Insert Raw</button>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    ...state.assetsManagerSettings\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AssetsBrowser);\r\n","/**\r\n *\r\n * @param {string} url\r\n * @param {function} callback - функция, в которую передается строка в виду dataUrl\r\n */\r\nexport default function toDataURL(url, callback) {\r\n  var xhr = new XMLHttpRequest();\r\n  xhr.onload = function() {\r\n    var reader = new FileReader();\r\n    reader.onloadend = function() {\r\n      callback(reader.result);\r\n    }\r\n    reader.readAsDataURL(xhr.response);\r\n  };\r\n  xhr.open('GET', url);\r\n  xhr.responseType = 'blob';\r\n  xhr.send();\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentScreen } from \"../store/responsive-switcher/actions\"\r\nimport { iconsManager } from \"../helpers\"\r\nimport CONSTANTS from '../consts'\r\n\r\nclass ResponsiveDdFooter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      screens: CONSTANTS.SCREENS,\r\n      open: false,\r\n    }\r\n  };\r\n  toggleOpen() {\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  };\r\n  setCurrentScreen(screen) {\r\n    this.props.setCurrentScreen(screen);\r\n    this.setState({\r\n      open: !this.state.open,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"responsive-footer-wrapper\">\r\n        <span className={\"responsive-footer-title \" + (this.state.open ? 'responsive-footer-icon__close' : '')} onClick={() => this.toggleOpen()}>{iconsManager().renderIcon(this.props.currentScreen.icon)}</span>\r\n        <div className={\"responsive-footer-submenu \" + (this.state.open ? \"responsive-footer-submenu-open\" : '')} >\r\n          {\r\n            this.state.screens.map(screen => {\r\n              return <button\r\n                className={\"responsive-footer-submenu__item \" + (this.props.currentScreen.id === screen.id ? \"responsive-footer-submenu__item__active\" : '')}\r\n                onClick={() => this.setCurrentScreen(screen)}\r\n                title={screen.name}\r\n                key={screen.id}>\r\n                {iconsManager().renderIcon(screen.icon)}\r\n              </button>\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentScreen: state.currentScreen,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setCurrentScreen })(ResponsiveDdFooter);\r\n","import React, { Component } from 'react';\r\nimport ('../../sass/dialog-content.scss');\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\n\r\nclass DialogTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={\"modal-tab-wrapper \" + (this.props.active ? 'modal-tab-wrapper-active' : '')}>\r\n        <div className=\"modal-tab__image\">\r\n          {\r\n            iconsManager().renderIcon(this.props.tab.icon)\r\n          }\r\n        </div>\r\n        <div className=\"modal-tab__content\">\r\n          <div className=\"modal-tab__title\">{this.props.tab.title}</div>\r\n          <div className=\"modal-tab__description\">{this.props.tab.desc}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default DialogTab;","import React, { Component } from \"react\";\r\nimport (\"../../sass/dialog-content.scss\");\r\nimport { iconsManager } from \"../../../../front-app/src/js/helpers\";\r\nimport Select from \"react-select\";\r\nimport Resource from \"../classes/Resource\";\r\nimport { getEditor, getTemplateId } from \"../helpers\";\r\nimport AltrpSelect from \"../../../../admin/src/components/altrp-select/AltrpSelect\";\r\n\r\nexport default class DialogConditionsTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: [],\r\n      currentLogic: \"include\",\r\n      searchValue: \"\",\r\n      pageOptions: [],\r\n      reportsOptions: []\r\n    };\r\n    this.resource = new Resource({\r\n      route: `/admin/ajax/templates/${getTemplateId()}/conditions`\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let conditions = await this.resource.getAll();\r\n    let pageOptions = await new Resource({\r\n      route: \"/admin/ajax/pages_options\"\r\n    }).getAll();\r\n    let reportsOptions = await new Resource({\r\n      route: \"/admin/ajax/reports_options\"\r\n    }).getAll();\r\n    this.setState({\r\n      value: conditions.data || [],\r\n      pageOptions,\r\n      reportsOptions\r\n      // value: []\r\n    });\r\n  }\r\n\r\n  /**\r\n   * запрос на обнровление условий\r\n   * @param {boolean} close\r\n   * @return {Promise<void>}\r\n   */\r\n  async updateConditions(close = false) {\r\n    let res = await new Resource({\r\n      route: `/admin/ajax/templates/${getTemplateId()}/conditions`\r\n    }).put(\"\", { data: this.state.value });\r\n    if (close) {\r\n      getEditor().toggleModalWindow();\r\n    }\r\n  }\r\n\r\n  addCondition() {\r\n    let randomNumber = Math.floor(1 + Math.random() * (1000 - 1));\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.push({\r\n      object_type: \"all_site\",\r\n      object_ids: [],\r\n      id: randomNumber,\r\n      condition_type: \"include\"\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n    this.forceUpdate();\r\n  }\r\n\r\n  removeCondition(id) {\r\n    let filteredData = this.state.value.filter(data => data.id !== id);\r\n    this.setState({\r\n      value: filteredData\r\n    });\r\n  }\r\n\r\n  handleChange(e, test) {\r\n    if (e.value === \"include\") {\r\n      this.setState({\r\n        currentLogic: e.value\r\n      });\r\n      return;\r\n    } else if (e.value === \"exclude\") {\r\n      this.setState({\r\n        currentLogic: e.value\r\n      });\r\n      return;\r\n    }\r\n    if (this.state.currentLogic === \"include\") {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].include[0] = { ...data[index].include[0], [e.name]: e.value };\r\n      data[index].exclude = [];\r\n      this.setState({\r\n        value: data\r\n      });\r\n    } else if (this.state.currentLogic === \"exclude\") {\r\n      let data = [...this.state.value];\r\n      let index = data.findIndex(obj => obj.id === test.id);\r\n      data[index].exclude[0] = { ...data[index].exclude[0], [e.name]: e.value };\r\n      data[index].include = [];\r\n      this.setState({\r\n        value: data\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * именение object_type для условий\r\n   * @param {object} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleObjectTypeChange = (e, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId) {\r\n        v.object_type = e.value;\r\n        v.object_ids = [];\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  /**\r\n   * изменение спика ид объектов\r\n   * @param {array} ids\r\n   * @param {integer} conditionId\r\n   */\r\n  handleIdsSelect = (ids, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId && ids !== null) {\r\n        v.object_ids = ids.map(id => id.value);\r\n      }\r\n      if (v.id === conditionId && ids === null) {\r\n        v.object_ids = [];\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  /**\r\n   * изменение типа  условия\r\n   * @param {array} e\r\n   * @param {integer} conditionId\r\n   */\r\n  handleChangeConditionType = (e, conditionId) => {\r\n    let value = _.cloneDeep(this.state.value);\r\n    value.forEach(v => {\r\n      if (v.id === conditionId) {\r\n        v.condition_type = e.value;\r\n      }\r\n    });\r\n    this.setState(state => ({\r\n      ...state,\r\n      value\r\n    }));\r\n  };\r\n  handleSelect(e) { }\r\n\r\n  render() {\r\n    const logic_options = [\r\n      { name: \"logic_type\", value: \"include\", label: \"Include\" },\r\n      { name: \"logic_type\", value: \"exclude\", label: \"Exclude\" }\r\n    ];\r\n    const main_options = [\r\n      { name: \"type\", value: \"all_site\", label: \"All Site\" },\r\n      { name: \"type\", value: \"page\", label: \"Page\" },\r\n      { name: \"type\", value: \"report\", label: \"Report\" },\r\n      { name: \"type\", value: \"404\", label: \"404 \" },\r\n      // { name: 'type', value: 'model', label: 'Model' },\r\n      // { name: 'type', value: 'not_authorized_page', label: 'Not Authorized' },\r\n      // { name: 'type', value: 'not_found_page', label: 'Not found: 404' },\r\n    ];\r\n    return (\r\n      <div className=\"modal-condition-tab\">\r\n        <div className=\"modal-condition-image\">\r\n          {iconsManager().renderIcon(\"conditions_tab\")}\r\n        </div>\r\n        <div className=\"modal-condition-title\">\r\n          Where Do You Want to Display Your Template?\r\n        </div>\r\n        <div className=\"modal-condition-text\">\r\n          Set the conditions that determine where your Template is used\r\n          throughout your site.\r\n          <br />\r\n          For example, choose 'Entire Site' to display the template across your\r\n          site.\r\n        </div>\r\n        <div className=\"modal-repeater-fields-wrapper\">\r\n          <div className=\"modal-repeater-fields\">\r\n            {this.state.value.map(test => {\r\n              return (\r\n                <div className=\"modal-repeater-field\" key={test.id}>\r\n                  <AltrpSelect\r\n                    onChange={e => this.handleChangeConditionType(e, test.id)}\r\n                    className=\"modal-repeater-field-c1\"\r\n                    options={logic_options}\r\n                    value={\r\n                      _.find(\r\n                        logic_options,\r\n                        o => o.value === test.condition_type\r\n                      ) || logic_options[0]\r\n                    }\r\n                  />\r\n                  <AltrpSelect\r\n                    onChange={value =>\r\n                      this.handleObjectTypeChange(value, test.id)\r\n                    }\r\n                    className=\"modal-repeater-field-c2\"\r\n                    options={main_options}\r\n                    value={\r\n                      _.find(main_options, o => o.value === test.object_type) ||\r\n                      main_options[0]\r\n                    }\r\n                  // defaultValue={main_options[0]}\r\n                  />\r\n                  {/*{*/}\r\n                  {/*(test.include[0]) &&*/}\r\n                  {/*(test.include[0].type === 'model'*/}\r\n                  {/*&&*/}\r\n                  {/*<Select*/}\r\n                  {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                  {/*className=\"modal-repeater-field-c3\"*/}\r\n                  {/*defaultValue={model_options[0]}*/}\r\n                  {/*options={model_options}*/}\r\n                  {/*/>)*/}\r\n                  {/*}*/}\r\n                  {/*{*/}\r\n                  {/*(test.exclude[0]) &&*/}\r\n                  {/*(test.exclude[0].type === 'model' &&*/}\r\n                  {/*<Select*/}\r\n                  {/*onChange={(e) => this.handleChange(e, test)}*/}\r\n                  {/*className=\"modal-repeater-field-c3\"*/}\r\n                  {/*defaultValue={model_options[0]}*/}\r\n                  {/*options={model_options}*/}\r\n                  {/*/>)*/}\r\n                  {/*}*/}\r\n                  {test.object_type === \"page\" && (\r\n                    <AltrpSelect\r\n                      // value={(test.object_ids || []).map(o=>this.state.pageOptions.find())}\r\n                      value={_.filter(\r\n                        this.state.pageOptions,\r\n                        p =>\r\n                          test.object_ids &&\r\n                          test.object_ids.indexOf(p.value) >= 0\r\n                      )}\r\n                      onChange={e => this.handleIdsSelect(e, test.id)}\r\n                      isMulti={true}\r\n                      closeMenuOnSelect={false}\r\n                      placeholder=\"Choose Pages\"\r\n                      options={this.state.pageOptions}\r\n                      className=\"modal-repeater-field-c3\"\r\n                    />\r\n                  )}\r\n\r\n                  {test.object_type === \"report\" && (\r\n                    <AltrpSelect\r\n                      // value={(test.object_ids || []).map(o=>this.state.pageOptions.find())}\r\n                      value={_.filter(\r\n                        this.state.reportsOptions,\r\n                        p =>\r\n                          test.object_ids &&\r\n                          test.object_ids.indexOf(p.value) >= 0\r\n                      )}\r\n                      onChange={e => this.handleIdsSelect(e, test.id)}\r\n                      isMulti={true}\r\n                      closeMenuOnSelect={false}\r\n                      placeholder=\"Choose Pages\"\r\n                      options={this.state.reportsOptions}\r\n                      className=\"modal-repeater-field-c3\"\r\n                    />\r\n                  )}\r\n                  <button\r\n                    onClick={() => this.removeCondition(test.id)}\r\n                    className=\"modal-repeater-tool-remove\"\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-condition-button-wrapper\">\r\n          <button\r\n            onClick={() => this.addCondition()}\r\n            className=\"modal-condition-button\"\r\n          >\r\n            Add condition\r\n          </button>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button\r\n            onClick={() => this.updateConditions(true)}\r\n            className=\"modal-footer__button modal-save\"\r\n          >\r\n            Save & close\r\n          </button>\r\n          <button\r\n            onClick={() => this.updateConditions()}\r\n            className=\"modal-footer__button modal-next\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport ('../../sass/dialog-content.scss');\r\nimport { iconsManager } from '../../../../front-app/src/js/helpers';\r\nimport { getTemplateId } from '../helpers';\r\nimport Resource from '../classes/Resource';\r\n\r\nexport default class DialogTriggersTab extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: {},\r\n      onLoad: false,\r\n      onScroll: false,\r\n      scrollElement: false,\r\n      onClick: false,\r\n      afterInactivity: false,\r\n      on_exit: false,\r\n    }\r\n    this.resource = new Resource({ route: `/admin/ajax/templates/${getTemplateId()}/settings` })\r\n  }\r\n\r\n  async updateTriggers() {\r\n    const { inactivity, on_click, on_exit, on_page_load, on_scroll, to_element } = this.state.value;\r\n    const { afterInactivity, onClick, onLoad, onScroll, scrollElement } = this.state;\r\n    const data = { \r\n      inactivity: afterInactivity && inactivity,\r\n      on_click: onClick && on_click,\r\n      on_exit,\r\n      on_page_load: onLoad && on_page_load,\r\n      on_scroll: onScroll && on_scroll,\r\n      to_element: scrollElement && to_element\r\n    }\r\n    let res = await this.resource.put('triggers', { data });\r\n    console.log(res);\r\n  }\r\n\r\n\r\n\r\n  /**  Отправляем get request, результат присваиваем  state.value */\r\n  async componentDidMount() {\r\n    let triggers = await this.resource.get('triggers')\r\n    this.setState({\r\n      value: triggers.data,\r\n    })\r\n  }\r\n\r\n  handleChangePage(e) {\r\n    if (e.target.name === 'direction') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            direction: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    } else if (e.target.name === 'size') {\r\n      this.setState({\r\n        value: {\r\n          ...this.state.value,\r\n          on_scroll: {\r\n            ...this.state.value.on_scroll,\r\n            size: e.target.value,\r\n          }\r\n        }\r\n      })\r\n      return;\r\n    }\r\n    this.setState({\r\n      value: {\r\n        ...this.state.value,\r\n        [e.target.name]: e.target.value\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCheck(e) {\r\n    if (e.target.name === 'on_exit') {\r\n      this.setState({\r\n        [e.target.name]: e.target.checked,\r\n        value: {\r\n          ...this.state.value,\r\n          [e.target.name]: e.target.checked,\r\n        }\r\n      })\r\n    }\r\n    this.setState({\r\n      [e.target.name]: e.target.checked\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"triggers-tab\">\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('page_load')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Load</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onLoad &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-pageLoad\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-pageLoad\"\r\n                    onChange={(e) => this.handleChangePage(e)} type=\"number\"\r\n                    min=\"0\"\r\n                    step=\"0.1\"\r\n                    value={this.state.on_page_load}\r\n                    name=\"on_page_load\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onLoad\"\r\n                checked={this.state[name]}\r\n                id=\"toggleSwitch\"\r\n                onChange={(e) => this.handleCheck(e)}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputSelect\">Direction</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <select\r\n                    name=\"direction\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                    id=\"triggers-control-field-inputSelect\">\r\n                    <option value=\"down\">Down</option>\r\n                    <option value=\"up\">Up</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onScroll &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputNumber2\">Within(%)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"100\"\r\n                    id=\"triggers-control-field-inputNumber2\"\r\n                    name=\"size\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                name=\"onScroll\"\r\n                checked={this.state[name]}\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitch2\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitch2\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('scrolling_to')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Scroll To Element</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.scrollElement &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inputText\">Selector</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-inputText\"\r\n                    id=\"triggers-control-field-Text\"\r\n                    type=\"text\"\r\n                    name=\"to_element\"\r\n                    placeholder=\".my class\"\r\n                    defaultValue=''\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"scrollElement\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchText\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchText\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            {\r\n              iconsManager().renderIcon('click')\r\n            }\r\n          </div>\r\n          <div className=\"triggers-title\">On Click</div>\r\n          <div className=\"triggers-control-content\">\r\n            {\r\n              this.state.onClick &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-Clicks\">Clicks</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-Clicks\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    name=\"on_click\"\r\n                    value={this.state.on_click}\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"onClick\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchClicks\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchClicks\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('inactivity')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">After Inactivity</div>\r\n          <div className=\"triggers-control-content\">\r\n            {this.state.afterInactivity &&\r\n              <div className=\"triggers-control-field\">\r\n                <label htmlFor=\"triggers-control-field-inactivity\">Within(sec)</label>\r\n                <div className=\"triggers-control-input-wrapper\">\r\n                  <input className=\"triggers-control-input\"\r\n                    id=\"triggers-control-field-inactivity\"\r\n                    type=\"number\"\r\n                    value={this.state.inactivity}\r\n                    min=\"1\"\r\n                    step=\"0.1\"\r\n                    name=\"inactivity\"\r\n                    onChange={(e) => this.handleChangePage(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n            }\r\n          </div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"afterInactivity\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchInactivity\"\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchInactivity\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"triggers-wrapper\">\r\n          <div className=\"triggers-icon-wrapper\">\r\n            <div className=\"triggers-icon\">\r\n              {\r\n                iconsManager().renderIcon('exit_intent')\r\n              }\r\n            </div>\r\n          </div>\r\n          <div className=\"triggers-title\">On Page Exit Intent</div>\r\n          <div className=\"triggers-control-content-switch\">\r\n            <div className=\"toggle-switch\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"toggle-switch-checkbox\"\r\n                checked={this.state[name]}\r\n                name=\"on_exit\"\r\n                onClick={(e) => this.handleCheck(e)}\r\n                id=\"toggleSwitchIntent\"\r\n                onChange={(e) => this.setState({ on_exit: !this.state.on_exit })}\r\n              />\r\n              <label className=\"toggle-switch-label\" htmlFor=\"toggleSwitchIntent\">\r\n                <span className=\"toggle-switch-inner\" />\r\n                <span className=\"toggle-switch-switch\" />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-save\">Save & close</button>\r\n          <button onClick={() => this.updateTriggers()} className=\"modal-footer__button modal-next\">Next</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Logo from \"../../svgs/logo.svg\";\r\nimport ('../../sass/dialog-content.scss');\r\nimport DialogTab from './DialogTab';\r\nimport DialogConditionsTab from './DialogConditionsTab';\r\nimport DialogTriggersTab from './DialogTriggersTab';\r\nimport {connect} from 'react-redux';\r\n\r\nclass DialogWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let tabs = [\r\n      { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n    ];\r\n    if(['popup'].indexOf(this.props.templateData.template_type) >= 0){\r\n      tabs = [\r\n        { icon: 'conditions_tab', title: 'Conditions', desc: 'Apply current template to these pages' },\r\n        { icon: 'triggers_tab', title: 'Triggers', desc: 'What action the user needs to do for the popup to open.' },\r\n        { icon: 'triggers_tab', title: 'Advanced Rules', desc: 'Requirements that have to be met for the popup to open.' },\r\n      ];\r\n    }\r\n    this.state = {\r\n      activeTab: 'Conditions',\r\n      tabs,\r\n      \r\n    }\r\n  }\r\n\r\n  handleOpen(title) {\r\n    this.setState({\r\n      activeTab: title,\r\n    })\r\n  };\r\n  \r\n  handleClose() {\r\n    this.props.toggleModalWindow()\r\n  };\r\n\r\n  renderSwitch(activeTab) {\r\n    switch (this.state.activeTab) {\r\n      case 'Conditions':\r\n        return <DialogConditionsTab />;\r\n      case 'Triggers':\r\n        return <DialogTriggersTab />;\r\n      case 'Advanced Rules':\r\n        return <div>ADVANCED</div>;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  // (this.state.activeTab === 'Conditions' && <DialogConditionsTab /> ||\r\n  //   this.state.activeTab === 'Triggers' && <div>Triggers</div> ||\r\n  //   this.state.activeTab === 'Advanced Rules' && <div>Advanced Rules</div>\r\n  // )\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"modal-overlay\">\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-header\">\r\n            <Logo className=\"modal-header__logo\" />\r\n            <button onClick={() => this.handleClose()}>X</button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"modal-body__tabs\">\r\n              {\r\n                this.state.tabs.map((tab, index) => {\r\n                  return <div key={tab.title} onClick={() => this.handleOpen(tab.title)}>\r\n                    <DialogTab active={this.state.activeTab === tab.title ? true : false} tab={tab} />\r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n            <div className=\"modal-body__content\">\r\n              {this.renderSwitch(this.state.activeTab)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {templateData: state.templateData};\r\n}\r\nexport default connect(mapStateToProps)(DialogWindow);","import \"./sass/editor-style.scss\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { hot } from \"react-hot-loader\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport Modules from \"./js/classes/Modules\";\r\nimport WidgetsPanel from \"./js/components/WidgetsPanel\";\r\nimport SettingsPanel from \"./js/components/SettingsPanel\";\r\nimport EditorWindow from \"./js/components/EditorWindow\";\r\nimport HistoryPanel from \"./js/components/HistoryPanel\";\r\nimport NavigationPanel from \"./js/components/NavigationPanel\";\r\nimport CommonPanel from \"./js/components/CommonPanel\";\r\nimport GlobalColors from \"./js/components/GlobalColors\";\r\nimport GlobalEffects from \"./js/components/GlobalEffects\";\r\nimport GlobalFonts from \"./js/components/GlobalFonts\";\r\nimport UpdateButton from \"./js/components/UpdateButton\";\r\nimport CONSTANTS from \"./js/consts\";\r\nimport { stopDrag } from \"./js/store/element-drag/actions\";\r\nimport AssetsBrowser from \"./js/classes/modules/AssetsBrowser\";\r\nwindow.Link = \"a\";\r\nimport store, {\r\n  getCurrentElement,\r\n  getCurrentScreen\r\n} from \"../src/js/store/store\";\r\n\r\nimport Logo from \"./svgs/logo.svg\";\r\nimport Navigation from \"./svgs/navigation.svg\";\r\nimport History from \"./svgs/history.svg\";\r\nimport Preview from \"./svgs/preview.svg\";\r\nimport Settings from \"./svgs/settings.svg\";\r\nimport Dots from \"./svgs/dots.svg\";\r\nimport Hamburger from \"./svgs/hamburger.svg\";\r\nimport { contextMenu } from \"react-contexify\";\r\nimport { closeDynamicContent } from \"./js/store/dynamic-content/actions\";\r\nimport ResponsiveDdFooter from \"./js/components/ResponsiveDdFooter\";\r\nimport DialogWindow from \"./js/components/DialogWindow\";\r\nimport { renderAsset } from \"../../front-app/src/js/helpers\";\r\nimport { changeCurrentUser } from \"../../front-app/src/js/store/current-user/actions\";\r\nimport Resource from \"./js/classes/Resource\";\r\nimport AltrpMeta from \"./js/classes/AltrpMeta\";\r\nimport { setEditorMeta } from \"./js/store/editor-metas/actions\";\r\nimport {\r\n  setGlobalColors,\r\n  setGlobalEffects,\r\n  setGlobalFonts\r\n} from \"./js/store/altrp-global-colors/actions\";\r\nimport {setGlobalStylesPresets} from \"./js/store/altrp-global-styles/actions\";\r\n\r\n/**\r\n * Главный класс редактора.<br/>\r\n * Реакт-Компонент.<br/>\r\n * Синглтон, который хранится в глобальной переменной altrpEditor.\r\n *\r\n * */\r\nclass Editor extends Component {\r\n  /**\r\n   * @constructor\r\n   * */\r\n  constructor(props) {\r\n    super(props);\r\n    window.altrpEditor = this;\r\n    this.state = {\r\n      // activePanel: 'widgets',\r\n      activePanel: \"settings\",\r\n      templateStatus: CONSTANTS.TEMPLATE_UPDATED,\r\n      showDialogWindow: false\r\n    };\r\n    this.effectRef = React.createRef();\r\n    this.openPageSettings = this.openPageSettings.bind(this);\r\n    this.openNavigratonPanel = this.openNavigratonPanel.bind(this);\r\n    this.showSettingsPanel = this.showSettingsPanel.bind(this);\r\n    this.showNavigationPanel = this.showNavigationPanel.bind(this);\r\n    this.showHistoryPanel = this.showHistoryPanel.bind(this);\r\n    this.showWidgetsPanel = this.showWidgetsPanel.bind(this);\r\n    this.showCommonPanel = this.showCommonPanel.bind(this);\r\n    this.showGlobalColorsPanel = this.showGlobalColorsPanel.bind(this);\r\n    this.showGlobalFontsPanel = this.showGlobalFontsPanel.bind(this);\r\n    this.showGlobalEffectsPanel = this.showGlobalEffectsPanel.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n    this.onClick = this.onClick.bind(this);\r\n    // store.subscribe(this.templateStatus.bind(this));\r\n  }\r\n  /**\r\n   * Метод подписчик на изменение состояния Редактора из Редакс хранилища\r\n   * */\r\n  // templateStatus() {\r\n  //   let templateStatus = store.getState().templateStatus.status;\r\n  //   if (templateStatus !== this.state.templateStatus) {\r\n  //     this.setState({ ...this.state, templateStatus });\r\n  //   }\r\n  // }\r\n\r\n  /**\r\n   * Инициализация модулей\r\n   */\r\n\r\n  initModules() {\r\n    this.modules = new Modules(this);\r\n    this.modules.loaded();\r\n  }\r\n\r\n  /**\r\n   * Показывает панель со списком виджетов\r\n   */\r\n  showWidgetsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"widgets\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает Dialog окно\r\n   */\r\n  toggleModalWindow() {\r\n    this.setState({\r\n      showDialogWindow: !this.state.showDialogWindow\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Показывает панель с настройками текущего виджета\r\n   */\r\n  showSettingsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"settings\"\r\n    });\r\n  }\r\n  /**\r\n   * Показывает панель с деревом компоненов\r\n   */\r\n  showNavigationPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"navigation\"\r\n    });\r\n  }\r\n\r\n  showHistoryPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"history\"\r\n    });\r\n  }\r\n\r\n  showCommonPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"common\"\r\n    });\r\n  }\r\n\r\n  showGlobalColorsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_colors\"\r\n    });\r\n  }\r\n\r\n  showGlobalFontsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_fonts\"\r\n    });\r\n  }\r\n\r\n  showGlobalEffectsPanel() {\r\n    this.setState({\r\n      ...this.state,\r\n      activePanel: \"global_effects\"\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Сработывает при клике\r\n   */\r\n  onClick() {\r\n    contextMenu.hideAll();\r\n    store.dispatch(closeDynamicContent());\r\n  }\r\n\r\n  /**\r\n   * Обработчик события конец переноса вызывает метод stopDrag переносимого элемента\r\n   * @see ElementWrapper.stopDrag\r\n   */\r\n  onDragEnd() {\r\n    let draggableElement = store.getState().elementDrag.element;\r\n    if (draggableElement && draggableElement.stopDrag) {\r\n      draggableElement.stopDrag();\r\n    }\r\n    store.dispatch(stopDrag());\r\n  }\r\n  /**\r\n   * Вызывается после загрузки шаблона\r\n   * @see {@link SaveImportModule}\r\n   * */\r\n  endLoading() {\r\n    console.log(\"editor loaded\");\r\n  }\r\n\r\n  /**\r\n   * Вызывается после загрузки компонента\r\n   * @see {@link https://ru.reactjs.org/docs/react-component.html#componentdidmount}\r\n   * */\r\n  async componentDidMount() {\r\n    this.initModules();\r\n\r\n    let currentUser = await new Resource({\r\n      route: \"/ajax/current-user\"\r\n    }).getAll();\r\n    currentUser = currentUser.data;\r\n    appStore.dispatch(changeCurrentUser(currentUser));\r\n    const presetColors = await AltrpMeta.getMetaByName(\"preset_colors\");\r\n    let presetGlobalStyles = await AltrpMeta.getMetaByName(\"global_styles\");\r\n    appStore.dispatch(setEditorMeta(presetColors));\r\n    const globalStyles = await new Resource({\r\n      route: \"/admin/ajax/global_template_styles\"\r\n    }).getAll();\r\n    //global colors\r\n    appStore.dispatch(\r\n      setGlobalStylesPresets(presetGlobalStyles.getMetaValue({}))\r\n    );\r\n\r\n    appStore.dispatch(\r\n      setGlobalColors(\r\n        globalStyles.color?.map(color => ({\r\n          id: color.id,\r\n          guid: color.guid,\r\n          ...color.settings\r\n        })) || []\r\n      )\r\n    );\r\n    //global effects\r\n    appStore.dispatch(\r\n      setGlobalEffects(\r\n        globalStyles.effect?.map(effect => ({\r\n          id: effect.id,\r\n          guid: effect.guid,\r\n          ...effect.settings\r\n        })) || []\r\n      )\r\n    );\r\n    //global fonts\r\n    appStore.dispatch(\r\n      setGlobalFonts(\r\n        globalStyles.font?.map(font => ({\r\n          id: font.id,\r\n          guid: font.guid,\r\n          ...font.settings\r\n        })) || []\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Выбирает корневой элемент текущим и открывает панель настроек\r\n   */\r\n\r\n  openPageSettings() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showSettingsPanel();\r\n  }\r\n\r\n  openNavigratonPanel() {\r\n    this.modules.templateDataStorage.setCurrentRootElement();\r\n    this.showNavigationPanel();\r\n  }\r\n\r\n  /**\r\n   * Отрисовка Компонента\r\n   */\r\n  render() {\r\n    let settingsActive = \"\";\r\n    let navigationActive = \"\";\r\n    let templateClasses = `editor editor_${\r\n      store.getState().templateData.template_type\r\n    }`;\r\n    if (this.props.templateStatus === CONSTANTS.TEMPLATE_SAVING) {\r\n      templateClasses += \" editor_saving\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"settings\"\r\n    ) {\r\n      settingsActive = \" active\";\r\n    }\r\n    if (\r\n      store.getState().currentElement.currentElement.getType &&\r\n      store.getState().currentElement.currentElement.getType() ===\r\n        \"root-element\" &&\r\n      this.state.activePanel === \"navigation\"\r\n    ) {\r\n      navigationActive = \" active\";\r\n    }\r\n    return (\r\n      <DndProvider backend={HTML5Backend}>\r\n        <div\r\n          className={templateClasses}\r\n          onClick={this.onClick}\r\n          onDragEnd={this.onDragEnd}\r\n          onKeyDown={this.onKeyDown}\r\n        >\r\n          <div className=\"left-panel\">\r\n            <div className=\"editor-top-panel\">\r\n              <button\r\n                className=\"btn btn_hamburger\"\r\n                onClick={this.showCommonPanel}\r\n              >\r\n                <Hamburger className=\"icon\" />\r\n              </button>\r\n              <a href=\"/admin/templates\" target=\"_blank\" className=\"logo\">\r\n                {window.admin_logo ? (\r\n                  renderAsset(window.admin_logo, { className: \"editor__logo\" })\r\n                ) : (\r\n                  <Logo viewBox=\"0 0 97 35\" className=\"editor__logo\" />\r\n                )}\r\n              </a>\r\n              <button className=\"btn btn_dots\" onClick={this.showWidgetsPanel}>\r\n                <Dots className=\"icon\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"left-panel-main\">\r\n              {this.state.activePanel === \"widgets\" && <WidgetsPanel />}\r\n              {this.state.activePanel === \"settings\" && <SettingsPanel />}\r\n              {this.state.activePanel === \"history\" && <HistoryPanel />}\r\n              {this.state.activePanel === \"navigation\" && <NavigationPanel />}\r\n              {this.state.activePanel === \"common\" && (\r\n                <CommonPanel\r\n                  showGlobalColorsPanel={this.showGlobalColorsPanel}\r\n                  showGlobalFontsPanel={this.showGlobalFontsPanel}\r\n                  showGlobalEffectsPanel={this.showGlobalEffectsPanel}\r\n                />\r\n              )}\r\n              {this.state.activePanel === \"global_colors\" && <GlobalColors />}\r\n              {this.state.activePanel === \"global_fonts\" && <GlobalFonts />}\r\n              {this.state.activePanel === \"global_effects\" && <GlobalEffects />}\r\n            </div>\r\n            <div className=\"editor-bottom-panel d-flex align-content-center justify-center\">\r\n              <button\r\n                className={\"btn btn_settings\" + settingsActive}\r\n                onClick={this.openPageSettings}\r\n              >\r\n                <Settings className=\"icon\" />\r\n              </button>\r\n              <button\r\n                className={\"btn btn_settings\" + navigationActive}\r\n                onClick={this.openNavigratonPanel}\r\n              >\r\n                <Navigation className=\"icon\" />\r\n              </button>\r\n              <button className=\"btn \" onClick={this.showHistoryPanel}>\r\n                <History className=\"icon\" />\r\n              </button>\r\n              <div className=\"btn \">\r\n                <ResponsiveDdFooter />\r\n              </div>\r\n              <button className=\"btn \">\r\n                <Preview className=\"icon\" />\r\n              </button>\r\n              <UpdateButton\r\n                onClick={() => this.toggleModalWindow()}\r\n                toggleModalWindow={() => this.toggleModalWindow()}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-panel\">\r\n            {this.state.showDialogWindow && (\r\n              <DialogWindow\r\n                state={this.state.showDialogWindow}\r\n                toggleModalWindow={() => this.toggleModalWindow()}\r\n              />\r\n            )}\r\n            <EditorWindow />\r\n          </div>\r\n        </div>\r\n        <AssetsBrowser rawEnable={true}/>\r\n      </DndProvider>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    templateStatus: state.templateStatus.status\r\n  };\r\n}\r\n\r\n/**\r\n * Если разработка то включается HMR <br/>\r\n * По умолчанию просто компонент\r\n * @member _export\r\n */\r\nlet _export;\r\nif (process.env.NODE_ENV === \"production\") {\r\n  _export = Editor;\r\n} else {\r\n  _export = hot(module)(connect(mapStateToProps)(Editor));\r\n}\r\n\r\nexport default _export;\r\n","/*! @license https://github.com/onury/invert-color */\n!function(r,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):r.invert=n()}(this,function(){\"use strict\";var t=Math.sqrt(1.05*.05)-.05,n=/^(?:[0-9a-f]{3}){1,2}$/i,i={black:\"#000000\",white:\"#ffffff\",threshold:t};function o(r){if(\"#\"===r.slice(0,1)&&(r=r.slice(1)),!n.test(r))throw new Error('Invalid HEX color: \"'+r+'\"');return 3===r.length&&(r=r[0]+r[0]+r[1]+r[1]+r[2]+r[2]),[parseInt(r.slice(0,2),16),parseInt(r.slice(2,4),16),parseInt(r.slice(4,6),16)]}function f(r){if(!r)throw new Error(\"Invalid color value\");return Array.isArray(r)?r:\"string\"==typeof r?o(r):[r.r,r.g,r.b]}function u(r,n,t){var e=!0===n?i:Object.assign({},i,n);return function(r){var n,t,e=[];for(n=0;n<r.length;n++)t=r[n]/255,e[n]=t<=.03928?t/12.92:Math.pow((t+.055)/1.055,2.4);return.2126*e[0]+.7152*e[1]+.0722*e[2]}(r)>e.threshold?t?o(e.black):e.black:t?o(e.white):e.white}function r(r,n){return void 0===n&&(n=!1),r=f(r),n?u(r,n):\"#\"+r.map(function(r){return n=(255-r).toString(16),void 0===t&&(t=2),(new Array(t).join(\"0\")+n).slice(-t);var n,t}).join(\"\")}return function(r){function n(r,n){r=f(r);var t,e=n?u(r,n,!0):r.map(function(r){return 255-r});return{r:(t=e)[0],g:t[1],b:t[2]}}r.asRGB=n,r.asRgbArray=function(r,n){return r=f(r),n?u(r,n,!0):r.map(function(r){return 255-r})},r.defaultThreshold=t,r.asRgbObject=n}(r||(r={})),r});"],"sourceRoot":""}